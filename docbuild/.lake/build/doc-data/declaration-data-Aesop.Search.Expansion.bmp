{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtUnsafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">fmtUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtUnsafe","kind":"def","line":259,"name":"Aesop.expandGoal.fmtUnsafe","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L259-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtSafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">fmtSafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtSafe","kind":"def","line":255,"name":"Aesop.expandGoal.fmtSafe","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L255-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtNorm\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">fmtNorm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.fmtNorm","kind":"def","line":247,"name":"Aesop.expandGoal.fmtNorm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L247-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal.doUnsafe\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span>.<span class=\"name\">doUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gref</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postponedSafeRules</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">PostponedSafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal.doUnsafe","kind":"def","line":242,"name":"Aesop.expandGoal.doUnsafe","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L242-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.expandGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">expandGoal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gref</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.expandGoal","kind":"def","line":223,"name":"Aesop.expandGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L223-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule.loop\"><span class=\"name\">Aesop</span>.<span class=\"name\">runFirstUnsafeRule</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queue</span> : <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.UnsafeQueue\">UnsafeQueue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> (<a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.UnsafeQueue\">UnsafeQueue</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule.loop","kind":"opaque","line":210,"name":"Aesop.runFirstUnsafeRule.loop","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L210-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runFirstUnsafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postponedSafeRules</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">PostponedSafeRule</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runFirstUnsafeRule","kind":"def","line":199,"name":"Aesop.runFirstUnsafeRule","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L199-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.applyPostponedSafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">applyPostponedSafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">PostponedSafeRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.applyPostponedSafeRule","kind":"def","line":194,"name":"Aesop.applyPostponedSafeRule","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L194-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runFirstSafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runFirstSafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gref</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runFirstSafeRule","kind":"def","line":176,"name":"Aesop.runFirstSafeRule","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L176-L192"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.toEmoji\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">toEmoji</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.toEmoji","kind":"def","line":170,"name":"Aesop.SafeRulesResult.toEmoji","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L170-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.skipped\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">skipped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.skipped","kind":"ctor","line":168,"name":"Aesop.SafeRulesResult.skipped","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L168-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.failed\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">failed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postponed</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">PostponedSafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.failed","kind":"ctor","line":167,"name":"Aesop.SafeRulesResult.failed","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L167-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.succeeded\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">succeeded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newRapps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.succeeded","kind":"ctor","line":166,"name":"Aesop.SafeRulesResult.succeeded","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.proved\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span>.<span class=\"name\">proved</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newRapps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\">SafeRulesResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult.proved","kind":"ctor","line":165,"name":"Aesop.SafeRulesResult.proved","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L165-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRulesResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRulesResult","kind":"inductive","line":164,"name":"Aesop.SafeRulesResult","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L164-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runUnsafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runUnsafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">matchResult</span> : <span class=\"fn\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">UnsafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runUnsafeRule","kind":"def","line":153,"name":"Aesop.runUnsafeRule","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L153-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runSafeRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">runSafeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">matchResult</span> : <span class=\"fn\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRule\">SafeRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">SafeRuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runSafeRule","kind":"def","line":129,"name":"Aesop.runSafeRule","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L129-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runRegularRuleCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">runRegularRuleCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rule</span> : <a href=\"./Aesop/Rule.html#Aesop.RegularRule\">RegularRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indexMatchLocations</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">IndexMatchLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patternSubsts?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">RuleTacOutput</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runRegularRuleCore","kind":"def","line":111,"name":"Aesop.runRegularRuleCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L111-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode.fmt\"><span class=\"name\">Aesop</span>.<span class=\"name\">withRuleTraceNode</span>.<span class=\"name\">fmt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleName</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toEmoji</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suffix</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode.fmt","kind":"def","line":107,"name":"Aesop.withRuleTraceNode.fmt","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L107-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode\"><span class=\"name\">Aesop</span>.<span class=\"name\">withRuleTraceNode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleName</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toEmoji</span> : <span class=\"fn\"><span class=\"fn\">Î±</span> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">suffix</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">Î±</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.withRuleTraceNode","kind":"def","line":102,"name":"Aesop.withRuleTraceNode","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L102-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.addRapps\"><span class=\"name\">Aesop</span>.<span class=\"name\">addRapps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentRef</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rule</span> : <a href=\"./Aesop/Rule.html#Aesop.RegularRule\">RegularRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rapps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.addRapps","kind":"def","line":65,"name":"Aesop.addRapps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L65-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.runRegularRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">runRegularRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleName</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indexMatchLocations</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">IndexMatchLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patternSubsts?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hypTypes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">RuleTacOutput</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.runRegularRuleTac","kind":"def","line":51,"name":"Aesop.runRegularRuleTac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L51-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.isSuccessfulOrPostponed\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">isSuccessfulOrPostponed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">SafeRuleResult</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.isSuccessfulOrPostponed","kind":"def","line":45,"name":"Aesop.SafeRuleResult.isSuccessfulOrPostponed","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L45-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.toEmoji\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">toEmoji</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">SafeRuleResult</a> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.toEmoji","kind":"def","line":41,"name":"Aesop.SafeRuleResult.toEmoji","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L41-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.postponed\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">postponed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <a href=\"./Aesop/Tree/UnsafeQueue.html#Aesop.PostponedSafeRule\">PostponedSafeRule</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">SafeRuleResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.postponed","kind":"ctor","line":37,"name":"Aesop.SafeRuleResult.postponed","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.regular\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span>.<span class=\"name\">regular</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\">SafeRuleResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult.regular","kind":"ctor","line":36,"name":"Aesop.SafeRuleResult.regular","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">SafeRuleResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.SafeRuleResult","kind":"inductive","line":35,"name":"Aesop.SafeRuleResult","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L35-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.isSuccessful\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">isSuccessful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a> â†’ <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.isSuccessful","kind":"def","line":29,"name":"Aesop.RuleResult.isSuccessful","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L29-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.toEmoji\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">toEmoji</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a> â†’ <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.toEmoji","kind":"def","line":24,"name":"Aesop.RuleResult.toEmoji","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L24-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.failed\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">failed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.failed","kind":"ctor","line":20,"name":"Aesop.RuleResult.failed","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.succeeded\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">succeeded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newRapps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.succeeded","kind":"ctor","line":19,"name":"Aesop.RuleResult.succeeded","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult.proved\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span>.<span class=\"name\">proved</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newRapps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">RappRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\">RuleResult</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult.proved","kind":"ctor","line":18,"name":"Aesop.RuleResult.proved","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/Expansion.html#Aesop.RuleResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/Expansion.html#Aesop.RuleResult","kind":"inductive","line":17,"name":"Aesop.RuleResult","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/Expansion.lean#L17-L20"}}],"imports":["Init","Aesop.Search.Expansion.Norm","Aesop.Tree.AddRapp"],"instances":[],"name":"Aesop.Search.Expansion"}