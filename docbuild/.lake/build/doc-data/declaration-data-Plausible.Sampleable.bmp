{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.«command#sample_»\"><span class=\"name\">Plausible</span>.<span class=\"name\">«command#sample_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`#sample type`, where `type` has an instance of `SampleableExt`, prints ten random\nvalues of type `type` using an increasing size parameter.\n\n```lean\n#sample Nat\n-- prints\n-- 0\n-- 0\n-- 2\n-- 24\n-- 64\n-- 76\n-- 5\n-- 132\n-- 8\n-- 449\n-- or some other sequence of numbers\n\n#sample List Int\n-- prints\n-- []\n-- [1, 1]\n-- [-7, 9, -6]\n-- [36]\n-- [-500, 105, 260]\n-- [-290]\n-- [17, 156]\n-- [-2364, -7599, 661, -2411, -3576, 5517, -3823, -968]\n-- [-643]\n-- [11892, 16329, -15095, -15461]\n-- or whatever\n```\n","docLink":"./Plausible/Sampleable.html#Plausible.«command#sample_»","kind":"def","line":358,"name":"Plausible.«command#sample_»","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L358-L398"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.sampleableExt","kind":"instance","line":324,"name":"Plausible.NoShrink.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L324-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">arb</span> : <span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.arbitrary","kind":"instance","line":322,"name":"Plausible.NoShrink.arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L322-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.shrinkable","kind":"instance","line":319,"name":"Plausible.NoShrink.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L319-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.repr\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.repr","kind":"instance","line":317,"name":"Plausible.NoShrink.repr","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L317-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.inhabited\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.inhabited","kind":"instance","line":316,"name":"Plausible.NoShrink.inhabited","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L316-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.get\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.get","kind":"def","line":314,"name":"Plausible.NoShrink.get","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L314-L314"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.NoShrink\">NoShrink</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink.mk","kind":"def","line":313,"name":"Plausible.NoShrink.mk","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L313-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.NoShrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">NoShrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"An annotation for values that should never get shrunk. ","docLink":"./Plausible/Sampleable.html#Plausible.NoShrink","kind":"def","line":306,"name":"Plausible.NoShrink","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L306-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Array.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Array</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Array.sampleableExt","kind":"instance","line":299,"name":"Plausible.Array.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L299-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.ULift.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">ULift</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.ULift.sampleableExt","kind":"instance","line":294,"name":"Plausible.ULift.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L294-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.List.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">List</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.List.sampleableExt","kind":"instance","line":289,"name":"Plausible.List.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L289-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Prop.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prop</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Prop.sampleableExt","kind":"instance","line":282,"name":"Plausible.Prop.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L282-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Prod.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prod</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Prod.sampleableExt","kind":"instance","line":274,"name":"Plausible.Prod.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L274-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Option.sampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Option</span>.<span class=\"name\">sampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Option.sampleableExt","kind":"instance","line":269,"name":"Plausible.Option.sampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L269-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.instSampleableExtSigma\"><span class=\"name\">Plausible</span>.<span class=\"name\">instSampleableExtSigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">((_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.instSampleableExtSigma","kind":"instance","line":264,"name":"Plausible.instSampleableExtSigma","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L264-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Sum.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">Sum</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">Plausible.SampleableExt</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Sum.SampleableExt","kind":"instance","line":256,"name":"Plausible.Sum.SampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L256-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.arbitraryProxy\"><span class=\"name\">Plausible</span>.<span class=\"name\">arbitraryProxy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">SampleableExt.proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.arbitraryProxy","kind":"instance","line":254,"name":"Plausible.arbitraryProxy","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L254-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Subtype.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Subtype</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Subtype.shrinkable","kind":"instance","line":236,"name":"Plausible.Subtype.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L236-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Array.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Array</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Array.shrinkable","kind":"instance","line":233,"name":"Plausible.Array.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L233-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.String.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">String</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.String.shrinkable","kind":"instance","line":230,"name":"Plausible.String.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L230-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.ULift.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">ULift</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.ULift.shrinkable","kind":"instance","line":227,"name":"Plausible.ULift.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L227-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.List.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">List</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Shrink a list of a shrinkable type, either by discarding an element or shrinking an element. ","docLink":"./Plausible/Sampleable.html#Plausible.List.shrinkable","kind":"instance","line":221,"name":"Plausible.List.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L221-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Sigma.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Sigma</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrA</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrB</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">((_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Sigma.shrinkable","kind":"instance","line":212,"name":"Plausible.Sigma.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L212-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Prod.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prod</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrA</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrB</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Prod.shrinkable","kind":"instance","line":205,"name":"Plausible.Prod.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L205-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Option.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Option</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Option.shrinkable","kind":"instance","line":199,"name":"Plausible.Option.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L199-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Char.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Char</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Char.shrinkable","kind":"instance","line":197,"name":"Plausible.Char.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L197-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Bool.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Bool</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Bool.shrinkable","kind":"instance","line":196,"name":"Plausible.Bool.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L196-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Int.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Int</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"`Int.shrinkable` operates like `Nat.shrinkable` but also includes the negative variants. ","docLink":"./Plausible/Sampleable.html#Plausible.Int.shrinkable","kind":"instance","line":188,"name":"Plausible.Int.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L188-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.USize.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">USize</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.USize.shrinkable","kind":"instance","line":185,"name":"Plausible.USize.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L185-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt64.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt64</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.UInt64.shrinkable","kind":"instance","line":182,"name":"Plausible.UInt64.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L182-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt32.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt32</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.UInt32.shrinkable","kind":"instance","line":179,"name":"Plausible.UInt32.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L179-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt16.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt16</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.UInt16.shrinkable","kind":"instance","line":176,"name":"Plausible.UInt16.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L176-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.UInt8.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt8</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.UInt8.shrinkable","kind":"instance","line":173,"name":"Plausible.UInt8.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L173-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.BitVec.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.BitVec.shrinkable","kind":"instance","line":170,"name":"Plausible.BitVec.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L170-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Fin.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Fin</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Fin.shrinkable","kind":"instance","line":167,"name":"Plausible.Fin.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L167-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Nat.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Nat</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Nat.shrinkable","kind":"instance","line":164,"name":"Plausible.Nat.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L164-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Nat.shrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">Nat</span>.<span class=\"name\">shrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"`Nat.shrink' n` creates a list of smaller natural numbers by\nsuccessively dividing `n` by 2 . For example, `Nat.shrink 5 = [2, 1, 0]`. ","docLink":"./Plausible/Sampleable.html#Plausible.Nat.shrink","kind":"def","line":155,"name":"Plausible.Nat.shrink","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L155-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Unit.shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Unit</span>.<span class=\"name\">shrinkable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Unit.shrinkable","kind":"instance","line":152,"name":"Plausible.Unit.shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L152-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.instShrinkableSum\"><span class=\"name\">Plausible</span>.<span class=\"name\">instShrinkableSum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.instShrinkableSum","kind":"instance","line":146,"name":"Plausible.instShrinkableSum","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L146-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.interpSample\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">interpSample</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"First samples a proxy value and interprets it. Especially useful if\nthe proxy and target type are the same. ","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.interpSample","kind":"def","line":137,"name":"Plausible.SampleableExt.interpSample","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L137-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.mkSelfContained\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">mkSelfContained</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"This is kept for backwards compatibility ","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.mkSelfContained","kind":"def","line":132,"name":"Plausible.SampleableExt.mkSelfContained","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L132-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.selfContained\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">selfContained</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Default instance whose purpose is to simply generate values\nof a type directly using the `Arbitrary` instance ","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.selfContained","kind":"instance","line":122,"name":"Plausible.SampleableExt.selfContained","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L122-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.interp\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">interp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.interp","kind":"def","line":115,"name":"Plausible.SampleableExt.interp","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L115-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.sample\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">sample</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.sample","kind":"def","line":114,"name":"Plausible.SampleableExt.sample","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L114-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.shrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.shrink","kind":"def","line":113,"name":"Plausible.SampleableExt.shrink","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L113-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxyRepr\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">proxyRepr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\">proxy</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.proxyRepr","kind":"def","line":112,"name":"Plausible.SampleableExt.proxyRepr","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">proxy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.proxy","kind":"def","line":111,"name":"Plausible.SampleableExt.proxy","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L111-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proxy</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">proxyRepr</span> : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">proxy</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">shrink</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">proxy</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">sample</span> : <span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">proxy</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">interp</span> : <span class=\"fn\"><span class=\"fn\">proxy</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\">SampleableExt</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt.mk","kind":"ctor","line":110,"name":"Plausible.SampleableExt.mk","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.SampleableExt\"><span class=\"name\">Plausible</span>.<span class=\"name\">SampleableExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Sort</a> (max u (v + 2))</div></div>","info":{"doc":"`SampleableExt` can be used in two ways. The first (and most common)\nis to simply generate values of a type directly using the `Gen` monad,\nif this is what you want to do then declaring an `Arbitrary` instance is the\nway to go.\n\nFurthermore it makes it possible to express generators for types that\ndo not lend themselves to introspection, such as `Nat → Nat`.\nIf we test a quantification over functions the\ncounter-examples cannot be shrunken or printed meaningfully.\nFor that purpose, `SampleableExt` provides a proxy representation\n`proxy` that can be printed and shrunken as well\nas interpreted (using `interp`) as an object of the right type. ","docLink":"./Plausible/Sampleable.html#Plausible.SampleableExt","kind":"class","line":98,"name":"Plausible.SampleableExt","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Shrinkable.shrink\"><span class=\"name\">Plausible</span>.<span class=\"name\">Shrinkable</span>.<span class=\"name\">shrink</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Shrinkable.shrink","kind":"def","line":96,"name":"Plausible.Shrinkable.shrink","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L96-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Shrinkable.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">Shrinkable</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">shrink</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\">Shrinkable</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Sampleable.html#Plausible.Shrinkable.mk","kind":"ctor","line":95,"name":"Plausible.Shrinkable.mk","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Sampleable.html#Plausible.Shrinkable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Shrinkable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Given an example `x : α`, `Shrinkable α` gives us a way to shrink it\nand suggest simpler examples. ","docLink":"./Plausible/Sampleable.html#Plausible.Shrinkable","kind":"class","line":93,"name":"Plausible.Shrinkable","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Sampleable.lean#L93-L96"}}],"imports":["Init","Lean.Elab.Command","Lean.Meta.Eval","Plausible.Gen","Plausible.Arbitrary"],"instances":[{"className":"Plausible.SampleableExt","name":"Plausible.SampleableExt.selfContained","typeNames":[]},{"className":"Plausible.Shrinkable","name":"Plausible.instShrinkableSum","typeNames":["Sum"]},{"className":"Plausible.Shrinkable","name":"Plausible.Unit.shrinkable","typeNames":["Unit"]},{"className":"Plausible.Shrinkable","name":"Plausible.Nat.shrinkable","typeNames":["Nat"]},{"className":"Plausible.Shrinkable","name":"Plausible.Fin.shrinkable","typeNames":["Fin"]},{"className":"Plausible.Shrinkable","name":"Plausible.BitVec.shrinkable","typeNames":["BitVec"]},{"className":"Plausible.Shrinkable","name":"Plausible.UInt8.shrinkable","typeNames":["UInt8"]},{"className":"Plausible.Shrinkable","name":"Plausible.UInt16.shrinkable","typeNames":["UInt16"]},{"className":"Plausible.Shrinkable","name":"Plausible.UInt32.shrinkable","typeNames":["UInt32"]},{"className":"Plausible.Shrinkable","name":"Plausible.UInt64.shrinkable","typeNames":["UInt64"]},{"className":"Plausible.Shrinkable","name":"Plausible.USize.shrinkable","typeNames":["USize"]},{"className":"Plausible.Shrinkable","name":"Plausible.Int.shrinkable","typeNames":["Int"]},{"className":"Plausible.Shrinkable","name":"Plausible.Bool.shrinkable","typeNames":["Bool"]},{"className":"Plausible.Shrinkable","name":"Plausible.Char.shrinkable","typeNames":["Char"]},{"className":"Plausible.Shrinkable","name":"Plausible.Option.shrinkable","typeNames":["Option"]},{"className":"Plausible.Shrinkable","name":"Plausible.Prod.shrinkable","typeNames":["Prod"]},{"className":"Plausible.Shrinkable","name":"Plausible.Sigma.shrinkable","typeNames":["Sigma"]},{"className":"Plausible.Shrinkable","name":"Plausible.List.shrinkable","typeNames":["List"]},{"className":"Plausible.Shrinkable","name":"Plausible.ULift.shrinkable","typeNames":["ULift"]},{"className":"Plausible.Shrinkable","name":"Plausible.String.shrinkable","typeNames":["String"]},{"className":"Plausible.Shrinkable","name":"Plausible.Array.shrinkable","typeNames":["Array"]},{"className":"Plausible.Shrinkable","name":"Plausible.Subtype.shrinkable","typeNames":["Subtype"]},{"className":"Plausible.Arbitrary","name":"Plausible.arbitraryProxy","typeNames":["Plausible.SampleableExt.proxy"]},{"className":"Plausible.SampleableExt","name":"Plausible.Sum.SampleableExt","typeNames":["Sum"]},{"className":"Plausible.SampleableExt","name":"Plausible.instSampleableExtSigma","typeNames":["Sigma"]},{"className":"Plausible.SampleableExt","name":"Plausible.Option.sampleableExt","typeNames":["Option"]},{"className":"Plausible.SampleableExt","name":"Plausible.Prod.sampleableExt","typeNames":["Prod"]},{"className":"Plausible.SampleableExt","name":"Plausible.Prop.sampleableExt","typeNames":["_builtin_prop"]},{"className":"Plausible.SampleableExt","name":"Plausible.List.sampleableExt","typeNames":["List"]},{"className":"Plausible.SampleableExt","name":"Plausible.ULift.sampleableExt","typeNames":["ULift"]},{"className":"Plausible.SampleableExt","name":"Plausible.Array.sampleableExt","typeNames":["Array"]},{"className":"Inhabited","name":"Plausible.NoShrink.inhabited","typeNames":["Plausible.NoShrink"]},{"className":"Repr","name":"Plausible.NoShrink.repr","typeNames":["Plausible.NoShrink"]},{"className":"Plausible.Shrinkable","name":"Plausible.NoShrink.shrinkable","typeNames":["Plausible.NoShrink"]},{"className":"Plausible.Arbitrary","name":"Plausible.NoShrink.arbitrary","typeNames":["Plausible.NoShrink"]},{"className":"Plausible.SampleableExt","name":"Plausible.NoShrink.sampleableExt","typeNames":["Plausible.NoShrink"]}],"name":"Plausible.Sampleable"}