{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.natCast_toNat_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">natCast_toNat_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.natCast_toNat_le","kind":"theorem","line":156,"name":"Cardinal.natCast_toNat_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L156-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lift_add_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_lift_add_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> (<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{u, v}</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lift_add_lift","kind":"theorem","line":152,"name":"Cardinal.toNat_lift_add_lift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L152-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_add\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_add","kind":"theorem","line":146,"name":"Cardinal.toNat_add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L146-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_mul\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_mul","kind":"theorem","line":144,"name":"Cardinal.toNat_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L144-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_congr\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_congr","kind":"theorem","line":140,"name":"Cardinal.toNat_congr","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L140-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_lift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{u, v}</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lift","kind":"theorem","line":136,"name":"Cardinal.toNat_lift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L136-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_one_iff_unique\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_eq_one_iff_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_one_iff_unique","kind":"theorem","line":133,"name":"Cardinal.toNat_eq_one_iff_unique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L133-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_one","kind":"theorem","line":129,"name":"Cardinal.toNat_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L129-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_ofNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_eq_ofNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Init.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"A version of `toNat_eq_iff` for literals ","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_ofNat","kind":"theorem","line":124,"name":"Cardinal.toNat_eq_ofNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L124-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_iff\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_iff","kind":"theorem","line":121,"name":"Cardinal.toNat_eq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L121-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.one_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">one_toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.one_toNat","kind":"theorem","line":119,"name":"Cardinal.one_toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L119-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.zero_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">zero_toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.zero_toNat","kind":"theorem","line":116,"name":"Cardinal.zero_toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L116-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.mk_toNat_eq_card\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_toNat_eq_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.mk_toNat_eq_card","kind":"theorem","line":114,"name":"Cardinal.mk_toNat_eq_card","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L114-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.aleph0_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.aleph0_toNat","kind":"theorem","line":110,"name":"Cardinal.aleph0_toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L110-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.mk_toNat_of_infinite\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_toNat_of_infinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.mk_toNat_of_infinite","kind":"theorem","line":107,"name":"Cardinal.mk_toNat_of_infinite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_surjective\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_surjective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_surjective","kind":"theorem","line":104,"name":"Cardinal.toNat_surjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_rightInverse\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_rightInverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <a href=\"./Init/Data/Cast.html#Nat.cast\">Nat.cast</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a></span></span></div></div>","info":{"doc":"`toNat` has a right-inverse: coercion. ","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_rightInverse","kind":"theorem","line":100,"name":"Cardinal.toNat_rightInverse","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L100-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_ofNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Init.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_ofNat","kind":"theorem","line":95,"name":"Cardinal.toNat_ofNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L95-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lt_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_lt_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lt_toNat","kind":"theorem","line":92,"name":"Cardinal.toNat_lt_toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L92-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_le_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_le_toNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_le_toNat","kind":"theorem","line":88,"name":"Cardinal.toNat_le_toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L88-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lt_iff_lt_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_lt_iff_lt_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_lt_iff_lt_of_lt_aleph0","kind":"theorem","line":84,"name":"Cardinal.toNat_lt_iff_lt_of_lt_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L84-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_le_iff_le_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_le_iff_le_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_le_iff_le_of_lt_aleph0","kind":"theorem","line":80,"name":"Cardinal.toNat_le_iff_le_of_lt_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_inj_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_inj_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span></div></div>","info":{"doc":"Two finite cardinals are equal\niff they are equal their `Cardinal.toNat` projections are equal. ","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_inj_of_lt_aleph0","kind":"theorem","line":74,"name":"Cardinal.toNat_inj_of_lt_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L74-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_injOn\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_injOn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.InjOn\">Set.InjOn</a> <span class=\"fn\">(⇑<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_injOn","kind":"theorem","line":72,"name":"Cardinal.toNat_injOn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_monotoneOn\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_monotoneOn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#MonotoneOn\">MonotoneOn</a> <span class=\"fn\">(⇑<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_monotoneOn","kind":"theorem","line":70,"name":"Cardinal.toNat_monotoneOn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_strictMonoOn\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_strictMonoOn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMonoOn\">StrictMonoOn</a> <span class=\"fn\">(⇑<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_strictMonoOn","kind":"theorem","line":66,"name":"Cardinal.toNat_strictMonoOn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L66-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.cast_toNat_eq_iff_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">cast_toNat_eq_iff_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.cast_toNat_eq_iff_lt_aleph0","kind":"theorem","line":59,"name":"Cardinal.cast_toNat_eq_iff_lt_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L59-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.cast_toNat_of_aleph0_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">cast_toNat_of_aleph0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.cast_toNat_of_aleph0_le","kind":"theorem","line":56,"name":"Cardinal.cast_toNat_of_aleph0_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_apply_of_aleph0_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_apply_of_aleph0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_apply_of_aleph0_le","kind":"theorem","line":54,"name":"Cardinal.toNat_apply_of_aleph0_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_apply_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_apply_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Classical.html#Classical.choose\">Classical.choose</a> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_apply_of_lt_aleph0","kind":"theorem","line":49,"name":"Cardinal.toNat_apply_of_lt_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L49-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.cast_toNat_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">cast_toNat_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.cast_toNat_of_lt_aleph0","kind":"theorem","line":45,"name":"Cardinal.cast_toNat_of_lt_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L45-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_pos","kind":"theorem","line":43,"name":"Cardinal.toNat_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_ne_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_ne_zero","kind":"theorem","line":42,"name":"Cardinal.toNat_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_eq_zero","kind":"theorem","line":38,"name":"Cardinal.toNat_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_natCast\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_natCast","kind":"theorem","line":36,"name":"Cardinal.toNat_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_ofENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_ofENat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/ENat/Basic.html#ENat.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_ofENat","kind":"theorem","line":32,"name":"Cardinal.toNat_ofENat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L32-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_toENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat_toENat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/ENat.html#Cardinal.toENat\">toENat</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/ENat/Basic.html#ENat.toNat\">toNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat_toENat","kind":"theorem","line":30,"name":"Cardinal.toNat_toENat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a> <a href=\"./Mathlib/Algebra/GroupWithZero/Hom.html#MonoidWithZeroHom\">→*₀</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>","info":{"doc":"This function sends finite cardinals to the corresponding natural, and infinite cardinals\nto 0. ","docLink":"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat","kind":"def","line":25,"name":"Cardinal.toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/ToNat.lean#L25-L28"}}],"imports":["Init","Mathlib.SetTheory.Cardinal.ENat"],"instances":[],"name":"Mathlib.SetTheory.Cardinal.ToNat"}