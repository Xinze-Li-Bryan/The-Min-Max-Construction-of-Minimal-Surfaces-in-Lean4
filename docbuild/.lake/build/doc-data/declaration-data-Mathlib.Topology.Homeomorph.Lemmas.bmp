{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.pi_map\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">pi_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.pi_map","kind":"theorem","line":543,"name":"IsHomeomorph.pi_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L543-L546"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.sigmaMap\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">sigmaMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">κ</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">κ</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">κ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sigma/Basic.html#Sigma.map\">Sigma.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.sigmaMap","kind":"theorem","line":536,"name":"IsHomeomorph.sigmaMap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L536-L541"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.prodMap\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">prodMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Z</span> → <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.prodMap","kind":"theorem","line":533,"name":"IsHomeomorph.prodMap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L533-L534"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.sumMap\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">sumMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Z</span> → <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">(<a href=\"./Init/Data/Sum/Basic.html#Sum.map\">Sum.map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.sumMap","kind":"theorem","line":530,"name":"IsHomeomorph.sumMap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L530-L531"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_continuous_bijective\"><span class=\"name\">isHomeomorph_iff_continuous_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"A map from a compact space to a T2 space is a homeomorphism iff it is continuous and\nbijective. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_continuous_bijective","kind":"theorem","line":522,"name":"isHomeomorph_iff_continuous_bijective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L522-L528"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_continuous_isClosedMap_bijective\"><span class=\"name\">isHomeomorph_iff_continuous_isClosedMap_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosedMap\">IsClosedMap</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"A map is a homeomorphism iff it is continuous, closed and bijective. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_continuous_isClosedMap_bijective","kind":"theorem","line":516,"name":"isHomeomorph_iff_continuous_isClosedMap_bijective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L516-L520"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_isEmbedding_surjective\"><span class=\"name\">isHomeomorph_iff_isEmbedding_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"A map is a homeomorphism iff it is a surjective embedding. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_isEmbedding_surjective","kind":"theorem","line":510,"name":"isHomeomorph_iff_isEmbedding_surjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L510-L514"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_exists_inverse\"><span class=\"name\">isHomeomorph_iff_exists_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <span class=\"fn\">X</span></span>), <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">g</span></span></span></div></div>","info":{"doc":"A map is a homeomorphism iff it is continuous and has a continuous inverse. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_exists_inverse","kind":"theorem","line":502,"name":"isHomeomorph_iff_exists_inverse","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L502-L508"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_exists_homeomorph\"><span class=\"name\">isHomeomorph_iff_exists_homeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>), <span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"A map is a homeomorphism iff it is the map underlying a bundled homeomorphism `h : X ≃ₜ Y`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#isHomeomorph_iff_exists_homeomorph","kind":"theorem","line":498,"name":"isHomeomorph_iff_exists_homeomorph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L498-L500"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isDenseEmbedding\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isDenseEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseEmbedding\">IsDenseEmbedding</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isDenseEmbedding","kind":"theorem","line":494,"name":"IsHomeomorph.isDenseEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L494-L494"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isClosedEmbedding\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isClosedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsClosedEmbedding\">Topology.IsClosedEmbedding</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isClosedEmbedding","kind":"theorem","line":493,"name":"IsHomeomorph.isClosedEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L493-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isOpenEmbedding\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isOpenEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsOpenEmbedding\">Topology.IsOpenEmbedding</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isOpenEmbedding","kind":"theorem","line":492,"name":"IsHomeomorph.isOpenEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L492-L492"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isEmbedding\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isEmbedding","kind":"theorem","line":491,"name":"IsHomeomorph.isEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L491-L491"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isQuotientMap\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isQuotientMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">Topology.IsQuotientMap</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isQuotientMap","kind":"theorem","line":490,"name":"IsHomeomorph.isQuotientMap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L490-L490"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isInducing\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isInducing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isInducing","kind":"theorem","line":489,"name":"IsHomeomorph.isInducing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L489-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isClosedMap\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">isClosedMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosedMap\">IsClosedMap</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.isClosedMap","kind":"theorem","line":488,"name":"IsHomeomorph.isClosedMap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L488-L488"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph_symm_apply\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">homeomorph_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph\">homeomorph</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.surjInv\">Function.surjInv</a> <span class=\"fn\">⋯</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph_symm_apply","kind":"theorem","line":480,"name":"IsHomeomorph.homeomorph_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L480-L480"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph_apply\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">homeomorph_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph\">homeomorph</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph_apply","kind":"theorem","line":480,"name":"IsHomeomorph.homeomorph_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L480-L480"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph_toEquiv\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">homeomorph_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph\">homeomorph</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.ofBijective\">Equiv.ofBijective</a> <span class=\"fn\">f</span> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph_toEquiv","kind":"theorem","line":480,"name":"IsHomeomorph.homeomorph_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L480-L480"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph\"><span class=\"name\">IsHomeomorph</span>.<span class=\"name\">homeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#IsHomeomorph\">IsHomeomorph</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>","info":{"doc":"Bundled homeomorphism constructed from a map that is a homeomorphism. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#IsHomeomorph.homeomorph","kind":"def","line":479,"name":"IsHomeomorph.homeomorph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L479-L486"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.homeoOfEquivCompactToT2_toEquiv\"><span class=\"name\">Continuous</span>.<span class=\"name\">homeoOfEquivCompactToT2_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.homeoOfEquivCompactToT2\">homeoOfEquivCompactToT2</a></span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.homeoOfEquivCompactToT2_toEquiv","kind":"theorem","line":463,"name":"Continuous.homeoOfEquivCompactToT2_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L463-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.homeoOfEquivCompactToT2\"><span class=\"name\">Continuous</span>.<span class=\"name\">homeoOfEquivCompactToT2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>","info":{"doc":"Continuous equivalences from a compact space to a T2 space are homeomorphisms.\n\nThis is not true when T2 is weakened to T1\n(see `Continuous.homeoOfEquivCompactToT2.t1_counterexample`). ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.homeoOfEquivCompactToT2","kind":"def","line":459,"name":"Continuous.homeoOfEquivCompactToT2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L459-L467"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.continuous_symm_of_equiv_compact_to_t2\"><span class=\"name\">Continuous</span>.<span class=\"name\">continuous_symm_of_equiv_compact_to_t2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Continuous.continuous_symm_of_equiv_compact_to_t2","kind":"theorem","line":452,"name":"Continuous.continuous_symm_of_equiv_compact_to_t2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L452-L457"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.homeomorphImage\"><span class=\"name\">Topology</span>.<span class=\"name\">IsEmbedding</span>.<span class=\"name\">homeomorphImage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑(<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span></div></div>","info":{"doc":"A set is homeomorphic to its image under any embedding. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.homeomorphImage","kind":"def","line":440,"name":"Topology.IsEmbedding.homeomorphImage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L440-L442"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph_of_surjective\"><span class=\"name\">Topology</span>.<span class=\"name\">IsEmbedding</span>.<span class=\"name\">toHomeomorph_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsurj</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>","info":{"doc":"**Alias** of `Topology.IsEmbedding.toHomeomorphOfSurjective`.\n\n---\n\nA surjective embedding is a homeomorphism. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph_of_surjective","kind":"def","line":437,"name":"Topology.IsEmbedding.toHomeomorph_of_surjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L437-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorphOfSurjective_apply\"><span class=\"name\">Topology</span>.<span class=\"name\">IsEmbedding</span>.<span class=\"name\">toHomeomorphOfSurjective_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsurj</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorphOfSurjective\">toHomeomorphOfSurjective</a></span> <span class=\"fn\">hsurj</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorphOfSurjective_apply","kind":"theorem","line":432,"name":"Topology.IsEmbedding.toHomeomorphOfSurjective_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L432-L432"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorphOfSurjective\"><span class=\"name\">Topology</span>.<span class=\"name\">IsEmbedding</span>.<span class=\"name\">toHomeomorphOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsurj</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>","info":{"doc":"A surjective embedding is a homeomorphism. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorphOfSurjective","kind":"def","line":431,"name":"Topology.IsEmbedding.toHomeomorphOfSurjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L431-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.ofIsEmbedding\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">ofIsEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">Topology.IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"**Alias** of `Topology.IsEmbedding.toHomeomorph`.\n\n---\n\nHomeomorphism given an embedding. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.ofIsEmbedding","kind":"def","line":428,"name":"Homeomorph.ofIsEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L428-L429"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph_apply_coe\"><span class=\"name\">Topology</span>.<span class=\"name\">IsEmbedding</span>.<span class=\"name\">toHomeomorph_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph\">toHomeomorph</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph_apply_coe","kind":"theorem","line":422,"name":"Topology.IsEmbedding.toHomeomorph_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L422-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph\"><span class=\"name\">Topology</span>.<span class=\"name\">IsEmbedding</span>.<span class=\"name\">toHomeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsEmbedding\">IsEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"Homeomorphism given an embedding. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Topology.IsEmbedding.toHomeomorph","kind":"def","line":421,"name":"Topology.IsEmbedding.toHomeomorph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L421-L426"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">funSplitAt_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">Y</span>)</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt\">funSplitAt</a> <span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt_apply","kind":"theorem","line":411,"name":"Homeomorph.funSplitAt_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L411-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">funSplitAt_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">Y</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">Y</span>)</span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt\">funSplitAt</a> <span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">f</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if h : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> then <span class=\"fn\"><span class=\"fn\">f</span>.1</span> else <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.2</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">j</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt_symm_apply","kind":"theorem","line":411,"name":"Homeomorph.funSplitAt_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L411-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">funSplitAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <span class=\"fn\">Y</span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Subtype\">}</a> → <span class=\"fn\">Y</span>)</span></div></div>","info":{"doc":"A product of copies of a topological space can be split as the binary product of one copy and\nthe product of all the remaining copies. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funSplitAt","kind":"def","line":409,"name":"Homeomorph.funSplitAt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L409-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piSplitAt_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt\">piSplitAt</a> <span class=\"fn\">i</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">f</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if h : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> then <span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq.rec\">▸</a> <span class=\"fn\"><span class=\"fn\">f</span>.1</span> else <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.2</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">j</span>, <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt_symm_apply","kind":"theorem","line":394,"name":"Homeomorph.piSplitAt_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L394-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piSplitAt_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt\">piSplitAt</a> <span class=\"fn\">i</span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">fun (<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt_apply","kind":"theorem","line":394,"name":"Homeomorph.piSplitAt_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L394-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piSplitAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">j</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span>)</span></div></div>","info":{"doc":"A product of topological spaces can be split as the binary product of one of the spaces and\nthe product of all the remaining spaces. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piSplitAt","kind":"def","line":392,"name":"Homeomorph.piSplitAt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L392-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piEquivPiSubtypeProd_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">((<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd\">piEquivPiSubtypeProd</a> <span class=\"fn\">p</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if h : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> then <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.1</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">x</span>, <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span> else <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.2</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">x</span>, <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd_symm_apply","kind":"theorem","line":379,"name":"Homeomorph.piEquivPiSubtypeProd_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L379-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piEquivPiSubtypeProd_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd\">piEquivPiSubtypeProd</a> <span class=\"fn\">p</span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd_apply","kind":"theorem","line":379,"name":"Homeomorph.piEquivPiSubtypeProd_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L379-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piEquivPiSubtypeProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">ι</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span>)</span></div></div>","info":{"doc":"The topological space `Π i, Y i` can be split as a product by separating the indices in ι\ndepending on whether they satisfy a predicate p or not. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piEquivPiSubtypeProd","kind":"def","line":377,"name":"Homeomorph.piEquivPiSubtypeProd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L377-L388"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod_symm_apply_coe\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">Set</span>.<span class=\"name\">prod_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod\">prod</a> <span class=\"fn\">s</span> <span class=\"fn\">t</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod_symm_apply_coe","kind":"theorem","line":365,"name":"Homeomorph.Set.prod_symm_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L365-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">Set</span>.<span class=\"name\">prod_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\"><span class=\"fn\">c</span>.1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\"><span class=\"fn\">c</span>.2</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod\">prod</a> <span class=\"fn\">s</span> <span class=\"fn\">t</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.1</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.2</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod_apply","kind":"theorem","line":365,"name":"Homeomorph.Set.prod_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L365-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">Set</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">t</span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></div></div>","info":{"doc":"`s ×ˢ t` is homeomorphic to `s × t`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.prod","kind":"def","line":364,"name":"Homeomorph.Set.prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L364-L371"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ_symm_apply_coe\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">Set</span>.<span class=\"name\">univ_symm_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ\">univ</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ_symm_apply_coe","kind":"theorem","line":358,"name":"Homeomorph.Set.univ_symm_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L358-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">Set</span>.<span class=\"name\">univ_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ\">univ</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ_apply","kind":"theorem","line":358,"name":"Homeomorph.Set.univ_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L358-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">Set</span>.<span class=\"name\">univ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">_root_.Set.univ</a></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">X</span></div></div>","info":{"doc":"`Set.univ X` is homeomorphic to `X`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.Set.univ","kind":"def","line":357,"name":"Homeomorph.Set.univ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L357-L362"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image_symm_apply_coe\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">image_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image\">image</a></span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image_symm_apply_coe","kind":"theorem","line":350,"name":"Homeomorph.image_symm_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L350-L350"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image_apply_coe\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">image_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image\">image</a></span> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image_apply_coe","kind":"theorem","line":350,"name":"Homeomorph.image_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L350-L350"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">e</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span></div></div>","info":{"doc":"A subset of a topological space is homeomorphic to its image under a homeomorphism.\n","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image","kind":"def","line":348,"name":"Homeomorph.image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L348-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">finTwoArrow_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow\">finTwoArrow</a>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>) =&gt; <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">x</span>.1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow_symm_apply","kind":"theorem","line":344,"name":"Homeomorph.finTwoArrow_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L344-L344"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">finTwoArrow_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow\">finTwoArrow</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\">X</span></span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow_apply","kind":"theorem","line":344,"name":"Homeomorph.finTwoArrow_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L344-L344"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">finTwoArrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <span class=\"fn\">X</span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></div></div>","info":{"doc":"Homeomorphism between `X² = Fin 2 → X` and `X × X`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.finTwoArrow","kind":"def","line":343,"name":"Homeomorph.finTwoArrow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L343-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piFinTwo_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo\">piFinTwo</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo_apply","kind":"theorem","line":337,"name":"Homeomorph.piFinTwo_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L337-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piFinTwo_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo\">piFinTwo</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">1</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons\">Fin.cons</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.cons\">Fin.cons</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Mathlib/Data/Fin/Basic.html#finZeroElim\">finZeroElim</a>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo_symm_apply","kind":"theorem","line":337,"name":"Homeomorph.piFinTwo_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L337-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piFinTwo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"Homeomorphism between dependent functions `Π i : Fin 2, X i` and `X 0 × X 1`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piFinTwo","kind":"def","line":336,"name":"Homeomorph.piFinTwo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L336-L341"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">funUnique_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique\">funUnique</a> <span class=\"fn\">ι</span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique_apply","kind":"theorem","line":330,"name":"Homeomorph.funUnique_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L330-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">funUnique_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique\">funUnique</a> <span class=\"fn\">ι</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Logic/Unique.html#uniqueElim\">uniqueElim</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique_symm_apply","kind":"theorem","line":330,"name":"Homeomorph.funUnique_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L330-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">funUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <span class=\"fn\">X</span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">X</span></div></div>","info":{"doc":"If `ι` has a unique element, then `ι → X` is homeomorphic to `X`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.funUnique","kind":"def","line":329,"name":"Homeomorph.funUnique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L329-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib_toEquiv\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sigmaProdDistrib_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib\">sigmaProdDistrib</a>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Prod.html#Equiv.sigmaProdDistrib\">Equiv.sigmaProdDistrib</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib_toEquiv","kind":"theorem","line":320,"name":"Homeomorph.sigmaProdDistrib_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L320-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sigmaProdDistrib_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib\">sigmaProdDistrib</a> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.1</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>, <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.1</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">a✝</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Sigma.mk\">⟩</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib_apply","kind":"theorem","line":320,"name":"Homeomorph.sigmaProdDistrib_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L320-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sigmaProdDistrib_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib\">sigmaProdDistrib</a>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Core.html#Sigma.mk\">⟨</a><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.1</span><a href=\"./Init/Core.html#Sigma.mk\">⟩</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a✝</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib_symm_apply","kind":"theorem","line":320,"name":"Homeomorph.sigmaProdDistrib_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L320-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sigmaProdDistrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"`(Σ i, X i) × Y` is homeomorphic to `Σ i, (X i × Y)`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sigmaProdDistrib","kind":"def","line":319,"name":"Homeomorph.sigmaProdDistrib","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L319-L325"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph_toEquiv\"><span class=\"name\">Fin</span>.<span class=\"name\">appendHomeomorph_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph\">appendHomeomorph</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Fin/Basic.html#Fin.appendEquiv\">appendEquiv</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph_toEquiv","kind":"theorem","line":310,"name":"Fin.appendHomeomorph_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L310-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph_apply\"><span class=\"name\">Fin</span>.<span class=\"name\">appendHomeomorph_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fg</span> : <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\">X</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">X</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph\">appendHomeomorph</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">fg</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append\">append</a> <span class=\"fn\"><span class=\"fn\">fg</span>.1</span> <span class=\"fn\"><span class=\"fn\">fg</span>.2</span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph_apply","kind":"theorem","line":302,"name":"Fin.appendHomeomorph_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L302-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph_symm_apply\"><span class=\"name\">Fin</span>.<span class=\"name\">appendHomeomorph_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> → <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph\">appendHomeomorph</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.castAdd\">castAdd</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.natAdd\">natAdd</a> <span class=\"fn\">m</span> <span class=\"fn\">i</span>)</span></span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph_symm_apply","kind":"theorem","line":302,"name":"Fin.appendHomeomorph_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L302-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph\"><span class=\"name\">Fin</span>.<span class=\"name\">appendHomeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\">X</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">X</span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> → <span class=\"fn\">X</span>)</span></div></div>","info":{"doc":"The natural homeomorphism between `(Fin m → X) × (Fin n → X)` and `Fin (m + n) → X`.\n`Fin.appendEquiv` as a homeomorphism ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.appendHomeomorph","kind":"def","line":300,"name":"Fin.appendHomeomorph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L300-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.continuous_append\"><span class=\"name\">Fin</span>.<span class=\"name\">continuous_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\">X</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\">X</span>)</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.append\">append</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Fin.continuous_append","kind":"theorem","line":294,"name":"Fin.continuous_append","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L294-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sumArrowHomeomorphProdArrow_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">ι'</span> → <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow\">sumArrowHomeomorphProdArrow</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow_apply","kind":"theorem","line":278,"name":"Homeomorph.sumArrowHomeomorphProdArrow_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L278-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sumArrowHomeomorphProdArrow_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">ι</span> → <span class=\"fn\">X</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\">ι'</span> → <span class=\"fn\">X</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">ι</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow\">sumArrowHomeomorphProdArrow</a>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">p</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Sum/Basic.html#Sum.elim\">Sum.elim</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow_symm_apply","kind":"theorem","line":278,"name":"Homeomorph.sumArrowHomeomorphProdArrow_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L278-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sumArrowHomeomorphProdArrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">ι</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">ι'</span> → <span class=\"fn\">X</span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <span class=\"fn\">X</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\">ι'</span> → <span class=\"fn\">X</span>)</span></div></div>","info":{"doc":"The natural homeomorphism `(ι ⊕ ι' → X) ≃ₜ (ι → X) × (ι' → X)`.\n`Equiv.sumArrowEquivProdArrow` as a homeomorphism. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumArrowHomeomorphProdArrow","kind":"def","line":276,"name":"Homeomorph.sumArrowHomeomorphProdArrow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L276-L286"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.ulift\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">ulift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, v}</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">X</span></div></div>","info":{"doc":"`ULift X` is homeomorphic to `X`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.ulift","kind":"def","line":270,"name":"Homeomorph.ulift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L270-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr_toEquiv\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongr_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι₁</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι₂</span> → <a href=\"./foundational_types.html\">Type</a> u_10</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i₂</span> : <span class=\"fn\">ι₂</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i₂</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι₁</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i₁</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr\">piCongr</a> <span class=\"fn\">e</span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrRight\">Equiv.piCongrRight</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι₁</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span></span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrLeft\">Equiv.piCongrLeft</a> <span class=\"fn\">Y₂</span> <span class=\"fn\">e</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr_toEquiv","kind":"theorem","line":264,"name":"Homeomorph.piCongr_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L264-L264"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongr_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι₁</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι₂</span> → <a href=\"./foundational_types.html\">Type</a> u_10</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i₂</span> : <span class=\"fn\">ι₂</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i₂</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι₁</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i₁</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₂</span> : <span class=\"fn\">ι₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr\">piCongr</a> <span class=\"fn\">e</span> <span class=\"fn\">F</span>)</span> <span class=\"fn\">a✝</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrLeft\">Equiv.piCongrLeft</a> <span class=\"fn\">Y₂</span> <span class=\"fn\">e</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrRight\">Equiv.piCongrRight</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι₁</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span></span>)</span> <span class=\"fn\">a✝</span>)</span> <span class=\"fn\">i₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr_apply","kind":"theorem","line":264,"name":"Homeomorph.piCongr_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L264-L264"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι₁</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι₂</span> → <a href=\"./foundational_types.html\">Type</a> u_10</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i₂</span> : <span class=\"fn\">ι₂</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i₂</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι₁</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i₁</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i₁</span> : <span class=\"fn\">ι₁</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i₁</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">((<span class=\"fn\">i₂</span> : <span class=\"fn\">ι₂</span>) → <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i₂</span></span>)</span></div></div>","info":{"doc":"`Equiv.piCongr` as a homeomorphism: this is the natural homeomorphism\n`Π i₁, Y₁ i ≃ₜ Π i₂, Y₂ i₂` obtained from a bijection `ι₁ ≃ ι₂` and homeomorphisms\n`Y₁ i₁ ≃ₜ Y₂ (e i₁)` for each `i₁ : ι₁`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongr","kind":"def","line":261,"name":"Homeomorph.piCongr","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L261-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight_symm\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrRight_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight\">piCongrRight</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight\">piCongrRight</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight_symm","kind":"theorem","line":255,"name":"Homeomorph.piCongrRight_symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L255-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight_toEquiv\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrRight_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight\">piCongrRight</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrRight\">Equiv.piCongrRight</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight_toEquiv","kind":"theorem","line":248,"name":"Homeomorph.piCongrRight_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L248-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrRight_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight\">piCongrRight</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">a✝</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">a✝</span> <span class=\"fn\">i</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight_apply","kind":"theorem","line":248,"name":"Homeomorph.piCongrRight_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L248-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₁</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y₂</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₁</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y₂</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₁</span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y₂</span> <span class=\"fn\">i</span></span>)</span></div></div>","info":{"doc":"`Equiv.piCongrRight` as a homeomorphism: this is the natural homeomorphism\n`Π i, Y₁ i ≃ₜ Π j, Y₂ i` obtained from homeomorphisms `Y₁ i ≃ₜ Y₂ i` for each `i`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrRight","kind":"def","line":246,"name":"Homeomorph.piCongrRight","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L246-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_apply_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrLeft_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι'</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft\">piCongrLeft</a> <span class=\"fn\">e</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_apply_apply","kind":"theorem","line":241,"name":"Homeomorph.piCongrLeft_apply_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L241-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrLeft_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι'</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft\">piCongrLeft</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> : <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span></span>) (<span class=\"fn\">x2</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">x2</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_symm_apply","kind":"theorem","line":236,"name":"Homeomorph.piCongrLeft_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L236-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_refl\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrLeft_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft\">piCongrLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.refl\">Equiv.refl</a> <span class=\"fn\">ι</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.refl\">Homeomorph.refl</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_refl","kind":"theorem","line":231,"name":"Homeomorph.piCongrLeft_refl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L231-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrLeft_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι'</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft\">piCongrLeft</a> <span class=\"fn\">e</span>)</span> <span class=\"fn\">a✝</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrLeft'\">Equiv.piCongrLeft'</a> <span class=\"fn\">Y</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a✝</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_apply","kind":"theorem","line":223,"name":"Homeomorph.piCongrLeft_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L223-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_toEquiv\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrLeft_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι'</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft\">piCongrLeft</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.piCongrLeft\">Equiv.piCongrLeft</a> <span class=\"fn\">Y</span> <span class=\"fn\">e</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft_toEquiv","kind":"theorem","line":223,"name":"Homeomorph.piCongrLeft_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L223-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piCongrLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι'</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">ι'</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">ι</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">ι'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i</span>)</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">ι'</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span>)</span></div></div>","info":{"doc":"`Equiv.piCongrLeft` as a homeomorphism: this is the natural homeomorphism\n`Π i, Y (e i) ≃ₜ Π j, Y j` obtained from a bijection `ι ≃ ι'`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piCongrLeft","kind":"def","line":221,"name":"Homeomorph.piCongrLeft","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L221-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piUnique_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique\">piUnique</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique_apply","kind":"theorem","line":214,"name":"Homeomorph.piUnique_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L214-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piUnique_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique\">piUnique</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Logic/Unique.html#uniqueElim\">uniqueElim</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique_symm_apply","kind":"theorem","line":214,"name":"Homeomorph.piUnique_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L214-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">piUnique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">t</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">t</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></span></div></div>","info":{"doc":"The product `Π t : α, f t` of a family of topological spaces is homeomorphic to the\nspace `f ⬝` when `α` only contains `⬝`.\n\nThis is `Equiv.piUnique` as a `Homeomorph`.\n","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.piUnique","kind":"def","line":209,"name":"Homeomorph.piUnique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L209-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumPiEquivProdPi\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sumPiEquivProdPi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">T</span> → <a href=\"./foundational_types.html\">Type</a> u_9</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">st</span> : <span class=\"fn\">S</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">T</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">st</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">st</span> : <span class=\"fn\">S</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">T</span>) → <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">st</span></span>)</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">((<span class=\"fn\">s</span> : <span class=\"fn\">S</span>) → <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">s</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">((<span class=\"fn\">t</span> : <span class=\"fn\">T</span>) → <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">t</span>)</span></span>)</span></div></div>","info":{"doc":"The product over `S ⊕ T` of a family of topological spaces\nis homeomorphic to the product of (the product over `S`) and (the product over `T`).\n\nThis is `Equiv.sumPiEquivProdPi` as a `Homeomorph`.\n","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sumPiEquivProdPi","kind":"def","line":197,"name":"Homeomorph.sumPiEquivProdPi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L197-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.coe_uniqueProd\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">coe_uniqueProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.uniqueProd\">uniqueProd</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.snd\">Prod.snd</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.coe_uniqueProd","kind":"theorem","line":195,"name":"Homeomorph.coe_uniqueProd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L195-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.uniqueProd_symm_apply_snd\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">uniqueProd_symm_apply_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.uniqueProd\">uniqueProd</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">a✝</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique\">prodUnique</a> <span class=\"fn\">Y</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">a✝</span>)</span>.1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.uniqueProd_symm_apply_snd","kind":"theorem","line":190,"name":"Homeomorph.uniqueProd_symm_apply_snd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L190-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.uniqueProd\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">uniqueProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_8)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>","info":{"doc":"`X × {*}` is homeomorphic to `X`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.uniqueProd","kind":"def","line":189,"name":"Homeomorph.uniqueProd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L189-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.coe_prodUnique\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">coe_prodUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique\">prodUnique</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.coe_prodUnique","kind":"theorem","line":187,"name":"Homeomorph.coe_prodUnique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L187-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique_symm_apply_snd\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">prodUnique_symm_apply_snd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique\">prodUnique</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">a✝</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Inhabited.default\">default</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique_symm_apply_snd","kind":"theorem","line":180,"name":"Homeomorph.prodUnique_symm_apply_snd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L180-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">prodUnique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">X</span></div></div>","info":{"doc":"`X × {*}` is homeomorphic to `X`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.prodUnique","kind":"def","line":179,"name":"Homeomorph.prodUnique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L179-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.setCongr\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">setCongr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></div></div>","info":{"doc":"If two sets are equal, then they are homeomorphic. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.setCongr","kind":"def","line":169,"name":"Homeomorph.setCongr","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L169-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sets\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">sets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_eq</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></div></div>","info":{"doc":"A homeomorphism `h : X ≃ₜ Y` lifts to a homeomorphism between sets `s : Set X` and `t : Set Y`\nwhenever `h` maps `s` onto `t`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.sets","kind":"def","line":164,"name":"Homeomorph.sets","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L164-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype_toEquiv\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">subtype_toEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_iff</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\">h</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype\">subtype</a></span> <span class=\"fn\">h_iff</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.toEquiv\">toEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.subtypeEquiv\">subtypeEquiv</a></span> <span class=\"fn\">h_iff</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype_toEquiv","kind":"theorem","line":159,"name":"Homeomorph.subtype_toEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L159-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype_apply_coe\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">subtype_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_iff</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\">h</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype\">subtype</a></span> <span class=\"fn\">h_iff</span>)</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">h</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype_apply_coe","kind":"theorem","line":151,"name":"Homeomorph.subtype_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L151-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype_symm_apply_coe\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">subtype_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_iff</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\">h</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype\">subtype</a></span> <span class=\"fn\">h_iff</span>)</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype_symm_apply_coe","kind":"theorem","line":151,"name":"Homeomorph.subtype_symm_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L151-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_iff</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\">h</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">q</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"A homeomorphism `h : X ≃ₜ Y` lifts to a homeomorphism between subtypes corresponding to\npredicates `p : X → Prop` and `q : Y → Prop` so long as `p = q ∘ h`. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.subtype","kind":"def","line":149,"name":"Homeomorph.subtype","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L149-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comp_continuousWithinAt_iff\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">comp_continuousWithinAt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Z</span> → <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">s</span> <span class=\"fn\">z</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comp_continuousWithinAt_iff","kind":"theorem","line":145,"name":"Homeomorph.comp_continuousWithinAt_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L145-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comp_continuousOn_iff\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">comp_continuousOn_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Z</span> → <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comp_continuousOn_iff","kind":"theorem","line":140,"name":"Homeomorph.comp_continuousOn_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L140-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.locallyCompactSpace_iff\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">locallyCompactSpace_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"The codomain of a homeomorphism is a locally compact space if and only if\nthe domain is a locally compact space. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.locallyCompactSpace_iff","kind":"theorem","line":133,"name":"Homeomorph.locallyCompactSpace_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L133-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.locallyConnectedSpace\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">locallyConnectedSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/LocallyConnected.html#LocallyConnectedSpace\">LocallyConnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/LocallyConnected.html#LocallyConnectedSpace\">LocallyConnectedSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"If the codomain of a homeomorphism is a locally connected space, then the domain is also\na locally connected space. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.locallyConnectedSpace","kind":"theorem","line":122,"name":"Homeomorph.locallyConnectedSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L122-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.map_coclosedCompact\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">map_coclosedCompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(⇑<span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.coclosedCompact\">Filter.coclosedCompact</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.coclosedCompact\">Filter.coclosedCompact</a> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.map_coclosedCompact","kind":"theorem","line":118,"name":"Homeomorph.map_coclosedCompact","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L118-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comap_coclosedCompact\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">comap_coclosedCompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(⇑<span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.coclosedCompact\">Filter.coclosedCompact</a> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.coclosedCompact\">Filter.coclosedCompact</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comap_coclosedCompact","kind":"theorem","line":113,"name":"Homeomorph.comap_coclosedCompact","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L113-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.map_punctured_nhds_eq\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">map_punctured_nhds_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(⇑<span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">(<span class=\"fn\">h</span> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">h</span> <span class=\"fn\">x</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.map_punctured_nhds_eq","kind":"theorem","line":108,"name":"Homeomorph.map_punctured_nhds_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L108-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.totallyDisconnectedSpace\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">totallyDisconnectedSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">tdc</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.totallyDisconnectedSpace","kind":"theorem","line":103,"name":"Homeomorph.totallyDisconnectedSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L103-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isDenseEmbedding\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isDenseEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseEmbedding\">IsDenseEmbedding</a> <span class=\"fn\">⇑<span class=\"fn\">h</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isDenseEmbedding","kind":"theorem","line":100,"name":"Homeomorph.isDenseEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L100-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.compactSpace\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">compactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.compactSpace","kind":"theorem","line":97,"name":"Homeomorph.compactSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L97-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.map_cocompact\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">map_cocompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(⇑<span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.cocompact\">Filter.cocompact</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.cocompact\">Filter.cocompact</a> <span class=\"fn\">Y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.map_cocompact","kind":"theorem","line":93,"name":"Homeomorph.map_cocompact","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L93-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comap_cocompact\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">comap_cocompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(⇑<span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.cocompact\">Filter.cocompact</a> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.cocompact\">Filter.cocompact</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.comap_cocompact","kind":"theorem","line":87,"name":"Homeomorph.comap_cocompact","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L87-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image_connectedComponentIn\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">image_connectedComponentIn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#connectedComponentIn\">connectedComponentIn</a> <span class=\"fn\">s</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#connectedComponentIn\">connectedComponentIn</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>) <span class=\"fn\">(<span class=\"fn\">h</span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.image_connectedComponentIn","kind":"theorem","line":80,"name":"Homeomorph.image_connectedComponentIn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L80-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isConnected_preimage\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isConnected_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsConnected\">IsConnected</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsConnected\">IsConnected</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isConnected_preimage","kind":"theorem","line":75,"name":"Homeomorph.isConnected_preimage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L75-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isConnected_image\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isConnected_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsConnected\">IsConnected</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsConnected\">IsConnected</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isConnected_image","kind":"theorem","line":70,"name":"Homeomorph.isConnected_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L70-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isPreconnected_preimage\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isPreconnected_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsPreconnected\">IsPreconnected</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsPreconnected\">IsPreconnected</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isPreconnected_preimage","kind":"theorem","line":65,"name":"Homeomorph.isPreconnected_preimage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L65-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isPreconnected_image\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isPreconnected_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsPreconnected\">IsPreconnected</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Basic.html#IsPreconnected\">IsPreconnected</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isPreconnected_image","kind":"theorem","line":58,"name":"Homeomorph.isPreconnected_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L58-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isSigmaCompact_preimage\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isSigmaCompact_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/SigmaCompact.html#IsSigmaCompact\">IsSigmaCompact</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/SigmaCompact.html#IsSigmaCompact\">IsSigmaCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"If `h : X → Y` is a homeomorphism, `h⁻¹(s)` is σ-compact iff `s` is. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isSigmaCompact_preimage","kind":"theorem","line":52,"name":"Homeomorph.isSigmaCompact_preimage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L52-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isSigmaCompact_image\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isSigmaCompact_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/SigmaCompact.html#IsSigmaCompact\">IsSigmaCompact</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/SigmaCompact.html#IsSigmaCompact\">IsSigmaCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"If `h : X → Y` is a homeomorphism, `s` is σ-compact iff `h(s)` is. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isSigmaCompact_image","kind":"theorem","line":46,"name":"Homeomorph.isSigmaCompact_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L46-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isCompact_preimage\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isCompact_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"If `h : X → Y` is a homeomorphism, `h⁻¹(s)` is compact iff `s` is. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isCompact_preimage","kind":"theorem","line":41,"name":"Homeomorph.isCompact_preimage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L41-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isCompact_image\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">isCompact_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> (<span class=\"fn\">⇑<span class=\"fn\">h</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"If `h : X → Y` is a homeomorphism, `h(s)` is compact iff `s` is. ","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.isCompact_image","kind":"theorem","line":36,"name":"Homeomorph.isCompact_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L36-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.secondCountableTopology\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">secondCountableTopology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Homeomorph/Lemmas.html#Homeomorph.secondCountableTopology","kind":"theorem","line":32,"name":"Homeomorph.secondCountableTopology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Homeomorph/Lemmas.lean#L32-L34"}}],"imports":["Init","Mathlib.Logic.Equiv.Fin.Basic","Mathlib.Topology.Connected.LocallyConnected","Mathlib.Topology.DenseEmbedding","Mathlib.Topology.Connected.TotallyDisconnected"],"instances":[],"name":"Mathlib.Topology.Homeomorph.Lemmas"}