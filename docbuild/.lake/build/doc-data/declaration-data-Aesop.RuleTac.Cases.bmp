{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">cases</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isRecursiveType</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initialGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newGoals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">excluded</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.go","kind":"opaque","line":61,"name":"Aesop.RuleTac.cases.go","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L61-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.findFirstApplicableHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">cases</span>.<span class=\"name\">findFirstApplicableHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">excluded</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases.findFirstApplicableHyp","kind":"def","line":43,"name":"Aesop.RuleTac.cases.findFirstApplicableHyp","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L43-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isRecursiveType</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/CtorNames.html#Aesop.CtorNames\">CtorNames</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.RuleTac.cases","kind":"def","line":36,"name":"Aesop.RuleTac.cases","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L36-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget.toCasesTarget'\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span>.<span class=\"name\">toCasesTarget'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\">CasesTarget'</a></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget.toCasesTarget'","kind":"def","line":24,"name":"Aesop.CasesTarget.toCasesTarget'","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L24-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.patterns\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget'</span>.<span class=\"name\">patterns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\">CasesTarget'</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.patterns","kind":"ctor","line":22,"name":"Aesop.CasesTarget'.patterns","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.decl\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget'</span>.<span class=\"name\">decl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\">CasesTarget'</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'.decl","kind":"ctor","line":21,"name":"Aesop.CasesTarget'.decl","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesTarget'","kind":"inductive","line":20,"name":"Aesop.CasesTarget'","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L20-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Cases.html#Aesop.CasesPattern.toExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesPattern</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Cases.html#Aesop.CasesPattern.toExpr","kind":"def","line":16,"name":"Aesop.CasesPattern.toExpr","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Cases.lean#L16-L18"}}],"imports":["Init","Aesop.RuleTac.Basic","Aesop.Script.SpecificTactics"],"instances":[],"name":"Aesop.RuleTac.Cases"}