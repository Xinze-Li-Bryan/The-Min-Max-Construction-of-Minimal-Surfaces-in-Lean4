{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.erasePostStateAssignments\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">erasePostStateAssignments</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.erasePostStateAssignments","kind":"def","line":162,"name":"Aesop.Script.LazyStep.erasePostStateAssignments","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L162-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.build\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">build</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput\">BuildInput</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.build","kind":"def","line":150,"name":"Aesop.Script.LazyStep.build","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L150-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.tacticBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">BuildInput</span>.<span class=\"name\">tacticBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput\">BuildInput</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">TacticBuilder</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.tacticBuilder","kind":"def","line":148,"name":"Aesop.Script.LazyStep.BuildInput.tacticBuilder","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L148-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.postGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">BuildInput</span>.<span class=\"name\">postGoals</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput\">BuildInput</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.postGoals","kind":"def","line":147,"name":"Aesop.Script.LazyStep.BuildInput.postGoals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L147-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.tac\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">BuildInput</span>.<span class=\"name\">tac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput\">BuildInput</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.tac","kind":"def","line":146,"name":"Aesop.Script.LazyStep.BuildInput.tac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L146-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">BuildInput</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postGoals</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticBuilder</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">TacticBuilder</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput\">BuildInput</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput.mk","kind":"ctor","line":145,"name":"Aesop.Script.LazyStep.BuildInput.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L145-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">BuildInput</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.BuildInput","kind":"structure","line":145,"name":"Aesop.Script.LazyStep.BuildInput","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L145-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.toStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">toStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.toStep","kind":"def","line":137,"name":"Aesop.Script.LazyStep.toStep","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L137-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.runFirstSuccessfulTacticBuilder.tryTacticBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">runFirstSuccessfulTacticBuilder</span>.<span class=\"name\">tryTacticBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">TacticBuilder</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.Tactic\">Tactic</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.runFirstSuccessfulTacticBuilder.tryTacticBuilder","kind":"def","line":125,"name":"Aesop.Script.LazyStep.runFirstSuccessfulTacticBuilder.tryTacticBuilder","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L125-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.runFirstSuccessfulTacticBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">runFirstSuccessfulTacticBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.Tactic\">Tactic</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.runFirstSuccessfulTacticBuilder","kind":"def","line":112,"name":"Aesop.Script.LazyStep.runFirstSuccessfulTacticBuilder","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L112-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.postGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">postGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.postGoals","kind":"def","line":108,"name":"Aesop.Script.LazyStep.postGoals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.postState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">postState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.postState","kind":"def","line":107,"name":"Aesop.Script.LazyStep.postState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.tacticBuilders_ne\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">tacticBuilders_ne</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.tacticBuilders\">tacticBuilders</a></span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.tacticBuilders_ne","kind":"theorem","line":106,"name":"Aesop.Script.LazyStep.tacticBuilders_ne","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L106-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.tacticBuilders\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">tacticBuilders</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">TacticBuilder</a></span></div></div>","info":{"doc":"A nonempty list of tactic builders. During script generation, Aesop tries to\nexecute the builders from left to right. It then uses the first builder that\nsuccceds (in the sense that when run in `preState` on `preGoal` it produces\nthe `postState` and `postGoals`). The last builder must succeed and is used\nunconditionally.\n","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.tacticBuilders","kind":"def","line":105,"name":"Aesop.Script.LazyStep.tacticBuilders","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L105-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.preGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">preGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.preGoal","kind":"def","line":97,"name":"Aesop.Script.LazyStep.preGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.preState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">preState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.preState","kind":"def","line":96,"name":"Aesop.Script.LazyStep.preState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L96-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticBuilders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">TacticBuilder</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticBuilders_ne</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">tacticBuilders</span>.<a href=\"./Init/Prelude.html#Array.size\">size</a></span> := by simp)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postGoals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">LazyStep</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep.mk","kind":"ctor","line":95,"name":"Aesop.Script.LazyStep.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">LazyStep</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.LazyStep","kind":"structure","line":95,"name":"Aesop.Script.LazyStep","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L95-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.validate.fmtGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">validate</span>.<span class=\"name\">fmtGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">state</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.validate.fmtGoals","kind":"def","line":87,"name":"Aesop.Script.Step.validate.fmtGoals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L87-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.validate\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">validate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">step</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.validate","kind":"def","line":72,"name":"Aesop.Script.Step.validate","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L72-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.render\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">render</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">step</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticState</span> : <a href=\"./Aesop/Script/TacticState.html#Aesop.Script.TacticState\">TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script/TacticState.html#Aesop.Script.TacticState\">TacticState</a>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.render","kind":"def","line":64,"name":"Aesop.Script.Step.render","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L64-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.mkSorry\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">mkSorry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.mkSorry","kind":"def","line":55,"name":"Aesop.Script.Step.mkSorry","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L55-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.instToMessageData\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">instToMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.instToMessageData","kind":"instance","line":51,"name":"Aesop.Script.Step.instToMessageData","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L51-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.sTactic?\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">sTactic?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.STactic\">STactic</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.sTactic?","kind":"def","line":48,"name":"Aesop.Script.Step.sTactic?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.uTactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">uTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/Tactic.html#Aesop.Script.UTactic\">UTactic</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.uTactic","kind":"def","line":45,"name":"Aesop.Script.Step.uTactic","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.TacticState.applyStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">applyStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticState</span> : <a href=\"./Aesop/Script/TacticState.html#Aesop.Script.TacticState\">TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">step</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Script/TacticState.html#Aesop.Script.TacticState\">TacticState</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.TacticState.applyStep","kind":"def","line":38,"name":"Aesop.Script.TacticState.applyStep","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L38-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.postGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">postGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/GoalWithMVars.html#Aesop.GoalWithMVars\">GoalWithMVars</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.postGoals","kind":"def","line":36,"name":"Aesop.Script.Step.postGoals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.postState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">postState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.postState","kind":"def","line":35,"name":"Aesop.Script.Step.postState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.tactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/Tactic.html#Aesop.Script.Tactic\">Tactic</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.tactic","kind":"def","line":34,"name":"Aesop.Script.Step.tactic","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.preGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">preGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.preGoal","kind":"def","line":33,"name":"Aesop.Script.Step.preGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.preState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">preState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.preState","kind":"def","line":32,"name":"Aesop.Script.Step.preState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.Tactic\">Tactic</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postGoals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/GoalWithMVars.html#Aesop.GoalWithMVars\">GoalWithMVars</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script/Step.html#Aesop.Script.Step\">Step</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step.mk","kind":"ctor","line":31,"name":"Aesop.Script.Step.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.Step\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">Step</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.Step","kind":"structure","line":31,"name":"Aesop.Script.Step","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L31-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.mkOnGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">mkOnGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goalPos</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.mkOnGoal","kind":"def","line":24,"name":"Aesop.Script.mkOnGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L24-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Step.html#Aesop.Script.mkOneBasedNumLit\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">mkOneBasedNumLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.NumLit\">Lean.NumLit</a></div></div>","info":{"doc":"","docLink":"./Aesop/Script/Step.html#Aesop.Script.mkOneBasedNumLit","kind":"def","line":20,"name":"Aesop.Script.mkOneBasedNumLit","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Script/Step.lean#L20-L22"}}],"imports":["Init","Aesop.Util.EqualUpToIds","Aesop.Script.Tactic","Aesop.Script.TacticState","Aesop.Script.Util","Aesop.Tracing","Batteries.Tactic.PermuteGoals"],"instances":[{"className":"Lean.ToMessageData","name":"Aesop.Script.Step.instToMessageData","typeNames":["Aesop.Script.Step"]}],"name":"Aesop.Script.Step"}