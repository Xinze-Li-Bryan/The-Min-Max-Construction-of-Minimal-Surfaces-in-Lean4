{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.le\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatch</span>.<span class=\"name\">le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Compare two queue entries by rule priority, rule name and the expressions\ncontained in the match. Higher-priority rules are considered less (since the\nqueues are min-queues). The ordering on expressions is arbitrary. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.le","kind":"def","line":112,"name":"Aesop.ForwardRuleMatch.le","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L112-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.ord\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatch</span>.<span class=\"name\">ord</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>","info":{"doc":"Compare two queue entries by rule priority, rule name and the expressions\ncontained in the match. Higher-priority rules are considered less (since the\nqueues are min-queues). The ordering on expressions is arbitrary. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.ord","kind":"instance","line":104,"name":"Aesop.ForwardRuleMatch.ord","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L104-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instHashableForwardRuleMatch.hash\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashableForwardRuleMatch</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instHashableForwardRuleMatch.hash","kind":"def","line":100,"name":"Aesop.instHashableForwardRuleMatch.hash","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instHashableForwardRuleMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashableForwardRuleMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instHashableForwardRuleMatch","kind":"instance","line":100,"name":"Aesop.instHashableForwardRuleMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instBEqForwardRuleMatch.beq\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqForwardRuleMatch</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a> → <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instBEqForwardRuleMatch.beq","kind":"def","line":100,"name":"Aesop.instBEqForwardRuleMatch.beq","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instBEqForwardRuleMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqForwardRuleMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instBEqForwardRuleMatch","kind":"instance","line":100,"name":"Aesop.instBEqForwardRuleMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedForwardRuleMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedForwardRuleMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedForwardRuleMatch","kind":"instance","line":100,"name":"Aesop.instInhabitedForwardRuleMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedForwardRuleMatch.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedForwardRuleMatch</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedForwardRuleMatch.default","kind":"def","line":100,"name":"Aesop.instInhabitedForwardRuleMatch.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.match\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatch</span>.<span class=\"name\">match</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></div></div>","info":{"doc":"The match. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.match","kind":"def","line":99,"name":"Aesop.ForwardRuleMatch.match","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.rule\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatch</span>.<span class=\"name\">rule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></div></div>","info":{"doc":"The rule to which this match belongs. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.rule","kind":"def","line":97,"name":"Aesop.ForwardRuleMatch.rule","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatch</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rule</span> : <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">«match»</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch.mk","kind":"ctor","line":95,"name":"Aesop.ForwardRuleMatch.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An entry in the forward state queues. Represents a complete match. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch","kind":"structure","line":94,"name":"Aesop.ForwardRuleMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L94-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instOrdCompleteMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instOrdCompleteMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instOrdCompleteMatch","kind":"instance","line":90,"name":"Aesop.instOrdCompleteMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L90-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instEmptyCollectionCompleteMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instEmptyCollectionCompleteMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instEmptyCollectionCompleteMatch","kind":"instance","line":87,"name":"Aesop.instEmptyCollectionCompleteMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L87-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instHashableCompleteMatch.hash\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashableCompleteMatch</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instHashableCompleteMatch.hash","kind":"def","line":83,"name":"Aesop.instHashableCompleteMatch.hash","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instHashableCompleteMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashableCompleteMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instHashableCompleteMatch","kind":"instance","line":83,"name":"Aesop.instHashableCompleteMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instBEqCompleteMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqCompleteMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instBEqCompleteMatch","kind":"instance","line":83,"name":"Aesop.instBEqCompleteMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instBEqCompleteMatch.beq\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqCompleteMatch</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a> → <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instBEqCompleteMatch.beq","kind":"def","line":83,"name":"Aesop.instBEqCompleteMatch.beq","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedCompleteMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedCompleteMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedCompleteMatch","kind":"instance","line":83,"name":"Aesop.instInhabitedCompleteMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedCompleteMatch.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedCompleteMatch</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedCompleteMatch.default","kind":"def","line":83,"name":"Aesop.instInhabitedCompleteMatch.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch.clusterMatches\"><span class=\"name\">Aesop</span>.<span class=\"name\">CompleteMatch</span>.<span class=\"name\">clusterMatches</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch.clusterMatches","kind":"def","line":82,"name":"Aesop.CompleteMatch.clusterMatches","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">CompleteMatch</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clusterMatches</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\">CompleteMatch</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch.mk","kind":"ctor","line":81,"name":"Aesop.CompleteMatch.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">CompleteMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A complete match contains complete matches for each slot cluster. This means\nthere is one match for each slot cluster and each such match contains a\nhypothesis for each of the slots. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.CompleteMatch","kind":"structure","line":78,"name":"Aesop.CompleteMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L78-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.instToMessageData\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">instToMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.instToMessageData","kind":"instance","line":72,"name":"Aesop.Match.instToMessageData","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L72-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.instOrd\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">instOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.instOrd","kind":"instance","line":66,"name":"Aesop.Match.instOrd","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L66-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.instHashable\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">instHashable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.instHashable","kind":"instance","line":59,"name":"Aesop.Match.instHashable","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L59-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.instBEq\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">instBEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.instBEq","kind":"instance","line":56,"name":"Aesop.Match.instBEq","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L56-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.equiv\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Two matches are equivalent if (a) they have the same level; (b) for each\npremise that appears in a slot greater than the matches' level, their\nsubstitution assigns the same value; (c) for each premise that appears in the\nrule's conclusion, their substitution assigns the same value.\n\nIf we already have a match `m₁` and we obtain an equivalent match `m₂`, then\n`m₂` is redundant. This is because if the matches are partial, then `m₂` can be\ncompleted by exactly the hypotheses that complete `m₁`, since they agree on the\npremise instantiations that are relevant for the possible completions. And if\nthe matches are complete, then they assign the same instantiations to the\nvariables that appear in the rule's conclusion, and these are the only ones that\nultimately matter. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.equiv","kind":"def","line":36,"name":"Aesop.Match.equiv","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L36-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedMatch.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedMatch</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedMatch.default","kind":"def","line":32,"name":"Aesop.instInhabitedMatch.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedMatch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.instInhabitedMatch","kind":"instance","line":32,"name":"Aesop.instInhabitedMatch","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.conclusionDeps\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">conclusionDeps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span></div></div>","info":{"doc":"Premises that appear in the rule's conclusion. This is a property of the\nrule, but we include it here because it's used to check whether two matches\nare equivalent. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.conclusionDeps","kind":"def","line":31,"name":"Aesop.Match.conclusionDeps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.forwardDeps\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">forwardDeps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span></div></div>","info":{"doc":"Premises that appear in slots which are as yet unassigned in this match\n(i.e., in slots with index greater than `level`). This is a property of the\nrule, but we include it here because it's used to check whether two matches\nare equivalent. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.forwardDeps","kind":"def","line":27,"name":"Aesop.Match.forwardDeps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.level\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">level</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/SlotIndex.html#Aesop.SlotIndex\">SlotIndex</a></div></div>","info":{"doc":"The match's level is the index of the maximal slot for which a hyp or\npattern substitution has been added to the match. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.level","kind":"def","line":22,"name":"Aesop.Match.level","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.patInstSubsts\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">patInstSubsts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a></span></div></div>","info":{"doc":"The pattern substitutions that have been added to the match. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.patInstSubsts","kind":"def","line":19,"name":"Aesop.Match.patInstSubsts","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.subst\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a></div></div>","info":{"doc":"The substitution induced by the hyps or pattern substitutions added to\nthe slots. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.subst","kind":"def","line":17,"name":"Aesop.Match.subst","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L17-L17"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">subst</span> : <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patInstSubsts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">level</span> : <a href=\"./Aesop/Forward/SlotIndex.html#Aesop.SlotIndex\">SlotIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forwardDeps </span><span class=\"fn\">conclusionDeps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\">Match</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match.mk","kind":"ctor","line":14,"name":"Aesop.Match.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L14-L14"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/Match/Types.html#Aesop.Match\"><span class=\"name\">Aesop</span>.<span class=\"name\">Match</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A match associates hypotheses to (a prefix of) the slots of a slot\ncluster. ","docLink":"./Aesop/Forward/Match/Types.html#Aesop.Match","kind":"structure","line":12,"name":"Aesop.Match","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/Match/Types.lean#L12-L32"}}],"imports":["Init","Aesop.Forward.PremiseIndex","Aesop.Forward.SlotIndex","Aesop.Forward.Substitution","Aesop.Rule.Forward"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedMatch","typeNames":["Aesop.Match"]},{"className":"BEq","name":"Aesop.Match.instBEq","typeNames":["Aesop.Match"]},{"className":"Hashable","name":"Aesop.Match.instHashable","typeNames":["Aesop.Match"]},{"className":"Ord","name":"Aesop.Match.instOrd","typeNames":["Aesop.Match"]},{"className":"Lean.ToMessageData","name":"Aesop.Match.instToMessageData","typeNames":["Aesop.Match"]},{"className":"Inhabited","name":"Aesop.instInhabitedCompleteMatch","typeNames":["Aesop.CompleteMatch"]},{"className":"BEq","name":"Aesop.instBEqCompleteMatch","typeNames":["Aesop.CompleteMatch"]},{"className":"Hashable","name":"Aesop.instHashableCompleteMatch","typeNames":["Aesop.CompleteMatch"]},{"className":"EmptyCollection","name":"Aesop.instEmptyCollectionCompleteMatch","typeNames":["Aesop.CompleteMatch"]},{"className":"Ord","name":"Aesop.instOrdCompleteMatch","typeNames":["Aesop.CompleteMatch"]},{"className":"Inhabited","name":"Aesop.instInhabitedForwardRuleMatch","typeNames":["Aesop.ForwardRuleMatch"]},{"className":"BEq","name":"Aesop.instBEqForwardRuleMatch","typeNames":["Aesop.ForwardRuleMatch"]},{"className":"Hashable","name":"Aesop.instHashableForwardRuleMatch","typeNames":["Aesop.ForwardRuleMatch"]},{"className":"Ord","name":"Aesop.ForwardRuleMatch.ord","typeNames":["Aesop.ForwardRuleMatch"]}],"name":"Aesop.Forward.Match.Types"}