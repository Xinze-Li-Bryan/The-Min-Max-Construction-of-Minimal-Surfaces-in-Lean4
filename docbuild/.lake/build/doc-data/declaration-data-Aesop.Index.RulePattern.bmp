{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getInGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>","info":{"doc":"Get all substitutions of the rule patterns that match a subexpression of\na hypothesis or the target. Subexpressions containing bound variables are not\nconsidered. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInGoal","kind":"def","line":147,"name":"Aesop.RulePatternIndex.getInGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L147-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDecl\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getInLocalDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ldecl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>","info":{"doc":"Get all substitutions of the rule patterns that match a subexpression of\nthe given local declaration. Subexpressions containing bound variables are not\nconsidered. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDecl","kind":"def","line":142,"name":"Aesop.RulePatternIndex.getInLocalDecl","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L142-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDeclCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getInLocalDeclCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ldecl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>","info":{"doc":"Get all substitutions of the rule patterns that match a subexpression of\nthe given local declaration. Subexpressions containing bound variables are not\nconsidered. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDeclCore","kind":"def","line":128,"name":"Aesop.RulePatternIndex.getInLocalDeclCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L128-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.get\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>","info":{"doc":"Get all substitutions of the rule patterns that match a subexpression of\n`e`. Subexpressions containing bound variables are not considered. The returned\narray may contain duplicates. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.get","kind":"def","line":124,"name":"Aesop.RulePatternIndex.get","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L124-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore.getSubexpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getCore</span>.<span class=\"name\">getSubexpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>))</span> <a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore.getSubexpr","kind":"def","line":112,"name":"Aesop.RulePatternIndex.getCore.getSubexpr","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L112-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>))</span></span></div></div>","info":{"doc":"Get all substitutions of the rule patterns that match a subexpression of\n`e`. Subexpressions containing bound variables are not considered. The returned\narray may contain duplicates. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore","kind":"def","line":100,"name":"Aesop.RulePatternIndex.getCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L100-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getSingle\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getSingle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>))</span></span></div></div>","info":{"doc":"Get rule pattern substitutions for the patterns that match `e`. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getSingle","kind":"def","line":89,"name":"Aesop.RulePatternIndex.getSingle","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L89-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.merge\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx₁ </span><span class=\"fn\">idx₂</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>","info":{"doc":"Merge two rule pattern indices. Patterns that appear in both indices appear\ntwice in the result. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.merge","kind":"def","line":77,"name":"Aesop.RulePatternIndex.merge","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L77-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.add\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pattern</span> : <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>","info":{"doc":"Add a rule pattern to the index. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.add","kind":"def","line":72,"name":"Aesop.RulePatternIndex.add","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L72-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instEmptyCollection","kind":"instance","line":69,"name":"Aesop.RulePatternIndex.instEmptyCollection","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.instInhabitedRulePatternIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRulePatternIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.instInhabitedRulePatternIndex","kind":"instance","line":65,"name":"Aesop.instInhabitedRulePatternIndex","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.instInhabitedRulePatternIndex.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRulePatternIndex</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.instInhabitedRulePatternIndex.default","kind":"def","line":65,"name":"Aesop.instInhabitedRulePatternIndex.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.isEmpty\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"`true` iff the index contains no patterns. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.isEmpty","kind":"def","line":64,"name":"Aesop.RulePatternIndex.isEmpty","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.tree\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">tree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></span></div></div>","info":{"doc":"The index. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.tree","kind":"def","line":62,"name":"Aesop.RulePatternIndex.tree","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isEmpty</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.mk","kind":"ctor","line":60,"name":"Aesop.RulePatternIndex.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A rule pattern index. Maps expressions `e` to rule patterns that likely\nunify with `e`. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex","kind":"structure","line":58,"name":"Aesop.RulePatternIndex","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L58-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.instBEqEntry\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">RulePatternIndex.Entry</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.instBEqEntry","kind":"instance","line":54,"name":"Aesop.instBEqEntry","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instInhabitedEntry\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instInhabitedEntry","kind":"instance","line":52,"name":"Aesop.RulePatternIndex.instInhabitedEntry","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instInhabitedEntry.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">instInhabitedEntry</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instInhabitedEntry.default","kind":"def","line":52,"name":"Aesop.RulePatternIndex.instInhabitedEntry.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.pattern\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span>.<span class=\"name\">pattern</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></div></div>","info":{"doc":"The rule's pattern. We assume that there is at most one pattern per\nrule. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.pattern","kind":"def","line":51,"name":"Aesop.RulePatternIndex.Entry.pattern","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.name\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a></div></div>","info":{"doc":"The name of the rule to which the pattern belongs. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.name","kind":"def","line":48,"name":"Aesop.RulePatternIndex.Entry.name","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pattern</span> : <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.mk","kind":"ctor","line":46,"name":"Aesop.RulePatternIndex.Entry.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An entry of the rule pattern index. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry","kind":"structure","line":45,"name":"Aesop.RulePatternIndex.Entry","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L45-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.toFlatArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span>.<span class=\"name\">toFlatArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></div></div>","info":{"doc":"Convert a rule pattern substitution map to a flat array of substitutions. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.toFlatArray","kind":"def","line":36,"name":"Aesop.RulePatternSubstMap.toFlatArray","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L36-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.ofArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span>.<span class=\"name\">ofArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></div></div>","info":{"doc":"Build a rule pattern substitution map from an array of substitutions. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.ofArray","kind":"def","line":32,"name":"Aesop.RulePatternSubstMap.ofArray","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L32-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.insertArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span>.<span class=\"name\">insertArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></div></div>","info":{"doc":"Insert an array of rule pattern substitutions into a rule pattern\nsubstitution map. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.insertArray","kind":"def","line":23,"name":"Aesop.RulePatternSubstMap.insertArray","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L23-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A map from rule names to rule pattern substitutions. When run on a goal,\nthe rule pattern index returns such a map. ","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap","kind":"def","line":17,"name":"Aesop.RulePatternSubstMap","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index/RulePattern.lean#L17-L19"}}],"imports":["Init","Aesop.Index.Basic","Aesop.RuleTac.GoalDiff","Batteries.Lean.Meta.DiscrTree"],"instances":[{"className":"Inhabited","name":"Aesop.RulePatternIndex.instInhabitedEntry","typeNames":["Aesop.RulePatternIndex.Entry"]},{"className":"BEq","name":"Aesop.instBEqEntry","typeNames":["Aesop.RulePatternIndex.Entry"]},{"className":"Inhabited","name":"Aesop.instInhabitedRulePatternIndex","typeNames":["Aesop.RulePatternIndex"]},{"className":"EmptyCollection","name":"Aesop.RulePatternIndex.instEmptyCollection","typeNames":["Aesop.RulePatternIndex"]}],"name":"Aesop.Index.RulePattern"}