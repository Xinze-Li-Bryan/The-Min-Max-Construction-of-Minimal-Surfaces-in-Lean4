{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.tacticToDischarge\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">tacticToDischarge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacticCode</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`tactic</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></span></div></div>","info":{"doc":"Turn tactic syntax into a discharger function. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.tacticToDischarge","kind":"def","line":130,"name":"Mathlib.Meta.FunProp.tacticToDischarge","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L130-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.getFunPropFun?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getFunPropFun?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></div></div>","info":{"doc":"Returns function `f` from `e = P f` and `P` is function property. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.getFunPropFun?","kind":"def","line":122,"name":"Mathlib.Meta.FunProp.getFunPropFun?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L122-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.getFunPropDecl?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getFunPropDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a>)</span></span></div></div>","info":{"doc":"Returns function property declaration from `e = P f`. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.getFunPropDecl?","kind":"def","line":115,"name":"Mathlib.Meta.FunProp.getFunPropDecl?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L115-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.isFunPropGoal\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">isFunPropGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Is `e` a `fun_prop` goal? For example `∀ y z, Continuous fun x => f x y z` ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.isFunPropGoal","kind":"def","line":110,"name":"Mathlib.Meta.FunProp.isFunPropGoal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L110-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.isFunProp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">isFunProp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Is `e` a function property statement? ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.isFunProp","kind":"def","line":107,"name":"Mathlib.Meta.FunProp.isFunProp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L107-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.getFunProp?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getFunProp?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>))</span></span></div></div>","info":{"doc":"Is `e` a function property statement? If yes return function property declaration and\nthe function it talks about. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.getFunProp?","kind":"def","line":87,"name":"Mathlib.Meta.FunProp.getFunProp?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L87-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.addFunPropDecl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">addFunPropDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Register new function property. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.addFunPropDecl","kind":"def","line":53,"name":"Mathlib.Meta.FunProp.addFunPropDecl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L53-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.funPropDeclsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">funPropDeclsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDeclsExt\">FunPropDeclsExt</a></div></div>","info":{"doc":"Extension storing function properties tracked and used by the `fun_prop` attribute and tactic,\nincluding, for example, `Continuous`, `Measurable`, `Differentiable`, etc. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.funPropDeclsExt","kind":"opaque","line":43,"name":"Mathlib.Meta.FunProp.funPropDeclsExt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L43-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDeclsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDeclsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDeclsExt","kind":"def","line":40,"name":"Mathlib.Meta.FunProp.FunPropDeclsExt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecls.default\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunPropDecls</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls\">FunPropDecls</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecls.default","kind":"def","line":37,"name":"Mathlib.Meta.FunProp.instInhabitedFunPropDecls.default","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecls\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunPropDecls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls\">FunPropDecls</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecls","kind":"instance","line":37,"name":"Mathlib.Meta.FunProp.instInhabitedFunPropDecls","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls.decls\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecls</span>.<span class=\"name\">decls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls\">FunPropDecls</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a></span></div></div>","info":{"doc":"Discrimination tree for function properties. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls.decls","kind":"def","line":36,"name":"Mathlib.Meta.FunProp.FunPropDecls.decls","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecls</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls\">FunPropDecls</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls.mk","kind":"ctor","line":34,"name":"Mathlib.Meta.FunProp.FunPropDecls.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecls</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Discrimination tree for function properties. ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecls","kind":"structure","line":33,"name":"Mathlib.Meta.FunProp.FunPropDecls","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L33-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instBEqFunPropDecl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqFunPropDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instBEqFunPropDecl","kind":"instance","line":31,"name":"Mathlib.Meta.FunProp.instBEqFunPropDecl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instBEqFunPropDecl.beq\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqFunPropDecl</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a> → <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instBEqFunPropDecl.beq","kind":"def","line":31,"name":"Mathlib.Meta.FunProp.instBEqFunPropDecl.beq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunPropDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecl","kind":"instance","line":31,"name":"Mathlib.Meta.FunProp.instInhabitedFunPropDecl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecl.default\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunPropDecl</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.instInhabitedFunPropDecl.default","kind":"def","line":31,"name":"Mathlib.Meta.FunProp.instInhabitedFunPropDecl.default","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.funArgId\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecl</span>.<span class=\"name\">funArgId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"argument index of a function this function property talks about.\nFor example, this would be 4 for `@Continuous α β _ _ f` ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.funArgId","kind":"def","line":30,"name":"Mathlib.Meta.FunProp.FunPropDecl.funArgId","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.path\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecl</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Lean.Meta.DiscrTree.Key</a></span></div></div>","info":{"doc":"path for discrimination tree ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.path","kind":"def","line":27,"name":"Mathlib.Meta.FunProp.FunPropDecl.path","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecl</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"function transformation name ","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.funPropName","kind":"def","line":25,"name":"Mathlib.Meta.FunProp.FunPropDecl.funPropName","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecl</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funPropName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">path</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Lean.Meta.DiscrTree.Key</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funArgId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\">FunPropDecl</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl.mk","kind":"ctor","line":23,"name":"Mathlib.Meta.FunProp.FunPropDecl.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunPropDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Basic information about function property\n\nTo use `funProp` to prove a function property `P : (α→β)→Prop` one has to provide `FunPropDecl`.\n","docLink":"./Mathlib/Tactic/FunProp/Decl.html#Mathlib.Meta.FunProp.FunPropDecl","kind":"structure","line":19,"name":"Mathlib.Meta.FunProp.FunPropDecl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/FunProp/Decl.lean#L19-L31"}}],"imports":["Init","Mathlib.Init"],"instances":[{"className":"Inhabited","name":"Mathlib.Meta.FunProp.instInhabitedFunPropDecl","typeNames":["Mathlib.Meta.FunProp.FunPropDecl"]},{"className":"BEq","name":"Mathlib.Meta.FunProp.instBEqFunPropDecl","typeNames":["Mathlib.Meta.FunProp.FunPropDecl"]},{"className":"Inhabited","name":"Mathlib.Meta.FunProp.instInhabitedFunPropDecls","typeNames":["Mathlib.Meta.FunProp.FunPropDecls"]}],"name":"Mathlib.Tactic.FunProp.Decl"}