{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.quotientEquivSelf\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">quotientEquivSelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>","info":{"doc":"`α ⧸ ⊥` is in bijection with `α`. See `QuotientAddGroup.quotientBot` for an\nadditive version. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.quotientEquivSelf","kind":"def","line":575,"name":"QuotientAddGroup.quotientEquivSelf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L575-L576"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.quotientEquivSelf\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">quotientEquivSelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></div></div>","info":{"doc":"`α ⧸ ⊥` is in bijection with `α`. See `QuotientGroup.quotientBot` for a multiplicative\nversion. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.quotientEquivSelf","kind":"def","line":573,"name":"QuotientGroup.quotientEquivSelf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L573-L582"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.univ_eq_iUnion_vadd\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">univ_eq_iUnion_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></div></div>","info":{"doc":"An additive group is made up of a disjoint union of cosets of an additive\nsubgroup. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.univ_eq_iUnion_vadd","kind":"theorem","line":565,"name":"QuotientAddGroup.univ_eq_iUnion_vadd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L565-L566"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.univ_eq_iUnion_smul\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">univ_eq_iUnion_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋃ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">H</span></span></span></div></div>","info":{"doc":"A group is made up of a disjoint union of cosets of a subgroup. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.univ_eq_iUnion_smul","kind":"theorem","line":564,"name":"QuotientGroup.univ_eq_iUnion_smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L564-L570"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.preimageMkEquivAddSubgroupProdSet\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">preimageMkEquivAddSubgroupProdSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">mk</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">t</span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `s` is a subgroup of the additive group `α`, and `t` is a subset of `α ⧸ s`, then\nthere is a (typically non-canonical) bijection between the preimage of `t` in `α` and the product\n`s × t`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.preimageMkEquivAddSubgroupProdSet","kind":"def","line":545,"name":"QuotientAddGroup.preimageMkEquivAddSubgroupProdSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L545-L548"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.preimageMkEquivSubgroupProdSet\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">preimageMkEquivSubgroupProdSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.mk\">mk</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">t</span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `s` is a subgroup of the group `α`, and `t` is a subset of `α ⧸ s`, then there is a\n(typically non-canonical) bijection between the preimage of `t` in `α` and the product `s × t`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.preimageMkEquivSubgroupProdSet","kind":"def","line":543,"name":"QuotientGroup.preimageMkEquivSubgroupProdSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L543-L561"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivOfSurjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquivOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h </span><span class=\"fn\">h'</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">h</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">h'</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span></div></div>","info":{"doc":"An equivalence between any two fibers of a surjective `AddMonoidHom`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivOfSurjective","kind":"def","line":532,"name":"AddMonoidHom.fiberEquivOfSurjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L532-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivOfSurjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquivOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h </span><span class=\"fn\">h'</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">h</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">h'</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span></div></div>","info":{"doc":"An equivalence between any two fibers of a surjective `MonoidHom`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivOfSurjective","kind":"def","line":531,"name":"MonoidHom.fiberEquivOfSurjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L531-L535"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv_symm_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv\">fiberEquiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span>)</div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv_symm_apply","kind":"theorem","line":526,"name":"AddMonoidHom.fiberEquiv_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L526-L526"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv_symm_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv\">fiberEquiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span>)</div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv_symm_apply","kind":"theorem","line":526,"name":"MonoidHom.fiberEquiv_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L526-L529"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv\">fiberEquiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span>)</div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv_apply","kind":"theorem","line":521,"name":"AddMonoidHom.fiberEquiv_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L521-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv\">fiberEquiv</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span>)</div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv_apply","kind":"theorem","line":521,"name":"MonoidHom.fiberEquiv_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L521-L524"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span></div></div>","info":{"doc":"An equivalence between any two non-empty fibers of an `AddMonoidHom`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquiv","kind":"def","line":517,"name":"AddMonoidHom.fiberEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L517-L517"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span></div></div>","info":{"doc":"An equivalence between any two non-empty fibers of a `MonoidHom`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquiv","kind":"def","line":516,"name":"MonoidHom.fiberEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L516-L519"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKerOfSurjective\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquivKerOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">h</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#AddMonoidHom.ker\">ker</a></span></span></div></div>","info":{"doc":"An equivalence between any fiber of a surjective `AddMonoidHom` and its kernel. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKerOfSurjective","kind":"def","line":510,"name":"AddMonoidHom.fiberEquivKerOfSurjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L510-L511"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKerOfSurjective\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquivKerOfSurjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">h</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.ker\">ker</a></span></span></div></div>","info":{"doc":"An equivalence between any fiber of a surjective `MonoidHom` and its kernel. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKerOfSurjective","kind":"def","line":509,"name":"MonoidHom.fiberEquivKerOfSurjective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L509-L514"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer_symm_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquivKer_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#AddMonoidHom.ker\">ker</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer\">fiberEquivKer</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer_symm_apply","kind":"theorem","line":504,"name":"AddMonoidHom.fiberEquivKer_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L504-L504"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer_symm_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquivKer_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.ker\">ker</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer\">fiberEquivKer</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer_symm_apply","kind":"theorem","line":504,"name":"MonoidHom.fiberEquivKer_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L504-L507"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer_apply\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquivKer_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer\">fiberEquivKer</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer_apply","kind":"theorem","line":500,"name":"AddMonoidHom.fiberEquivKer_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L500-L500"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer_apply\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquivKer_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer\">fiberEquivKer</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer_apply","kind":"theorem","line":500,"name":"MonoidHom.fiberEquivKer_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L500-L502"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer\"><span class=\"name\">AddMonoidHom</span>.<span class=\"name\">fiberEquivKer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#AddMonoidHom.ker\">ker</a></span></span></div></div>","info":{"doc":"An equivalence between any non-empty fiber of an `AddMonoidHom` and its kernel. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddMonoidHom.fiberEquivKer","kind":"def","line":491,"name":"AddMonoidHom.fiberEquivKer","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L491-L492"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer\"><span class=\"name\">MonoidHom</span>.<span class=\"name\">fiberEquivKer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.ker\">ker</a></span></span></div></div>","info":{"doc":"An equivalence between any non-empty fiber of a `MonoidHom` and its kernel. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#MonoidHom.fiberEquivKer","kind":"def","line":490,"name":"MonoidHom.fiberEquivKer","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L490-L498"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding_apply_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientiInfEmbedding_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding\">quotientiInfEmbedding</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(↑<span class=\"fn\">g</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding_apply_mk","kind":"theorem","line":479,"name":"AddSubgroup.quotientiInfEmbedding_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L479-L479"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding_apply_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientiInfEmbedding_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding\">quotientiInfEmbedding</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(↑<span class=\"fn\">g</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding_apply_mk","kind":"theorem","line":479,"name":"Subgroup.quotientiInfEmbedding_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L479-L482"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientiInfEmbedding_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding\">quotientiInfEmbedding</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">q</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientMapOfLE\">quotientMapOfLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding_apply","kind":"theorem","line":471,"name":"Subgroup.quotientiInfEmbedding_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L471-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientiInfEmbedding_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding\">quotientiInfEmbedding</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">q</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientMapOfLE\">quotientMapOfLE</a> <span class=\"fn\">⋯</span> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding_apply","kind":"theorem","line":471,"name":"AddSubgroup.quotientiInfEmbedding_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L471-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientiInfEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"The natural embedding `α ⧸ (⨅ i, f i) ↪ Π i, α ⧸ f i`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfEmbedding","kind":"def","line":471,"name":"AddSubgroup.quotientiInfEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L471-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientiInfEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"The natural embedding `α ⧸ (⨅ i, f i) ↪ Π i, α ⧸ f i`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfEmbedding","kind":"def","line":470,"name":"Subgroup.quotientiInfEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L470-L477"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding_apply_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientiInfAddSubgroupOfEmbedding_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding\">quotientiInfAddSubgroupOfEmbedding</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span>)</span> <span class=\"fn\">(↑<span class=\"fn\">g</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding_apply_mk","kind":"theorem","line":464,"name":"AddSubgroup.quotientiInfAddSubgroupOfEmbedding_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L464-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding_apply_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientiInfSubgroupOfEmbedding_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding\">quotientiInfSubgroupOfEmbedding</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span>)</span> <span class=\"fn\">(↑<span class=\"fn\">g</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding_apply_mk","kind":"theorem","line":464,"name":"Subgroup.quotientiInfSubgroupOfEmbedding_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L464-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientiInfAddSubgroupOfEmbedding_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding\">quotientiInfAddSubgroupOfEmbedding</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span>)</span> <span class=\"fn\">q</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfMapOfLE\">quotientAddSubgroupOfMapOfLE</a> <span class=\"fn\">H</span> <span class=\"fn\">⋯</span> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding_apply","kind":"theorem","line":454,"name":"AddSubgroup.quotientiInfAddSubgroupOfEmbedding_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L454-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientiInfSubgroupOfEmbedding_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding\">quotientiInfSubgroupOfEmbedding</a> <span class=\"fn\">f</span> <span class=\"fn\">H</span>)</span> <span class=\"fn\">q</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfMapOfLE\">quotientSubgroupOfMapOfLE</a> <span class=\"fn\">H</span> <span class=\"fn\">⋯</span> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding_apply","kind":"theorem","line":454,"name":"Subgroup.quotientiInfSubgroupOfEmbedding_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L454-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientiInfAddSubgroupOfEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">H</span></span></span></div></div>","info":{"doc":"The natural embedding\n`H ⧸ (⨅ i, f i).addSubgroupOf H) ↪ Π i, H ⧸ (f i).addSubgroupOf H`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientiInfAddSubgroupOfEmbedding","kind":"def","line":454,"name":"AddSubgroup.quotientiInfAddSubgroupOfEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L454-L455"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientiInfSubgroupOfEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(⨅ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">H</span></span></span></div></div>","info":{"doc":"The natural embedding `H ⧸ (⨅ i, f i).subgroupOf H ↪ Π i, H ⧸ (f i).subgroupOf H`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientiInfSubgroupOfEmbedding","kind":"def","line":453,"name":"Subgroup.quotientiInfSubgroupOfEmbedding","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L453-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientMapOfLE_apply_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientMapOfLE_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientMapOfLE\">quotientMapOfLE</a> <span class=\"fn\">h</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientMapOfLE_apply_mk","kind":"theorem","line":448,"name":"AddSubgroup.quotientMapOfLE_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L448-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientMapOfLE_apply_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientMapOfLE_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientMapOfLE\">quotientMapOfLE</a> <span class=\"fn\">h</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientMapOfLE_apply_mk","kind":"theorem","line":448,"name":"Subgroup.quotientMapOfLE_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L448-L451"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientMapOfLE\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientMapOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> → <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `s ≤ t`, then there is a map `α ⧸ s → α ⧸ t`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientMapOfLE","kind":"def","line":442,"name":"AddSubgroup.quotientMapOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L442-L442"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientMapOfLE\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientMapOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> → <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `s ≤ t`, then there is a map `α ⧸ s → α ⧸ t`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientMapOfLE","kind":"def","line":441,"name":"Subgroup.quotientMapOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L441-L446"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfMapOfLE_apply_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientAddSubgroupOfMapOfLE_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfMapOfLE\">quotientAddSubgroupOfMapOfLE</a> <span class=\"fn\">H</span> <span class=\"fn\">h</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfMapOfLE_apply_mk","kind":"theorem","line":436,"name":"AddSubgroup.quotientAddSubgroupOfMapOfLE_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L436-L436"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfMapOfLE_apply_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientSubgroupOfMapOfLE_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfMapOfLE\">quotientSubgroupOfMapOfLE</a> <span class=\"fn\">H</span> <span class=\"fn\">h</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfMapOfLE_apply_mk","kind":"theorem","line":436,"name":"Subgroup.quotientSubgroupOfMapOfLE_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L436-L439"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfMapOfLE\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientAddSubgroupOfMapOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">H</span></span> → <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">H</span></span></span></div></div>","info":{"doc":"If `s ≤ t`, then there is a map `H ⧸ s.addSubgroupOf H → H ⧸ t.addSubgroupOf H`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfMapOfLE","kind":"def","line":428,"name":"AddSubgroup.quotientAddSubgroupOfMapOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L428-L429"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfMapOfLE\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientSubgroupOfMapOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">H</span></span> → <span class=\"fn\">↥<span class=\"fn\">H</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">H</span></span></span></div></div>","info":{"doc":"If `s ≤ t`, then there is a map `H ⧸ s.subgroupOf H → H ⧸ t.subgroupOf H`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfMapOfLE","kind":"def","line":427,"name":"Subgroup.quotientSubgroupOfMapOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L427-L434"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE_apply_mk\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientAddSubgroupOfEmbeddingOfLE_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE\">quotientAddSubgroupOfEmbeddingOfLE</a> <span class=\"fn\">H</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup.inclusion\">inclusion</a> <span class=\"fn\">h</span>)</span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE_apply_mk","kind":"theorem","line":422,"name":"AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L422-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfEmbeddingOfLE_apply_mk\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientSubgroupOfEmbeddingOfLE_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfEmbeddingOfLE\">quotientSubgroupOfEmbeddingOfLE</a> <span class=\"fn\">H</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.inclusion\">inclusion</a> <span class=\"fn\">h</span>)</span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfEmbeddingOfLE_apply_mk","kind":"theorem","line":422,"name":"Subgroup.quotientSubgroupOfEmbeddingOfLE_apply_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L422-L425"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientAddSubgroupOfEmbeddingOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `s ≤ t`, there is an embedding `s ⧸ H.addSubgroupOf s ↪ t ⧸ H.addSubgroupOf t`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE","kind":"def","line":409,"name":"AddSubgroup.quotientAddSubgroupOfEmbeddingOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L409-L410"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfEmbeddingOfLE\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientSubgroupOfEmbeddingOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding\">↪</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `s ≤ t`, then there is an embedding `s ⧸ H.subgroupOf s ↪ t ⧸ H.subgroupOf t`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientSubgroupOfEmbeddingOfLE","kind":"def","line":408,"name":"Subgroup.quotientSubgroupOfEmbeddingOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L408-L420"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE_symm_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivSumOfLE_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE\">AddSubgroup.quotientEquivProdOfLE</a> <span class=\"fn\">h_le</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></div></div>","info":{"doc":"**Alias** of `AddSubgroup.quotientEquivProdOfLE_symm_apply`.","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE_symm_apply","kind":"theorem","line":405,"name":"Subgroup.AddSubgroup.quotientEquivSumOfLE_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L405-L406"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivSumOfLE_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE\">AddSubgroup.quotientEquivProdOfLE</a> <span class=\"fn\">h_le</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Data/Quot.html#Quotient.out\">out</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"**Alias** of `AddSubgroup.quotientEquivProdOfLE_apply`.","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE_apply","kind":"theorem","line":402,"name":"Subgroup.AddSubgroup.quotientEquivSumOfLE_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L402-L403"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE\"><span class=\"name\">Subgroup</span>.<span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivSumOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"**Alias** of `AddSubgroup.quotientEquivProdOfLE`.\n\n---\n\nIf `H ≤ K`, then `G/H ≃ G/K × K/H` nonconstructively. The\nconstructive version is `quotientEquivProdOfLE'`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE","kind":"def","line":399,"name":"Subgroup.AddSubgroup.quotientEquivSumOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L399-L400"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivProdOfLE_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE\">quotientEquivProdOfLE</a> <span class=\"fn\">h_le</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Data/Quot.html#Quotient.out\">out</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE_apply","kind":"theorem","line":393,"name":"AddSubgroup.quotientEquivProdOfLE_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L393-L393"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE_symm_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivProdOfLE_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE\">quotientEquivProdOfLE</a> <span class=\"fn\">h_le</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE_symm_apply","kind":"theorem","line":393,"name":"Subgroup.quotientEquivProdOfLE_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L393-L393"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE_symm_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivProdOfLE_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE\">quotientEquivProdOfLE</a> <span class=\"fn\">h_le</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE_symm_apply","kind":"theorem","line":393,"name":"AddSubgroup.quotientEquivProdOfLE_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L393-L393"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivProdOfLE_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE\">quotientEquivProdOfLE</a> <span class=\"fn\">h_le</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Data/Quot.html#Quotient.out\">out</a></span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE_apply","kind":"theorem","line":393,"name":"Subgroup.quotientEquivProdOfLE_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L393-L393"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivProdOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `H ≤ K`, then `G/H ≃ G/K × K/H` nonconstructively. The\nconstructive version is `quotientEquivProdOfLE'`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE","kind":"def","line":393,"name":"AddSubgroup.quotientEquivProdOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L393-L395"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivProdOfLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `H ≤ K`, then `G/H ≃ G/K × K/H` nonconstructively.\nThe constructive version is `quotientEquivProdOfLE'`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE","kind":"def","line":391,"name":"Subgroup.quotientEquivProdOfLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L391-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE'_symm_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivSumOfLE'_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">QuotientAddGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'\">AddSubgroup.quotientEquivProdOfLE'</a> <span class=\"fn\">h_le</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></div></div>","info":{"doc":"**Alias** of `AddSubgroup.quotientEquivProdOfLE'_symm_apply`.","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE'_symm_apply","kind":"theorem","line":388,"name":"Subgroup.AddSubgroup.quotientEquivSumOfLE'_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L388-L389"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE'_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivSumOfLE'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">QuotientAddGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'\">AddSubgroup.quotientEquivProdOfLE'</a> <span class=\"fn\">h_le</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"**Alias** of `AddSubgroup.quotientEquivProdOfLE'_apply`.","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE'_apply","kind":"theorem","line":385,"name":"Subgroup.AddSubgroup.quotientEquivSumOfLE'_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L385-L386"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivSumOfLE'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">QuotientAddGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"**Alias** of `AddSubgroup.quotientEquivProdOfLE'`.\n\n---\n\nIf `H ≤ K`, then `G/H ≃ G/K × K/H` constructively, using the provided right inverse\nof the quotient map `G → G/K`. The classical version is `AddSubgroup.quotientEquivProdOfLE`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.AddSubgroup.quotientEquivSumOfLE'","kind":"def","line":382,"name":"Subgroup.AddSubgroup.quotientEquivSumOfLE'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L382-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'_symm_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivProdOfLE'_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.mk\">QuotientGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'\">quotientEquivProdOfLE'</a> <span class=\"fn\">h_le</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'_symm_apply","kind":"theorem","line":352,"name":"Subgroup.quotientEquivProdOfLE'_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivProdOfLE'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.mk\">QuotientGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'\">quotientEquivProdOfLE'</a> <span class=\"fn\">h_le</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">g</span>)</span>)</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'_apply","kind":"theorem","line":352,"name":"Subgroup.quotientEquivProdOfLE'_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivProdOfLE'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">QuotientAddGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'\">quotientEquivProdOfLE'</a> <span class=\"fn\">h_le</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'_apply","kind":"theorem","line":352,"name":"AddSubgroup.quotientEquivProdOfLE'_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'_symm_apply\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivProdOfLE'_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">QuotientAddGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'\">quotientEquivProdOfLE'</a> <span class=\"fn\">h_le</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.map'\">Quotient.map'</a> <span class=\"fn\">(fun (<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">t</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">a</span>.2</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'_symm_apply","kind":"theorem","line":352,"name":"AddSubgroup.quotientEquivProdOfLE'_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">quotientEquivProdOfLE'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">QuotientAddGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.addSubgroupOf\">addSubgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `H ≤ K`, then `G/H ≃ G/K × K/H` constructively, using the provided right inverse\nof the quotient map `G → G/K`. The classical version is `AddSubgroup.quotientEquivProdOfLE`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.quotientEquivProdOfLE'","kind":"def","line":352,"name":"AddSubgroup.quotientEquivProdOfLE'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L352-L354"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivProdOfLE'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.mk\">QuotientGroup.mk</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">t</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">t</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.subgroupOf\">subgroupOf</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"If `H ≤ K`, then `G/H ≃ G/K × K/H` constructively, using the provided right inverse\nof the quotient map `G → G/K`. The classical version is `Subgroup.quotientEquivProdOfLE`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.quotientEquivProdOfLE'","kind":"def","line":350,"name":"Subgroup.quotientEquivProdOfLE'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L350-L380"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.addGroupEquivQuotientProdAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">addGroupEquivQuotientProdAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span></div></div>","info":{"doc":"A (non-canonical) bijection between an add_group `α` and the product `(α/s) × s` ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.addGroupEquivQuotientProdAddSubgroup","kind":"def","line":332,"name":"AddSubgroup.addGroupEquivQuotientProdAddSubgroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L332-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.groupEquivQuotientProdSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">groupEquivQuotientProdSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span></div></div>","info":{"doc":"A (non-canonical) bijection between a group `α` and the product `(α/s) × s` ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.groupEquivQuotientProdSubgroup","kind":"def","line":331,"name":"Subgroup.groupEquivQuotientProdSubgroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L331-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.rightCosetEquivAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">rightCosetEquivAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span></div></div>","info":{"doc":"The natural bijection between the cosets `s + g` and `s`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.rightCosetEquivAddSubgroup","kind":"def","line":326,"name":"AddSubgroup.rightCosetEquivAddSubgroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L326-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.rightCosetEquivSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">rightCosetEquivSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span></div></div>","info":{"doc":"The natural bijection between a right coset `s * g` and `s`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.rightCosetEquivSubgroup","kind":"def","line":325,"name":"Subgroup.rightCosetEquivSubgroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L325-L329"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.leftCosetEquivAddSubgroup\"><span class=\"name\">AddSubgroup</span>.<span class=\"name\">leftCosetEquivAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span></div></div>","info":{"doc":"The natural bijection between the cosets `g + s` and `s`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#AddSubgroup.leftCosetEquivAddSubgroup","kind":"def","line":320,"name":"AddSubgroup.leftCosetEquivAddSubgroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L320-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.leftCosetEquivSubgroup\"><span class=\"name\">Subgroup</span>.<span class=\"name\">leftCosetEquivSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↥<span class=\"fn\">s</span></span></div></div>","info":{"doc":"The natural bijection between a left coset `g * s` and `s`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#Subgroup.leftCosetEquivSubgroup","kind":"def","line":319,"name":"Subgroup.leftCosetEquivSubgroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L319-L323"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.orbit_eq_out_vadd\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">orbit_eq_out_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbitRel.Quotient.orbit\">AddAction.orbitRel.Quotient.orbit</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.orbit_eq_out_vadd","kind":"theorem","line":306,"name":"QuotientAddGroup.orbit_eq_out_vadd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L306-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.orbit_eq_out_smul\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">orbit_eq_out_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbitRel.Quotient.orbit\">MulAction.orbitRel.Quotient.orbit</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.orbit_eq_out_smul","kind":"theorem","line":306,"name":"QuotientGroup.orbit_eq_out_smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L306-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.orbit_mk_eq_vadd\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">orbit_mk_eq_vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbitRel.Quotient.orbit\">AddAction.orbitRel.Quotient.orbit</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.orbit_mk_eq_vadd","kind":"theorem","line":300,"name":"QuotientAddGroup.orbit_mk_eq_vadd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L300-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.orbit_mk_eq_smul\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">orbit_mk_eq_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbitRel.Quotient.orbit\">MulAction.orbitRel.Quotient.orbit</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.orbit_mk_eq_smul","kind":"theorem","line":300,"name":"QuotientGroup.orbit_mk_eq_smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L300-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.eq_class_eq_leftCoset\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">eq_class_eq_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.eq_class_eq_leftCoset","kind":"theorem","line":293,"name":"QuotientAddGroup.eq_class_eq_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L293-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.eq_class_eq_leftCoset\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">eq_class_eq_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.eq_class_eq_leftCoset","kind":"theorem","line":293,"name":"QuotientGroup.eq_class_eq_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L293-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.strictMono_comap_prod_image\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">strictMono_comap_prod_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#AddSubgroup.comap\">AddSubgroup.comap</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup.subtype\">subtype</a></span> <span class=\"fn\">t</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.mk\">mk</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>","info":{"doc":"Given an additive subgroup `s`,\nthe function that sends an additive subgroup `t` to the pair consisting of\nits intersection with `s` and its image in the quotient `α ⧸ s`\nis strictly monotone, even though it is not injective in general. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.strictMono_comap_prod_image","kind":"theorem","line":279,"name":"QuotientAddGroup.strictMono_comap_prod_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L279-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.strictMono_comap_prod_image\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">strictMono_comap_prod_image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.comap\">Subgroup.comap</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.subtype\">subtype</a></span> <span class=\"fn\">t</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.mk\">mk</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>","info":{"doc":"Given a subgroup `s`, the function that sends a subgroup `t` to the pair consisting of\nits intersection with `s` and its image in the quotient `α ⧸ s` is strictly monotone, even though\nit is not injective in general. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.strictMono_comap_prod_image","kind":"theorem","line":276,"name":"QuotientGroup.strictMono_comap_prod_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L276-L289"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.rightRel_pi\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">rightRel_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Quot.html#piSetoid\">piSetoid</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.rightRel_pi","kind":"theorem","line":262,"name":"QuotientAddGroup.rightRel_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L262-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.rightRel_pi\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">rightRel_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.rightRel\">rightRel</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Quot.html#piSetoid\">piSetoid</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.rightRel_pi","kind":"theorem","line":262,"name":"QuotientGroup.rightRel_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L262-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.rightRel_sum\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">rightRel_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddSubgroup.prod\">prod</a></span> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">s'</span>)</span></span></div></div>","info":{"doc":"**Alias** of `QuotientAddGroup.rightRel_prod`.","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.rightRel_sum","kind":"theorem","line":259,"name":"QuotientAddGroup.rightRel_sum","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L259-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.rightRel_prod\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">rightRel_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddSubgroup.prod\">prod</a></span> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.rightRel\">rightRel</a> <span class=\"fn\">s'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.rightRel_prod","kind":"theorem","line":251,"name":"QuotientAddGroup.rightRel_prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L251-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.rightRel_prod\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">rightRel_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.rightRel\">rightRel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.prod\">prod</a></span> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.rightRel\">rightRel</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.rightRel\">rightRel</a> <span class=\"fn\">s'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.rightRel_prod","kind":"theorem","line":251,"name":"QuotientGroup.rightRel_prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L251-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.rightRel_r_eq_rightCosetEquivalence\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">rightRel_r_eq_rightCosetEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.rightRel\">rightRel</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#RightCosetEquivalence\">RightCosetEquivalence</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.rightRel_r_eq_rightCosetEquivalence","kind":"theorem","line":245,"name":"QuotientGroup.rightRel_r_eq_rightCosetEquivalence","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L245-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.leftRel_pi\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">leftRel_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddSubgroup.pi\">AddSubgroup.pi</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Quot.html#piSetoid\">piSetoid</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.leftRel_pi","kind":"theorem","line":239,"name":"QuotientAddGroup.leftRel_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L239-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.leftRel_pi\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">leftRel_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u_3</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.leftRel\">leftRel</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Quot.html#piSetoid\">piSetoid</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.leftRel_pi","kind":"theorem","line":239,"name":"QuotientGroup.leftRel_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L239-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.leftRel_sum\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">leftRel_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddSubgroup.prod\">prod</a></span> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">s'</span>)</span></span></div></div>","info":{"doc":"**Alias** of `QuotientAddGroup.leftRel_prod`.","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.leftRel_sum","kind":"theorem","line":236,"name":"QuotientAddGroup.leftRel_sum","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L236-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.leftRel_prod\"><span class=\"name\">QuotientAddGroup</span>.<span class=\"name\">leftRel_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#AddSubgroup.prod\">prod</a></span> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientAddGroup.leftRel\">leftRel</a> <span class=\"fn\">s'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientAddGroup.leftRel_prod","kind":"theorem","line":228,"name":"QuotientAddGroup.leftRel_prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L228-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.leftRel_prod\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">leftRel_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.leftRel\">leftRel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.prod\">prod</a></span> <span class=\"fn\">s'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.leftRel\">leftRel</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.leftRel\">leftRel</a> <span class=\"fn\">s'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.leftRel_prod","kind":"theorem","line":228,"name":"QuotientGroup.leftRel_prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L228-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.leftRel_r_eq_leftCosetEquivalence\"><span class=\"name\">QuotientGroup</span>.<span class=\"name\">leftRel_r_eq_leftCosetEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Defs.html#QuotientGroup.leftRel\">leftRel</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coset/Basic.html#LeftCosetEquivalence\">LeftCosetEquivalence</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#QuotientGroup.leftRel_r_eq_leftCosetEquivalence","kind":"theorem","line":222,"name":"QuotientGroup.leftRel_r_eq_leftCosetEquivalence","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L222-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_eq_iff\"><span class=\"name\">rightAddCoset_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">y</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_eq_iff","kind":"theorem","line":202,"name":"rightAddCoset_eq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_eq_iff\"><span class=\"name\">rightCoset_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_eq_iff","kind":"theorem","line":202,"name":"rightCoset_eq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L202-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_eq_iff\"><span class=\"name\">leftAddCoset_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_eq_iff","kind":"theorem","line":188,"name":"leftAddCoset_eq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L188-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_eq_iff\"><span class=\"name\">leftCoset_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_eq_iff","kind":"theorem","line":188,"name":"leftCoset_eq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L188-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#normal_iff_eq_addCosets\"><span class=\"name\">normal_iff_eq_addCosets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup.Normal\">Normal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>), <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#normal_iff_eq_addCosets","kind":"theorem","line":184,"name":"normal_iff_eq_addCosets","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L184-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#normal_iff_eq_cosets\"><span class=\"name\">normal_iff_eq_cosets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>), <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#normal_iff_eq_cosets","kind":"theorem","line":184,"name":"normal_iff_eq_cosets","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L184-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#normal_of_eq_addCosets\"><span class=\"name\">normal_of_eq_addCosets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>), <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup.Normal\">Normal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#normal_of_eq_addCosets","kind":"theorem","line":179,"name":"normal_of_eq_addCosets","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L179-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#normal_of_eq_cosets\"><span class=\"name\">normal_of_eq_cosets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">α</span>), <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#normal_of_eq_cosets","kind":"theorem","line":179,"name":"normal_of_eq_cosets","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L179-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#eq_addCosets_of_normal\"><span class=\"name\">eq_addCosets_of_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup.Normal\">Normal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#eq_addCosets_of_normal","kind":"theorem","line":175,"name":"eq_addCosets_of_normal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L175-L175"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#eq_cosets_of_normal\"><span class=\"name\">eq_cosets_of_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup.Normal\">Normal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#eq_cosets_of_normal","kind":"theorem","line":175,"name":"eq_cosets_of_normal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L175-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#orbit_addSubgroup_zero_eq_self\"><span class=\"name\">orbit_addSubgroup_zero_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">AddAction.orbit</a> <span class=\"fn\">(↥<span class=\"fn\">s</span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#orbit_addSubgroup_zero_eq_self","kind":"theorem","line":171,"name":"orbit_addSubgroup_zero_eq_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#orbit_subgroup_one_eq_self\"><span class=\"name\">orbit_subgroup_one_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">MulAction.orbit</a> <span class=\"fn\">(↥<span class=\"fn\">s</span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#orbit_subgroup_one_eq_self","kind":"theorem","line":171,"name":"orbit_subgroup_one_eq_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L171-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#orbit_addSubgroup_eq_self_of_mem\"><span class=\"name\">orbit_addSubgroup_eq_self_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">AddAction.orbit</a> <span class=\"fn\">(↥<span class=\"fn\">s</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#orbit_addSubgroup_eq_self_of_mem","kind":"theorem","line":167,"name":"orbit_addSubgroup_eq_self_of_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L167-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#orbit_subgroup_eq_self_of_mem\"><span class=\"name\">orbit_subgroup_eq_self_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">MulAction.orbit</a> <span class=\"fn\">(↥<span class=\"fn\">s</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#orbit_subgroup_eq_self_of_mem","kind":"theorem","line":167,"name":"orbit_subgroup_eq_self_of_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L167-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#orbit_addSubgroup_eq_rightCoset\"><span class=\"name\">orbit_addSubgroup_eq_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">AddAction.orbit</a> <span class=\"fn\">(↥<span class=\"fn\">s</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#orbit_addSubgroup_eq_rightCoset","kind":"theorem","line":163,"name":"orbit_addSubgroup_eq_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L163-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#orbit_subgroup_eq_rightCoset\"><span class=\"name\">orbit_subgroup_eq_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">MulAction.orbit</a> <span class=\"fn\">(↥<span class=\"fn\">s</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#orbit_subgroup_eq_rightCoset","kind":"theorem","line":163,"name":"orbit_subgroup_eq_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L163-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_mem_rightAddCoset\"><span class=\"name\">rightAddCoset_mem_rightAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_mem_rightAddCoset","kind":"theorem","line":159,"name":"rightAddCoset_mem_rightAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L159-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_mem_rightCoset\"><span class=\"name\">rightCoset_mem_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_mem_rightCoset","kind":"theorem","line":159,"name":"rightCoset_mem_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L159-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_mem_leftAddCoset\"><span class=\"name\">leftAddCoset_mem_leftAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_mem_leftAddCoset","kind":"theorem","line":155,"name":"leftAddCoset_mem_leftAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_mem_leftCoset\"><span class=\"name\">leftCoset_mem_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_mem_leftCoset","kind":"theorem","line":155,"name":"leftCoset_mem_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L155-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightAddCoset_iff\"><span class=\"name\">mem_rightAddCoset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightAddCoset_iff","kind":"theorem","line":143,"name":"mem_rightAddCoset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L143-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightCoset_iff\"><span class=\"name\">mem_rightCoset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightCoset_iff","kind":"theorem","line":143,"name":"mem_rightCoset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L143-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftAddCoset_iff\"><span class=\"name\">mem_leftAddCoset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftAddCoset_iff","kind":"theorem","line":139,"name":"mem_leftAddCoset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftCoset_iff\"><span class=\"name\">mem_leftCoset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftCoset_iff","kind":"theorem","line":139,"name":"mem_leftCoset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L139-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightAddCoset_rightAddCoset\"><span class=\"name\">mem_rightAddCoset_rightAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightAddCoset_rightAddCoset","kind":"theorem","line":129,"name":"mem_rightAddCoset_rightAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightCoset_rightCoset\"><span class=\"name\">mem_rightCoset_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightCoset_rightCoset","kind":"theorem","line":129,"name":"mem_rightCoset_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L129-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftAddCoset_leftAddCoset\"><span class=\"name\">mem_leftAddCoset_leftAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftAddCoset_leftAddCoset","kind":"theorem","line":125,"name":"mem_leftAddCoset_leftAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L125-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftCoset_leftCoset\"><span class=\"name\">mem_leftCoset_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftCoset_leftCoset","kind":"theorem","line":125,"name":"mem_leftCoset_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L125-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_rightAddCoset\"><span class=\"name\">mem_own_rightAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_rightAddCoset","kind":"theorem","line":120,"name":"mem_own_rightAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L120-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_rightCoset\"><span class=\"name\">mem_own_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_rightCoset","kind":"theorem","line":120,"name":"mem_own_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L120-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_leftAddCoset\"><span class=\"name\">mem_own_leftAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#AddSubmonoid\">AddSubmonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_leftAddCoset","kind":"theorem","line":115,"name":"mem_own_leftAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L115-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_leftCoset\"><span class=\"name\">mem_own_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#Submonoid\">Submonoid</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_own_leftCoset","kind":"theorem","line":115,"name":"mem_own_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L115-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_zero\"><span class=\"name\">rightAddCoset_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_zero","kind":"theorem","line":103,"name":"rightAddCoset_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_one\"><span class=\"name\">rightCoset_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_one","kind":"theorem","line":103,"name":"rightCoset_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L103-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#zero_leftAddCoset\"><span class=\"name\">zero_leftAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#zero_leftAddCoset","kind":"theorem","line":99,"name":"zero_leftAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#one_leftCoset\"><span class=\"name\">one_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#one_leftCoset","kind":"theorem","line":99,"name":"one_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L99-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_rightAddCoset\"><span class=\"name\">leftAddCoset_rightAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_rightAddCoset","kind":"theorem","line":89,"name":"leftAddCoset_rightAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_rightCoset\"><span class=\"name\">leftCoset_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_rightCoset","kind":"theorem","line":89,"name":"leftCoset_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L89-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_assoc\"><span class=\"name\">rightAddCoset_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>)</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCoset_assoc","kind":"theorem","line":85,"name":"rightAddCoset_assoc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_assoc\"><span class=\"name\">rightCoset_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightCoset_assoc","kind":"theorem","line":85,"name":"rightCoset_assoc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L85-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_assoc\"><span class=\"name\">leftAddCoset_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">b</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCoset_assoc","kind":"theorem","line":81,"name":"leftAddCoset_assoc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_assoc\"><span class=\"name\">leftCoset_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>) <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftCoset_assoc","kind":"theorem","line":81,"name":"leftCoset_assoc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L81-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCosetEquivalence_rel\"><span class=\"name\">rightAddCosetEquivalence_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#RightAddCosetEquivalence\">RightAddCosetEquivalence</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightAddCosetEquivalence_rel","kind":"theorem","line":71,"name":"rightAddCosetEquivalence_rel","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#rightCosetEquivalence_rel\"><span class=\"name\">rightCosetEquivalence_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#RightCosetEquivalence\">RightCosetEquivalence</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#rightCosetEquivalence_rel","kind":"theorem","line":71,"name":"rightCosetEquivalence_rel","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L71-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#RightAddCosetEquivalence\"><span class=\"name\">RightAddCosetEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Equality of two right cosets `s + a` and `s + b`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#RightAddCosetEquivalence","kind":"def","line":67,"name":"RightAddCosetEquivalence","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#RightCosetEquivalence\"><span class=\"name\">RightCosetEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Equality of two right cosets `s * a` and `s * b`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#RightCosetEquivalence","kind":"def","line":66,"name":"RightCosetEquivalence","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L66-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCosetEquivalence_rel\"><span class=\"name\">leftAddCosetEquivalence_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#LeftAddCosetEquivalence\">LeftAddCosetEquivalence</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftAddCosetEquivalence_rel","kind":"theorem","line":62,"name":"leftAddCosetEquivalence_rel","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#leftCosetEquivalence_rel\"><span class=\"name\">leftCosetEquivalence_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coset/Basic.html#LeftCosetEquivalence\">LeftCosetEquivalence</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#leftCosetEquivalence_rel","kind":"theorem","line":62,"name":"leftCosetEquivalence_rel","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#LeftAddCosetEquivalence\"><span class=\"name\">LeftAddCosetEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Equality of two left cosets `a + s` and `b + s`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#LeftAddCosetEquivalence","kind":"def","line":58,"name":"LeftAddCosetEquivalence","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#LeftCosetEquivalence\"><span class=\"name\">LeftCosetEquivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Equality of two left cosets `a * s` and `b * s`. ","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#LeftCosetEquivalence","kind":"def","line":57,"name":"LeftCosetEquivalence","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L57-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightAddCoset\"><span class=\"name\">mem_rightAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxS</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite.op\">AddOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightAddCoset","kind":"theorem","line":53,"name":"mem_rightAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightCoset\"><span class=\"name\">mem_rightCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxS</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_rightCoset","kind":"theorem","line":53,"name":"mem_rightCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L53-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftAddCoset\"><span class=\"name\">mem_leftAddCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxS</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftAddCoset","kind":"theorem","line":49,"name":"mem_leftAddCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftCoset\"><span class=\"name\">mem_leftCoset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxS</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Coset/Basic.html#mem_leftCoset","kind":"theorem","line":49,"name":"mem_leftCoset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/GroupTheory/Coset/Basic.lean#L49-L51"}}],"imports":["Init","Mathlib.Algebra.Group.Action.Pointwise.Set.Basic","Mathlib.Algebra.Group.Subgroup.Basic","Mathlib.Data.Setoid.Basic","Mathlib.GroupTheory.Coset.Defs"],"instances":[],"name":"Mathlib.GroupTheory.Coset.Basic"}