{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Basic.html#Aesop.Frontend.elabBoolLit\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">elabBoolLit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Aesop.bool_lit</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Frontend/Basic.html#Aesop.Frontend.elabBoolLit","kind":"def","line":20,"name":"Aesop.Frontend.elabBoolLit","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Frontend/Basic.lean#L20-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Basic.html#Aesop.Frontend.Parser.bool_litFalse\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">bool_litFalse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Aesop/Frontend/Basic.html#Aesop.Frontend.Parser.bool_litFalse","kind":"def","line":16,"name":"Aesop.Frontend.Parser.bool_litFalse","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Frontend/Basic.lean#L16-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Basic.html#Aesop.Frontend.Parser.bool_litTrue\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">bool_litTrue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Aesop/Frontend/Basic.html#Aesop.Frontend.Parser.bool_litTrue","kind":"def","line":15,"name":"Aesop.Frontend.Parser.bool_litTrue","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Frontend/Basic.lean#L15-L15"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Basic.html#Aesop.Frontend.Parser.Aesop.bool_lit.quot\"><span class=\"name\">Aesop</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Aesop</span>.<span class=\"name\">bool_lit</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Aesop/Frontend/Basic.html#Aesop.Frontend.Parser.Aesop.bool_lit.quot","kind":"def","line":13,"name":"Aesop.Frontend.Parser.Aesop.bool_lit.quot","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Frontend/Basic.lean#L13-L13"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Frontend/Basic.html#Lean.Parser.Category.Aesop.bool_lit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">Aesop</span>.<span class=\"name\">bool_lit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>","info":{"doc":"","docLink":"./Aesop/Frontend/Basic.html#Lean.Parser.Category.Aesop.bool_lit","kind":"def","line":13,"name":"Lean.Parser.Category.Aesop.bool_lit","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Frontend/Basic.lean#L13-L13"}}],"imports":["Init","Lean"],"instances":[],"name":"Aesop.Frontend.Basic"}