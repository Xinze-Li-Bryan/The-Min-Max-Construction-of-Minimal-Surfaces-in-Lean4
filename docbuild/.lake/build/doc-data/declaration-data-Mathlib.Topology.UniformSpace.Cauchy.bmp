{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.secondCountable_of_separable\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">secondCountable_of_separable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#TopologicalSpace.SeparableSpace\">TopologicalSpace.SeparableSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"A separable uniform space with countably generated uniformity filter is second countable:\none obtains a countable basis by taking the balls centered at points in a dense subset,\nand with rational \"radii\" from a countable open symmetric antitone basis of `ùì§ Œ±`. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.secondCountable_of_separable","kind":"instance","line":833,"name":"UniformSpace.secondCountable_of_separable","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L833-L857"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.firstCountableTopology\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">firstCountableTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#FirstCountableTopology\">FirstCountableTopology</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.firstCountableTopology","kind":"instance","line":830,"name":"UniformSpace.firstCountableTopology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L830-L831"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_cauchySeq_tendsto\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">complete_of_cauchySeq_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H'</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"A sequentially complete uniform space with a countable basis of the uniformity filter is\ncomplete. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_cauchySeq_tendsto","kind":"theorem","line":819,"name":"UniformSpace.complete_of_cauchySeq_tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L819-L825"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_convergent_controlled_sequences\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">complete_of_convergent_controlled_sequences</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">HU</span> :\n  <span class=\"fn\">‚àÄ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">(‚àÄ (<span class=\"fn\">N </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span> ‚Üí <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span> ‚Üí <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">m</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></span></span>)</span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"A uniform space is complete provided that (a) its uniformity filter has a countable basis;\n(b) any sequence satisfying a \"controlled\" version of the Cauchy condition converges. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_convergent_controlled_sequences","kind":"theorem","line":806,"name":"UniformSpace.complete_of_convergent_controlled_sequences","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L806-L817"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.le_nhds_of_seq_tendsto_nhds\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">le_nhds_of_seq_tendsto_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_le</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶É<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>‚¶Ñ</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"If the sequence `SequentiallyComplete.seq` converges to `a`, then `f ‚â§ ùìù a`. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.le_nhds_of_seq_tendsto_nhds","kind":"theorem","line":782,"name":"SequentiallyComplete.le_nhds_of_seq_tendsto_nhds","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L782-L794"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_is_cauchySeq\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq_is_cauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_le</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_is_cauchySeq","kind":"theorem","line":779,"name":"SequentiallyComplete.seq_is_cauchySeq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L779-L780"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_pair_mem\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq_pair_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶É<span class=\"fn\">N </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">m</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_pair_mem","kind":"theorem","line":775,"name":"SequentiallyComplete.seq_pair_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L775-L777"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_mem\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_mem","kind":"theorem","line":772,"name":"SequentiallyComplete.seq_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L772-L773"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span></div></div>","info":{"doc":"A sequence of points such that `seq n ‚àà setSeq n`. Here `setSeq` is an antitone\nsequence of sets `setSeq n ‚àà f` with diameters controlled by a given sequence\nof entourages. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq","kind":"def","line":766,"name":"SequentiallyComplete.seq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L766-L770"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_prod_subset\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_prod_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_prod_subset","kind":"theorem","line":760,"name":"SequentiallyComplete.setSeq_prod_subset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L760-L764"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_sub_aux\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_sub_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeqAux\">setSeqAux</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_sub_aux","kind":"theorem","line":757,"name":"SequentiallyComplete.setSeq_sub_aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L757-L758"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mono\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶É<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mono","kind":"theorem","line":754,"name":"SequentiallyComplete.setSeq_mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L754-L755"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mem\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mem","kind":"theorem","line":751,"name":"SequentiallyComplete.setSeq_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L751-L752"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"Given a Cauchy filter `f` and a sequence `U` of entourages, `set_seq` provides\nan antitone sequence of sets `s n ‚àà f` such that `s n √óÀ¢ s n ‚äÜ U`. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq","kind":"def","line":746,"name":"SequentiallyComplete.setSeq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L746-L749"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeqAux\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeqAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U_mem</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"An auxiliary sequence of sets approximating a Cauchy filter. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeqAux","kind":"def","line":742,"name":"SequentiallyComplete.setSeqAux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L742-L744"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_closure_interUnionBalls\"><span class=\"name\">isCompact_closure_interUnionBalls</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#interUnionBalls\">interUnionBalls</a> <span class=\"fn\">xs</span> <span class=\"fn\">u</span> <span class=\"fn\">U</span>)</span>)</span></span></div></div>","info":{"doc":"The construction `interUnionBalls` is used to have a relatively compact set. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_closure_interUnionBalls","kind":"theorem","line":712,"name":"isCompact_closure_interUnionBalls","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L712-L718"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_interUnionBalls\"><span class=\"name\">totallyBounded_interUnionBalls</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#interUnionBalls\">interUnionBalls</a> <span class=\"fn\">xs</span> <span class=\"fn\">u</span> <span class=\"fn\">U</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_interUnionBalls","kind":"theorem","line":698,"name":"totallyBounded_interUnionBalls","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L698-L710"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#interUnionBalls\"><span class=\"name\">interUnionBalls</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"Given a family of points `xs n`, a family of entourages `V n` of the diagonal and a family of\nnatural numbers `u n`, the intersection over `n` of the `V n`-neighborhood of `xs 1, ..., xs (u n)`.\nDesigned to be relatively compact when `V n` tends to the diagonal. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#interUnionBalls","kind":"def","line":692,"name":"interUnionBalls","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L692-L696"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.totallyBounded_range\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">totallyBounded_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"Every Cauchy sequence over `‚Ñï` is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.totallyBounded_range","kind":"theorem","line":680,"name":"CauchySeq.totallyBounded_range","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L680-L690"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_of_totallyBounded_isClosed\"><span class=\"name\">isCompact_of_totallyBounded_isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"**Alias** of `TotallyBounded.isCompact_of_isClosed`.","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_of_totallyBounded_isClosed","kind":"theorem","line":677,"name":"isCompact_of_totallyBounded_isClosed","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L677-L678"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.isCompact_of_isClosed\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">isCompact_of_isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.isCompact_of_isClosed","kind":"theorem","line":674,"name":"TotallyBounded.isCompact_of_isClosed","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L674-L675"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.isCompact_of_isComplete\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">isCompact_of_isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.isCompact_of_isComplete","kind":"theorem","line":671,"name":"TotallyBounded.isCompact_of_isComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L671-L672"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_of_compact\"><span class=\"name\">complete_of_compact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_of_compact","kind":"instance","line":667,"name":"complete_of_compact","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L667-L669"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.isComplete\"><span class=\"name\">IsCompact</span>.<span class=\"name\">isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.isComplete","kind":"theorem","line":663,"name":"IsCompact.isComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L663-L664"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.totallyBounded\"><span class=\"name\">IsCompact</span>.<span class=\"name\">totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.totallyBounded","kind":"theorem","line":660,"name":"IsCompact.totallyBounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L660-L661"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_iff_totallyBounded_isComplete\"><span class=\"name\">isCompact_iff_totallyBounded_isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_iff_totallyBounded_isComplete","kind":"theorem","line":647,"name":"isCompact_iff_totallyBounded_isComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L647-L658"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_ultrafilter\"><span class=\"name\">totallyBounded_iff_ultrafilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_ultrafilter","kind":"theorem","line":641,"name":"totallyBounded_iff_ultrafilter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L641-L645"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_filter\"><span class=\"name\">totallyBounded_iff_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> ‚Üí <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">c</span> ‚â§ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">c</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_filter","kind":"theorem","line":621,"name":"totallyBounded_iff_filter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L621-L639"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Ultrafilter.cauchy_of_totallyBounded\"><span class=\"name\">Ultrafilter</span>.<span class=\"name\">cauchy_of_totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Ultrafilter.cauchy_of_totallyBounded","kind":"theorem","line":609,"name":"Ultrafilter.cauchy_of_totallyBounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L609-L619"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.image\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span></div></div>","info":{"doc":"The image of a totally bounded set under a uniformly continuous map is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.image","kind":"theorem","line":597,"name":"TotallyBounded.image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L597-L607"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.insert\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `totallyBounded_insert`.","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.insert","kind":"theorem","line":595,"name":"TotallyBounded.insert","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L595-L595"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_insert\"><span class=\"name\">totallyBounded_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_insert","kind":"theorem","line":590,"name":"totallyBounded_insert","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L590-L593"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.union\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> (<span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">‚à™</a> <span class=\"fn\">t</span>)</span></div></div>","info":{"doc":"The union of two totally bounded sets is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.union","kind":"theorem","line":585,"name":"TotallyBounded.union","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L585-L588"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_union\"><span class=\"name\">totallyBounded_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> (<span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">‚à™</a> <span class=\"fn\">t</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"The union of two sets is totally bounded\nif and only if each of the two sets is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_union","kind":"theorem","line":577,"name":"totallyBounded_union","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L577-L583"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_empty\"><span class=\"name\">totallyBounded_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">‚àÖ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_empty","kind":"theorem","line":574,"name":"totallyBounded_empty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L574-L575"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_singleton\"><span class=\"name\">totallyBounded_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_singleton","kind":"theorem","line":571,"name":"totallyBounded_singleton","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L571-L572"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Subsingleton.totallyBounded\"><span class=\"name\">Set</span>.<span class=\"name\">Subsingleton</span>.<span class=\"name\">totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Set/Subsingleton.html#Set.Subsingleton\">Subsingleton</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"A subsingleton is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Subsingleton.totallyBounded","kind":"theorem","line":566,"name":"Set.Subsingleton.totallyBounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L566-L569"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Finite.totallyBounded\"><span class=\"name\">Set</span>.<span class=\"name\">Finite</span>.<span class=\"name\">totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"A finite set is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Finite.totallyBounded","kind":"theorem","line":562,"name":"Set.Finite.totallyBounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L562-L564"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_sUnion\"><span class=\"name\">totallyBounded_sUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> (<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">S</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"A union of a finite family of sets is totally bounded\nif and only if each set of the family is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_sUnion","kind":"theorem","line":556,"name":"totallyBounded_sUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L556-L560"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_biUnion\"><span class=\"name\">totallyBounded_biUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(‚ãÉ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">I</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"A union indexed by a finite set is totally bounded\nif and only if each set of the family is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_biUnion","kind":"theorem","line":549,"name":"totallyBounded_biUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L549-L554"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iUnion\"><span class=\"name\">totallyBounded_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(‚ãÉ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"A finite indexed union is totally bounded\nif and only if each set of the family is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iUnion","kind":"theorem","line":538,"name":"totallyBounded_iUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L538-L547"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_closure\"><span class=\"name\">totallyBounded_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_closure","kind":"theorem","line":534,"name":"totallyBounded_closure","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L534-L536"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.closure\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">_root_.closure</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"The closure of a totally bounded set is totally bounded. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.closure","kind":"theorem","line":528,"name":"TotallyBounded.closure","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L528-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.subset\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s‚ÇÅ </span><span class=\"fn\">s‚ÇÇ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s‚ÇÅ</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s‚ÇÇ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s‚ÇÅ</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.subset","kind":"theorem","line":523,"name":"TotallyBounded.subset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L523-L526"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_of_forall_symm\"><span class=\"name\">totallyBounded_of_forall_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">V</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#IsSymmetricRel\">IsSymmetricRel</a> <span class=\"fn\">V</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace.ball\">UniformSpace.ball</a> <span class=\"fn\">y</span> <span class=\"fn\">V</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_of_forall_symm","kind":"theorem","line":517,"name":"totallyBounded_of_forall_symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L517-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.totallyBounded_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">totallyBounded_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.totallyBounded_iff","kind":"theorem","line":511,"name":"Filter.HasBasis.totallyBounded_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L511-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_subset\"><span class=\"name\">totallyBounded_iff_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">d</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚äÜ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">d</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_subset","kind":"theorem","line":506,"name":"totallyBounded_iff_subset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L506-L509"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.exists_subset\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">exists_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚äÜ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.exists_subset","kind":"theorem","line":490,"name":"TotallyBounded.exists_subset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L490-L504"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\"><span class=\"name\">TotallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A set `s` is totally bounded if for every entourage `d` there is a finite\nset of points `t` such that every element of `s` is `d`-near to some element of `t`. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded","kind":"def","line":485,"name":"TotallyBounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L485-L488"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.DiscreteUnif.eq_const_of_cauchy\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">DiscreteUnif</span>.<span class=\"name\">eq_const_of_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.cauchyConst\">DiscreteUniformity.cauchyConst</a> <span class=\"fn\">hf</span>)</span></span></div></div>","info":{"doc":"**Alias** of `DiscreteUniformity.eq_pure_cauchyConst`.","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.DiscreteUnif.eq_const_of_cauchy","kind":"theorem","line":480,"name":"UniformSpace.DiscreteUnif.eq_const_of_cauchy","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L480-L481"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.eq_pure_cauchyConst\"><span class=\"name\">DiscreteUniformity</span>.<span class=\"name\">eq_pure_cauchyConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.cauchyConst\">cauchyConst</a> <span class=\"fn\">hf</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.eq_pure_cauchyConst","kind":"theorem","line":477,"name":"DiscreteUniformity.eq_pure_cauchyConst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L477-L478"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.DiscreteUnif.cauchyConst\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">DiscreteUnif</span>.<span class=\"name\">cauchyConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span></div></div>","info":{"doc":"**Alias** of `DiscreteUniformity.cauchyConst`.\n\n---\n\nA constant to which a Cauchy filter in a discrete uniform space converges. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.DiscreteUnif.cauchyConst","kind":"def","line":474,"name":"UniformSpace.DiscreteUnif.cauchyConst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L474-L475"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.cauchyConst\"><span class=\"name\">DiscreteUniformity</span>.<span class=\"name\">cauchyConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span></div></div>","info":{"doc":"A constant to which a Cauchy filter in a discrete uniform space converges. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.cauchyConst","kind":"def","line":470,"name":"DiscreteUniformity.cauchyConst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L470-L472"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.instCompleteSpace\"><span class=\"name\">DiscreteUniformity</span>.<span class=\"name\">instCompleteSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"The discrete uniformity makes a space complete. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.instCompleteSpace","kind":"instance","line":462,"name":"DiscreteUniformity.instCompleteSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L462-L466"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.DiscreteUnif.cauchy_le_pure\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">DiscreteUnif</span>.<span class=\"name\">cauchy_le_pure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"**Alias** of `DiscreteUniformity.eq_pure_of_cauchy`.\n\n---\n\nA Cauchy filter in a discrete uniform space is contained in the principal filter\nof a point. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.DiscreteUnif.cauchy_le_pure","kind":"theorem","line":459,"name":"UniformSpace.DiscreteUnif.cauchy_le_pure","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L459-L460"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.eq_pure_of_cauchy\"><span class=\"name\">DiscreteUniformity</span>.<span class=\"name\">eq_pure_of_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/DiscreteUniformity.html#DiscreteUniformity\">DiscreteUniformity</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"A Cauchy filter in a discrete uniform space is contained in the principal filter\nof a point. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#DiscreteUniformity.eq_pure_of_cauchy","kind":"theorem","line":449,"name":"DiscreteUniformity.eq_pure_of_cauchy","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L449-L457"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsClosed.isComplete\"><span class=\"name\">IsClosed</span>.<span class=\"name\">isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsClosed.isComplete","kind":"theorem","line":440,"name":"IsClosed.isComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L440-L443"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_limUnder\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">tendsto_limUnder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#limUnder\">limUnder</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">u</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_limUnder","kind":"theorem","line":436,"name":"CauchySeq.tendsto_limUnder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L436-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.le_nhds_lim\"><span class=\"name\">Cauchy</span>.<span class=\"name\">le_nhds_lim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#lim\">lim</a> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.le_nhds_lim","kind":"theorem","line":432,"name":"Cauchy.le_nhds_lim","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L432-L434"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_isComplete\"><span class=\"name\">cauchySeq_tendsto_of_isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h‚ÇÇ</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h‚ÇÉ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ <span class=\"fn\">v</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">v</span>)</span></span></span></div></div>","info":{"doc":"If `K` is a complete subset, then any Cauchy sequence in `K` converges to a point in `K` ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_isComplete","kind":"theorem","line":426,"name":"cauchySeq_tendsto_of_isComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L426-L430"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_complete\"><span class=\"name\">cauchySeq_tendsto_of_complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span>)</span></span></span></div></div>","info":{"doc":"A Cauchy sequence in a complete space converges ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_complete","kind":"theorem","line":421,"name":"cauchySeq_tendsto_of_complete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L421-L424"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff_exists_tendsto\"><span class=\"name\">cauchy_map_iff_exists_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff_exists_tendsto","kind":"theorem","line":417,"name":"cauchy_map_iff_exists_tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L417-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_exists_le_nhds\"><span class=\"name\">cauchy_iff_exists_le_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_exists_le_nhds","kind":"theorem","line":413,"name":"cauchy_iff_exists_le_nhds","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L413-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_ultrafilter\"><span class=\"name\">completeSpace_iff_ultrafilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_ultrafilter","kind":"theorem","line":409,"name":"completeSpace_iff_ultrafilter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L409-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_isComplete_univ\"><span class=\"name\">completeSpace_iff_isComplete_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_isComplete_univ","kind":"theorem","line":406,"name":"completeSpace_iff_isComplete_univ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L406-L407"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_of_isComplete_univ\"><span class=\"name\">completeSpace_of_isComplete_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"If `univ` is complete, the space is a complete space ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_of_isComplete_univ","kind":"theorem","line":402,"name":"completeSpace_of_isComplete_univ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L402-L404"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.addOpposite\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">addOpposite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite\">·µÉ·µí·µñ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.addOpposite","kind":"instance","line":395,"name":"CompleteSpace.addOpposite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L395-L395"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mulOpposite\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">mulOpposite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">·µê·µí·µñ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mulOpposite","kind":"instance","line":395,"name":"CompleteSpace.mulOpposite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L395-L400"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_prod_of_nonempty\"><span class=\"name\">completeSpace_prod_of_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ≤</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_prod_of_nonempty","kind":"theorem","line":391,"name":"completeSpace_prod_of_nonempty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L391-L393"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.snd_of_prod\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">snd_of_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ≤</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.snd_of_prod","kind":"theorem","line":384,"name":"CompleteSpace.snd_of_prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L384-L389"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.fst_of_prod\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">fst_of_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.fst_of_prod","kind":"theorem","line":377,"name":"CompleteSpace.fst_of_prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L377-L382"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.prod\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.prod","kind":"instance","line":370,"name":"CompleteSpace.prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L370-L375"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_univ\"><span class=\"name\">complete_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_univ","kind":"theorem","line":365,"name":"complete_univ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L365-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.complete\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst‚úù</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></div></div>","info":{"doc":"In a complete uniform space, every Cauchy filter converges. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.complete","kind":"theorem","line":363,"name":"CompleteSpace.complete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L363-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mk\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">complete</span> : <span class=\"fn\">‚àÄ {<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mk","kind":"ctor","line":361,"name":"CompleteSpace.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L361-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\"><span class=\"name\">CompleteSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A complete space is defined here using uniformities. A uniform space\nis complete if every Cauchy filter converges. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace","kind":"class","line":359,"name":"CompleteSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L359-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iUnion_separated\"><span class=\"name\">isComplete_iUnion_separated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">j</span></span>, <span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span> ‚Üí <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">(‚ãÉ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iUnion_separated","kind":"theorem","line":339,"name":"isComplete_iUnion_separated","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L339-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete.union\"><span class=\"name\">IsComplete</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> (<span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">‚à™</a> <span class=\"fn\">t</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete.union","kind":"theorem","line":332,"name":"IsComplete.union","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L332-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter'\"><span class=\"name\">isComplete_iff_ultrafilter'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">l</span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter'","kind":"theorem","line":328,"name":"isComplete_iff_ultrafilter'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L328-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter\"><span class=\"name\">isComplete_iff_ultrafilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter","kind":"theorem","line":321,"name":"isComplete_iff_ultrafilter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L321-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_clusterPt\"><span class=\"name\">isComplete_iff_clusterPt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ClusterPt\">ClusterPt</a> <span class=\"fn\">x</span> <span class=\"fn\">l</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_clusterPt","kind":"theorem","line":316,"name":"isComplete_iff_clusterPt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L316-L319"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_of_controlled\"><span class=\"name\">cauchySeq_of_controlled</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">N </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span> ‚Üí <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span> ‚Üí <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_of_controlled","kind":"theorem","line":304,"name":"cauchySeq_of_controlled","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L304-L314"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff'\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">cauchySeq_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œ≥</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">N</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\">‚àÄ <span class=\"fn\">n</span> ‚â• <span class=\"fn\">N</span>, <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">N</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff'","kind":"theorem","line":294,"name":"Filter.HasBasis.cauchySeq_iff'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L294-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">cauchySeq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œ≥</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">N</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">m</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span> ‚Üí <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">m</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff","kind":"theorem","line":286,"name":"Filter.HasBasis.cauchySeq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L286-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_shift\"><span class=\"name\">cauchySeq_shift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span></span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span></div></div>","info":{"doc":"Any shift of a Cauchy sequence is also a Cauchy sequence. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_shift","kind":"theorem","line":275,"name":"cauchySeq_shift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L275-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#tendsto_nhds_of_cauchySeq_of_subseq\"><span class=\"name\">tendsto_nhds_of_cauchySeq_of_subseq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span>) <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span></div></div>","info":{"doc":"If a Cauchy sequence has a convergent subsequence, then it converges. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#tendsto_nhds_of_cauchySeq_of_subseq","kind":"theorem","line":269,"name":"tendsto_nhds_of_cauchySeq_of_subseq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L269-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.subseq_mem_entourage\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">subseq_mem_entourage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hV</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">u</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">0</span>)</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">n</span>)</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.subseq_mem_entourage","kind":"theorem","line":261,"name":"Filter.Tendsto.subseq_mem_entourage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L261-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_mem\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">subseq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hV</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">n</span>)</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_mem","kind":"theorem","line":251,"name":"CauchySeq.subseq_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L251-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformContinuous.comp_cauchySeq\"><span class=\"name\">UniformContinuous</span>.<span class=\"name\">comp_cauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformContinuous.comp_cauchySeq","kind":"theorem","line":247,"name":"UniformContinuous.comp_cauchySeq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L247-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.eventually_eventually\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">eventually_eventually</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hV</span> : <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·∂†</a> (<span class=\"fn\">k</span> : <span class=\"fn\">Œ≤</span>) (<span class=\"fn\">l</span> : <span class=\"fn\">Œ≤</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">k</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">l</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">V</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.eventually_eventually","kind":"theorem","line":243,"name":"CauchySeq.eventually_eventually","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L243-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>","info":{"doc":"**Alias** of `CauchySeq.prodMk`.","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod","kind":"theorem","line":240,"name":"CauchySeq.prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L240-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prodMk\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">prodMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prodMk","kind":"theorem","line":235,"name":"CauchySeq.prodMk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L235-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod_map\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">prod_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ¥</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ¥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">Œ¥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">v</span>)</span></span></div></div>","info":{"doc":"**Alias** of `CauchySeq.prodMap`.","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod_map","kind":"theorem","line":232,"name":"CauchySeq.prod_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L232-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prodMap\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">prodMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ¥</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ¥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\">Œ¥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">v</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prodMap","kind":"theorem","line":228,"name":"CauchySeq.prodMap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L228-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff\"><span class=\"name\">cauchySeq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">V</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\">‚àÄ <span class=\"fn\">k</span> ‚â• <span class=\"fn\">N</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">l</span> ‚â• <span class=\"fn\">N</span>, <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">k</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">l</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">V</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff","kind":"theorem","line":224,"name":"cauchySeq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L224-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff'\"><span class=\"name\">cauchySeq_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">V</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·∂†</a> (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">u</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">V</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff'","kind":"theorem","line":220,"name":"cauchySeq_iff'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L220-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_subseq_mem\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">subseq_subseq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hV</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">œÜ</span>) <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">œÜ</span>) <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_subseq_mem","kind":"theorem","line":213,"name":"CauchySeq.subseq_subseq_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L213-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Function.Bijective.cauchySeq_comp_iff\"><span class=\"name\">Function</span>.<span class=\"name\">Bijective</span>.<span class=\"name\">cauchySeq_comp_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Bijective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Function.Bijective.cauchySeq_comp_iff","kind":"theorem","line":207,"name":"Function.Bijective.cauchySeq_comp_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L207-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_injective\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">comp_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#NoMaxOrder\">NoMaxOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_injective","kind":"theorem","line":203,"name":"CauchySeq.comp_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L203-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_tendsto\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">comp_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≥</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">g</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_tendsto","kind":"theorem","line":199,"name":"CauchySeq.comp_tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L199-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff_tendsto\"><span class=\"name\">cauchySeq_iff_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">u</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff_tendsto","kind":"theorem","line":195,"name":"cauchySeq_iff_tendsto","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L195-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_const\"><span class=\"name\">cauchySeq_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œ≤</span>) =&gt; <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_const","kind":"theorem","line":192,"name":"cauchySeq_const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L192-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchySeq\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">cauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchySeq","kind":"theorem","line":188,"name":"Filter.Tendsto.cauchySeq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L188-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.mem_entourage\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">mem_entourage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hV</span> : <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">k‚ÇÄ</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\">k‚ÇÄ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">i</span> ‚Üí <span class=\"fn\"><span class=\"fn\">k‚ÇÄ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">j</span> ‚Üí <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">j</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">V</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.mem_entourage","kind":"theorem","line":182,"name":"CauchySeq.mem_entourage","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L182-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.nonempty\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.nonempty","kind":"theorem","line":179,"name":"CauchySeq.nonempty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L179-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_uniformity\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">tendsto_uniformity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">u</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_uniformity","kind":"theorem","line":175,"name":"CauchySeq.tendsto_uniformity","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L175-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\"><span class=\"name\">CauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Cauchy sequences. Usually defined on ‚Ñï, but often it is also useful to say that a function\ndefined on ‚Ñù is Cauchy at +‚àû to deduce convergence. Therefore, we define it in a type class that\nis general enough to cover both ‚Ñï and ‚Ñù, which are the main motivating examples. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq","kind":"def","line":169,"name":"CauchySeq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L169-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap'\"><span class=\"name\">Cauchy</span>.<span class=\"name\">comap'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap'","kind":"theorem","line":164,"name":"Cauchy.comap'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L164-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap\"><span class=\"name\">Cauchy</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap","kind":"theorem","line":155,"name":"Cauchy.comap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L155-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.map\"><span class=\"name\">Cauchy</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.map","kind":"theorem","line":147,"name":"Cauchy.map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L147-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_iff_adhp_of_cauchy\"><span class=\"name\">le_nhds_iff_adhp_of_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ClusterPt\">ClusterPt</a> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_iff_adhp_of_cauchy","kind":"theorem","line":143,"name":"le_nhds_iff_adhp_of_cauchy","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L143-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp\"><span class=\"name\">le_nhds_of_cauchy_adhp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">adhs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ClusterPt\">ClusterPt</a> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"If `x` is an adherent (cluster) point for a Cauchy filter `f`, then it is a limit point\nfor `f`. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp","kind":"theorem","line":133,"name":"le_nhds_of_cauchy_adhp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L133-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp_aux\"><span class=\"name\">le_nhds_of_cauchy_adhp_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">adhs</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\">t</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">t</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">y</span> : <span class=\"fn\">Œ±</span>), <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"The common part of the proofs of `le_nhds_of_cauchy_adhp` and\n`SequentiallyComplete.le_nhds_of_seq_tendsto_nhds`: if for any entourage `s`\none can choose a set `t ‚àà f` of diameter `s` such that it contains a point `y`\nwith `(x, y) ‚àà s`, then `f` converges to `x`. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp_aux","kind":"theorem","line":117,"name":"le_nhds_of_cauchy_adhp_aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L117-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.prod\"><span class=\"name\">Cauchy</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">g</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.prod","kind":"theorem","line":112,"name":"Cauchy.prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L112-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_prod_iff\"><span class=\"name\">cauchy_prod_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\">F</span>)</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <a href=\"./Init/Prelude.html#Prod.snd\">Prod.snd</a> <span class=\"fn\">F</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_prod_iff","kind":"theorem","line":108,"name":"cauchy_prod_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L108-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_comap_uniformSpace\"><span class=\"name\">cauchy_comap_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_comap_uniformSpace","kind":"theorem","line":103,"name":"cauchy_comap_uniformSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L103-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace'\"><span class=\"name\">cauchy_iInf_uniformSpace'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace'","kind":"theorem","line":98,"name":"cauchy_iInf_uniformSpace'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L98-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace\"><span class=\"name\">cauchy_iInf_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace","kind":"theorem","line":92,"name":"cauchy_iInf_uniformSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L92-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_inf_uniformSpace\"><span class=\"name\">cauchy_inf_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_inf_uniformSpace","kind":"theorem","line":86,"name":"cauchy_inf_uniformSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L86-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono_uniformSpace\"><span class=\"name\">Cauchy</span>.<span class=\"name\">mono_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hF</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono_uniformSpace","kind":"theorem","line":82,"name":"Cauchy.mono_uniformSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L82-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchy_map\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">cauchy_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchy_map","kind":"theorem","line":78,"name":"Filter.Tendsto.cauchy_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_pure\"><span class=\"name\">cauchy_pure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">a</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_pure","kind":"theorem","line":75,"name":"cauchy_pure","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L75-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_nhds\"><span class=\"name\">cauchy_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_nhds","kind":"theorem","line":72,"name":"cauchy_nhds","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L72-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono'\"><span class=\"name\">Cauchy</span>.<span class=\"name\">mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_c</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">h_le</span> : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">g</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono'","kind":"theorem","line":69,"name":"Cauchy.mono'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono\"><span class=\"name\">Cauchy</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_c</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_le</span> : <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono","kind":"theorem","line":66,"name":"Cauchy.mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff'\"><span class=\"name\">cauchy_map_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> (<span class=\"fn\">l</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">l</span>) <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff'","kind":"theorem","line":62,"name":"cauchy_map_iff'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L62-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff\"><span class=\"name\">cauchy_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> (<span class=\"fn\">l</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">l</span>) <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff","kind":"theorem","line":58,"name":"cauchy_map_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L58-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.ultrafilter_of\"><span class=\"name\">Cauchy</span>.<span class=\"name\">ultrafilter_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter.of\">Ultrafilter.of</a> <span class=\"fn\">l</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.ultrafilter_of","kind":"theorem","line":52,"name":"Cauchy.ultrafilter_of","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L52-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_le\"><span class=\"name\">cauchy_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">l</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_le","kind":"theorem","line":48,"name":"cauchy_iff_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L48-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff\"><span class=\"name\">cauchy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\">t</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">t</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff","kind":"theorem","line":44,"name":"cauchy_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L44-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff'\"><span class=\"name\">cauchy_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff'","kind":"theorem","line":40,"name":"cauchy_iff'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L40-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchy_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">cauchy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchy_iff","kind":"theorem","line":33,"name":"Filter.HasBasis.cauchy_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L33-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\"><span class=\"name\">IsComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A set `s` is called *complete*, if any Cauchy filter `f` such that `s ‚àà f`\nhas a limit in `s` (formally, it satisfies `f ‚â§ ùìù x` for some `x ‚àà s`). ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete","kind":"def","line":28,"name":"IsComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L28-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\"><span class=\"name\">Cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">uniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A filter `f` is Cauchy if for every entourage `r`, there exists an\n`s ‚àà f` such that `s √ó s ‚äÜ r`. This is a generalization of Cauchy\nsequences, because if `a : ‚Ñï ‚Üí Œ±` then the filter of sets containing\ncofinitely many of the `a n` is Cauchy iff `a` is a Cauchy sequence. ","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy","kind":"def","line":21,"name":"Cauchy","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/UniformSpace/Cauchy.lean#L21-L26"}}],"imports":["Init","Mathlib.Topology.Algebra.Constructions","Mathlib.Topology.Bases","Mathlib.Algebra.Order.Group.Nat","Mathlib.Topology.UniformSpace.DiscreteUniformity"],"instances":[{"className":"CompleteSpace","name":"CompleteSpace.prod","typeNames":["Prod"]},{"className":"CompleteSpace","name":"CompleteSpace.mulOpposite","typeNames":["MulOpposite"]},{"className":"CompleteSpace","name":"CompleteSpace.addOpposite","typeNames":["AddOpposite"]},{"className":"CompleteSpace","name":"DiscreteUniformity.instCompleteSpace","typeNames":[]},{"className":"CompleteSpace","name":"complete_of_compact","typeNames":[]},{"className":"FirstCountableTopology","name":"UniformSpace.firstCountableTopology","typeNames":[]},{"className":"SecondCountableTopology","name":"UniformSpace.secondCountable_of_separable","typeNames":[]}],"name":"Mathlib.Topology.UniformSpace.Cauchy"}