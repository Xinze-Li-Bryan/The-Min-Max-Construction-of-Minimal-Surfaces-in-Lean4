{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ExistsI.html#Mathlib.Tactic.«tacticExistsi_,,»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«tacticExistsi_,,»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`existsi e₁, e₂, ⋯` applies the tactic `refine ⟨e₁, e₂, ⋯, ?_⟩`. It's purpose is to instantiate\nexistential quantifiers.\n\nExamples:\n\n```lean\nexample : ∃ x : Nat, x = x := by\n  existsi 42\n  rfl\n\nexample : ∃ x : Nat, ∃ y : Nat, x = y := by\n  existsi 42, 42\n  rfl\n```\n","docLink":"./Mathlib/Tactic/ExistsI.html#Mathlib.Tactic.«tacticExistsi_,,»","kind":"def","line":32,"name":"Mathlib.Tactic.«tacticExistsi_,,»","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/ExistsI.lean#L32-L33"}}],"imports":["Init","Mathlib.Init"],"instances":[],"name":"Mathlib.Tactic.ExistsI"}