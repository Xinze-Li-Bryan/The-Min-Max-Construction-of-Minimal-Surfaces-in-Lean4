{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.checkInvariantsIfEnabled\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkInvariantsIfEnabled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.TreeM\">TreeM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.checkInvariantsIfEnabled","kind":"def","line":236,"name":"Aesop.checkInvariantsIfEnabled","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L236-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkInvariantsIfEnabled\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkInvariantsIfEnabled</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootMetaState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkInvariantsIfEnabled","kind":"def","line":229,"name":"Aesop.MVarClusterRef.checkInvariantsIfEnabled","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L229-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkInvariants\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkInvariants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootMetaState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkInvariants","kind":"def","line":219,"name":"Aesop.MVarClusterRef.checkInvariants","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L219-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIntroducedMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkIntroducedMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootMetaState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIntroducedMVars","kind":"def","line":200,"name":"Aesop.MVarClusterRef.checkIntroducedMVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L200-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkNormMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkMVars</span>.<span class=\"name\">checkNormMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootMetaState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkNormMVars","kind":"def","line":175,"name":"Aesop.MVarClusterRef.checkMVars.checkNormMVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L175-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkGoalMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkMVars</span>.<span class=\"name\">checkGoalMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootMetaState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkGoalMVars","kind":"def","line":167,"name":"Aesop.MVarClusterRef.checkMVars.checkGoalMVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L167-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkDroppedMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkMVars</span>.<span class=\"name\">checkDroppedMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkDroppedMVars","kind":"def","line":155,"name":"Aesop.MVarClusterRef.checkMVars.checkDroppedMVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L155-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkAssignedMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkMVars</span>.<span class=\"name\">checkAssignedMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.checkAssignedMVars","kind":"def","line":147,"name":"Aesop.MVarClusterRef.checkMVars.checkAssignedMVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L147-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.getParentInfo\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkMVars</span>.<span class=\"name\">getParentInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars.getParentInfo","kind":"def","line":142,"name":"Aesop.MVarClusterRef.checkMVars.getParentInfo","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L142-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rootMetaState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkMVars","kind":"def","line":127,"name":"Aesop.MVarClusterRef.checkMVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L127-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIrrelevance.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkIrrelevance</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected </span><span class=\"fn\">actual</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIrrelevance.go","kind":"def","line":119,"name":"Aesop.MVarClusterRef.checkIrrelevance.go","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L119-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIrrelevance\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkIrrelevance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIrrelevance","kind":"def","line":105,"name":"Aesop.MVarClusterRef.checkIrrelevance","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L105-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkState.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkState</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ïƒ</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">Ïƒ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">Ïƒ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expected </span><span class=\"fn\">actual</span> : <span class=\"fn\">Ïƒ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkState.go","kind":"def","line":100,"name":"Aesop.MVarClusterRef.checkState.go","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L100-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkState\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkState","kind":"def","line":86,"name":"Aesop.MVarClusterRef.checkState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L86-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkConsistentParentChildLinks.err\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkConsistentParentChildLinks</span>.<span class=\"name\">err</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ReaderT\">ReaderT</a> <a href=\"./Lean/CoreM.html#Lean.Core.Context\">Lean.Core.Context</a> <span class=\"fn\">(<a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/CoreM.html#Lean.Core.State\">Lean.Core.State</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Lean.Exception</a>)</span>)</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkConsistentParentChildLinks.err","kind":"def","line":79,"name":"Aesop.MVarClusterRef.checkConsistentParentChildLinks.err","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkConsistentParentChildLinks\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkConsistentParentChildLinks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkConsistentParentChildLinks","kind":"def","line":59,"name":"Aesop.MVarClusterRef.checkConsistentParentChildLinks","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L59-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkAcyclic.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkAcyclic</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">Î±</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">current</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkAcyclic.go","kind":"def","line":52,"name":"Aesop.MVarClusterRef.checkAcyclic.go","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L52-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkAcyclic\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkAcyclic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkAcyclic","kind":"def","line":38,"name":"Aesop.MVarClusterRef.checkAcyclic","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L38-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIds\"><span class=\"name\">Aesop</span>.<span class=\"name\">MVarClusterRef</span>.<span class=\"name\">checkIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.MVarClusterRef\">MVarClusterRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Tree/Check.html#Aesop.MVarClusterRef.checkIds","kind":"def","line":19,"name":"Aesop.MVarClusterRef.checkIds","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Tree/Check.lean#L19-L36"}}],"imports":["Init","Aesop.Check","Aesop.Tree.State","Aesop.Tree.Traversal","Aesop.Tree.TreeM","Batteries.Lean.HashSet","Aesop.Tree.RunMetaM"],"instances":[],"name":"Aesop.Tree.Check"}