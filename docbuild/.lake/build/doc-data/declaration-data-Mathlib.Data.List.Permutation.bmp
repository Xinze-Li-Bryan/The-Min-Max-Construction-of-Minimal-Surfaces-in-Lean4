{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.nodup_permutations_iff\"><span class=\"name\">List</span>.<span class=\"name\">nodup_permutations_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.nodup_permutations_iff","kind":"theorem","line":508,"name":"List.nodup_permutations_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L508-L519"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutations_take_two\"><span class=\"name\">List</span>.<span class=\"name\">permutations_take_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.take\">take</a> <span class=\"fn\">2</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s</span>).<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#List.cons\">,</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutations_take_two","kind":"theorem","line":504,"name":"List.permutations_take_two","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L504-L506"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.nodup_permutations\"><span class=\"name\">List</span>.<span class=\"name\">nodup_permutations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.nodup_permutations","kind":"theorem","line":466,"name":"List.nodup_permutations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L466-L502"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.nodup_permutations'Aux_iff\"><span class=\"name\">List</span>.<span class=\"name\">nodup_permutations'Aux_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.nodup_permutations'Aux_iff","kind":"theorem","line":453,"name":"List.nodup_permutations'Aux_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L453-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.nodup_permutations'Aux_of_not_mem\"><span class=\"name\">List</span>.<span class=\"name\">nodup_permutations'Aux_of_not_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"**Alias** of `List.nodup_permutations'Aux_of_notMem`.","docLink":"./Mathlib/Data/List/Permutation.html#List.nodup_permutations'Aux_of_not_mem","kind":"theorem","line":450,"name":"List.nodup_permutations'Aux_of_not_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L450-L451"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.nodup_permutations'Aux_of_notMem\"><span class=\"name\">List</span>.<span class=\"name\">nodup_permutations'Aux_of_notMem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.nodup_permutations'Aux_of_notMem","kind":"theorem","line":438,"name":"List.nodup_permutations'Aux_of_notMem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L438-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.injective_permutations'Aux\"><span class=\"name\">List</span>.<span class=\"name\">injective_permutations'Aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.injective_permutations'Aux","kind":"theorem","line":429,"name":"List.injective_permutations'Aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L429-L436"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.length_permutations'Aux\"><span class=\"name\">List</span>.<span class=\"name\">length_permutations'Aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.length_permutations'Aux","kind":"theorem","line":422,"name":"List.length_permutations'Aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L422-L427"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.count_permutations'Aux_self\"><span class=\"name\">List</span>.<span class=\"name\">count_permutations'Aux_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.count\">count</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span>) <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">l</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.takeWhile\">takeWhile</a> <span class=\"fn\">(fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x_1</span>)</span>)</span> <span class=\"fn\">l</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.count_permutations'Aux_self","kind":"theorem","line":409,"name":"List.count_permutations'Aux_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L409-L420"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.get_permutations'Aux\"><span class=\"name\">List</span>.<span class=\"name\">get_permutations'Aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Prelude.html#List.get\">get</a></span> <a href=\"./Init/Prelude.html#Fin.mk\">⟨</a><span class=\"fn\">n</span>, <span class=\"fn\">hn</span><a href=\"./Init/Prelude.html#Fin.mk\">⟩</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.insertIdx\">insertIdx</a></span> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.get_permutations'Aux","kind":"theorem","line":396,"name":"List.get_permutations'Aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L396-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.getElem_permutations'Aux\"><span class=\"name\">List</span>.<span class=\"name\">getElem_permutations'Aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">n</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.insertIdx\">insertIdx</a></span> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.getElem_permutations'Aux","kind":"theorem","line":384,"name":"List.getElem_permutations'Aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L384-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.perm_permutations'_iff\"><span class=\"name\">List</span>.<span class=\"name\">perm_permutations'_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.perm_permutations'_iff","kind":"theorem","line":379,"name":"List.perm_permutations'_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L379-L382"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.perm_permutations_iff\"><span class=\"name\">List</span>.<span class=\"name\">perm_permutations_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.perm_permutations_iff","kind":"theorem","line":374,"name":"List.perm_permutations_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L374-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.Perm.permutations\"><span class=\"name\">List</span>.<span class=\"name\">Perm</span>.<span class=\"name\">permutations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.Perm.permutations","kind":"theorem","line":370,"name":"List.Perm.permutations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L370-L372"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_permutations'\"><span class=\"name\">List</span>.<span class=\"name\">mem_permutations'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_permutations'","kind":"theorem","line":366,"name":"List.mem_permutations'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L366-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutations_perm_permutations'\"><span class=\"name\">List</span>.<span class=\"name\">permutations_perm_permutations'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutations_perm_permutations'","kind":"theorem","line":348,"name":"List.permutations_perm_permutations'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L348-L364"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.Perm.permutations'\"><span class=\"name\">List</span>.<span class=\"name\">Perm</span>.<span class=\"name\">permutations'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.Perm.permutations'","kind":"theorem","line":336,"name":"List.Perm.permutations'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L336-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.perm_permutations'Aux_comm\"><span class=\"name\">List</span>.<span class=\"name\">perm_permutations'Aux_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.flatMap\">flatMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">a</span> <span class=\"fn\">l</span>)</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.flatMap\">flatMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">b</span> <span class=\"fn\">l</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.perm_permutations'Aux_comm","kind":"theorem","line":312,"name":"List.perm_permutations'Aux_comm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L312-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_permutations\"><span class=\"name\">List</span>.<span class=\"name\">mem_permutations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">t</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_permutations","kind":"theorem","line":308,"name":"List.mem_permutations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L308-L310"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_permutationsAux_of_perm\"><span class=\"name\">List</span>.<span class=\"name\">mem_permutationsAux_of_perm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ts </span><span class=\"fn\">is </span><span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> (<span class=\"fn\">is</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span> → <span class=\"fn\">(∃ (<span class=\"fn\">is'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">is'</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">is</span></span>), <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">is'</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_permutationsAux_of_perm","kind":"theorem","line":289,"name":"List.mem_permutationsAux_of_perm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L289-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_permutations_of_perm_lemma\"><span class=\"name\">List</span>.<span class=\"name\">mem_permutations_of_perm_lemma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">is </span><span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> (<a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">is</span>)</span> → <span class=\"fn\">(∃ (<span class=\"fn\">ts'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ts'</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span>), <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ts'</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">is</span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">is</span></span> → <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_permutations_of_perm_lemma","kind":"theorem","line":285,"name":"List.mem_permutations_of_perm_lemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L285-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.length_permutations\"><span class=\"name\">List</span>.<span class=\"name\">length_permutations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.length_permutations","kind":"theorem","line":282,"name":"List.length_permutations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L282-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.length_permutationsAux\"><span class=\"name\">List</span>.<span class=\"name\">length_permutationsAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">is</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>).<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.length_permutationsAux","kind":"theorem","line":271,"name":"List.length_permutationsAux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L271-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.perm_of_mem_permutations\"><span class=\"name\">List</span>.<span class=\"name\">perm_of_mem_permutations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">l₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.perm_of_mem_permutations","kind":"theorem","line":267,"name":"List.perm_of_mem_permutations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L267-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.perm_of_mem_permutationsAux\"><span class=\"name\">List</span>.<span class=\"name\">perm_of_mem_permutationsAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ts </span><span class=\"fn\">is </span><span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> (<span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">is</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.perm_of_mem_permutationsAux","kind":"theorem","line":252,"name":"List.perm_of_mem_permutationsAux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L252-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutations_append\"><span class=\"name\">List</span>.<span class=\"name\">permutations_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">is </span><span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">is</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>).<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span> <span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutations_append","kind":"theorem","line":248,"name":"List.permutations_append","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L248-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux_append\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">is </span><span class=\"fn\">is' </span><span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">is</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>).<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is'</span>)</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> (<span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">is'</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux_append","kind":"theorem","line":236,"name":"List.permutationsAux_append","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L236-L246"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_permutations'\"><span class=\"name\">List</span>.<span class=\"name\">map_permutations'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">ts</span>)</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'\">permutations'</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.map_permutations'","kind":"theorem","line":230,"name":"List.map_permutations'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L230-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_permutations\"><span class=\"name\">List</span>.<span class=\"name\">map_permutations</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">ts</span>)</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.map_permutations","kind":"theorem","line":226,"name":"List.map_permutations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L226-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_permutationsAux\"><span class=\"name\">List</span>.<span class=\"name\">map_permutationsAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">is</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">ts</span>)</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">is</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.map_permutationsAux","kind":"theorem","line":218,"name":"List.map_permutationsAux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L218-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutations_nil\"><span class=\"name\">List</span>.<span class=\"name\">permutations_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutations_nil","kind":"theorem","line":214,"name":"List.permutations_nil","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L214-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux_cons\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">is</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ts</span>).<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.foldr\">foldr</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ts</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">is</span>))</span>\n    <span class=\"fn\"><span class=\"fn\">is</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutations\">permutations</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux_cons","kind":"theorem","line":207,"name":"List.permutationsAux_cons","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L207-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux_nil\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">is</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>.<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux\">permutationsAux</a></span> <span class=\"fn\">is</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux_nil","kind":"theorem","line":203,"name":"List.permutationsAux_nil","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L203-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.length_foldr_permutationsAux2'\"><span class=\"name\">List</span>.<span class=\"name\">length_foldr_permutationsAux2'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ <span class=\"fn\">l</span> ∈ <span class=\"fn\">L</span>, <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.foldr\">foldr</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span>)</span> <span class=\"fn\">r</span> <span class=\"fn\">L</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.length_foldr_permutationsAux2'","kind":"theorem","line":192,"name":"List.length_foldr_permutationsAux2'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L192-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.length_foldr_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">length_foldr_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.foldr\">foldr</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span>)</span> <span class=\"fn\">r</span> <span class=\"fn\">L</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <a href=\"./Init/Prelude.html#List.length\">length</a> <span class=\"fn\">L</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.sum\">sum</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.length_foldr_permutationsAux2","kind":"theorem","line":187,"name":"List.length_foldr_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L187-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_foldr_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">mem_foldr_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.foldr\">foldr</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span>)</span> <span class=\"fn\">r</span> <span class=\"fn\">L</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">l₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>), <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">L</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_foldr_permutationsAux2","kind":"theorem","line":174,"name":"List.mem_foldr_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L174-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.foldr_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">foldr_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r </span><span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.foldr\">foldr</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span>)</span> <span class=\"fn\">r</span> <span class=\"fn\">L</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.flatMap\">flatMap</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span>)</span> <span class=\"fn\">L</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">r</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.foldr_permutationsAux2","kind":"theorem","line":167,"name":"List.foldr_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L167-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.length_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">length_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ys</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.length_permutationsAux2","kind":"theorem","line":163,"name":"List.length_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L163-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_permutationsAux2'\"><span class=\"name\">List</span>.<span class=\"name\">mem_permutationsAux2'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ts </span><span class=\"fn\">ys </span><span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">l₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>), <span class=\"fn\">l₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_permutationsAux2'","kind":"theorem","line":158,"name":"List.mem_permutationsAux2'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L158-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.mem_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">mem_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ts </span><span class=\"fn\">ys </span><span class=\"fn\">l </span><span class=\"fn\">l'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">x</span></span>)</span>.2</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">l₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>), <span class=\"fn\">l₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">l'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.mem_permutationsAux2","kind":"theorem","line":140,"name":"List.mem_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L140-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutations'Aux_eq_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">permutations'Aux_eq_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">t</span><a href=\"./Init/Prelude.html#List.cons\">]</a><a href=\"./Init/Prelude.html#List.cons\">]</a> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutations'Aux_eq_permutationsAux2","kind":"theorem","line":132,"name":"List.permutations'Aux_eq_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L132-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_map_permutations'Aux\"><span class=\"name\">List</span>.<span class=\"name\">map_map_permutations'Aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/Defs.html#List.permutations'Aux\">permutations'Aux</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">t</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">ts</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.map_map_permutations'Aux","kind":"theorem","line":126,"name":"List.map_map_permutations'Aux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L126-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_map_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">map_map_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α'</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">t</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">ts</span>)</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">ys</span>)</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.map_map_permutationsAux2","kind":"theorem","line":121,"name":"List.map_map_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L121-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_snd_eq\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux2_snd_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">r</span></div></div>","info":{"doc":"An expository lemma to show how all of `ts`, `r`, and `f` can be eliminated from\n`permutationsAux2`.\n\n`(permutationsAux2 t [] [] ys id).2`, which appears on the RHS, is a list whose elements are\nproduced by inserting `t` into every non-terminal position of `ys` in order. As an example:\n```lean\n#eval permutationsAux2 1 [] [] [2, 3, 4] id\n-- [[1, 2, 3, 4], [2, 1, 3, 4], [2, 3, 1, 4]]\n```\n","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_snd_eq","kind":"theorem","line":106,"name":"List.permutationsAux2_snd_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L106-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_permutationsAux2\"><span class=\"name\">List</span>.<span class=\"name\">map_permutationsAux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#id\">id</a>)</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span></div></div>","info":{"doc":"The `f` argument to `permutationsAux2` when `r = []` can be eliminated. ","docLink":"./Mathlib/Data/List/Permutation.html#List.map_permutationsAux2","kind":"theorem","line":99,"name":"List.map_permutationsAux2","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L99-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.map_permutationsAux2'\"><span class=\"name\">List</span>.<span class=\"name\">map_permutationsAux2'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α'</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β'</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g'</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α'</span></span> → <span class=\"fn\">β'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">g'</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g'</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">t</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">ts</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g'</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">ys</span>)</span> <span class=\"fn\">f'</span>)</span>.2</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.map_permutationsAux2'","kind":"theorem","line":86,"name":"List.map_permutationsAux2'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L86-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_comp_append\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux2_comp_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ts </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span></span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span></div></div>","info":{"doc":"The `ts` argument to `permutationsAux2` can be folded into the `f` argument. ","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_comp_append","kind":"theorem","line":79,"name":"List.permutationsAux2_comp_append","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L79-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_append\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux2_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.2</span></div></div>","info":{"doc":"The `r` argument to `permutationsAux2` is the same as appending. ","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_append","kind":"theorem","line":74,"name":"List.permutationsAux2_append","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L74-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_snd_cons\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux2_snd_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>) <span class=\"fn\">f</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span>)</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">x</span>)</span></span>)</span>.2</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_snd_cons","kind":"theorem","line":67,"name":"List.permutationsAux2_snd_cons","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L67-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_snd_nil\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux2_snd_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">f</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_snd_nil","kind":"theorem","line":62,"name":"List.permutationsAux2_snd_nil","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L62-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_fst\"><span class=\"name\">List</span>.<span class=\"name\">permutationsAux2_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Defs.html#List.permutationsAux2\">permutationsAux2</a> <span class=\"fn\">t</span> <span class=\"fn\">ts</span> <span class=\"fn\">r</span> <span class=\"fn\">ys</span> <span class=\"fn\">f</span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ys</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ts</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/List/Permutation.html#List.permutationsAux2_fst","kind":"theorem","line":57,"name":"List.permutationsAux2_fst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/List/Permutation.lean#L57-L60"}}],"imports":["Init","Mathlib.Data.List.Lemmas","Mathlib.Data.Nat.Factorial.Basic","Mathlib.Data.List.Count","Mathlib.Data.List.Duplicate","Mathlib.Data.List.InsertIdx","Mathlib.Data.List.Induction","Batteries.Data.List.Perm","Mathlib.Data.List.Perm.Basic"],"instances":[],"name":"Mathlib.Data.List.Permutation"}