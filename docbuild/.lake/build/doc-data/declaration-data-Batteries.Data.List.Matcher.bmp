{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.containsInfix\"><span class=\"name\">List</span>.<span class=\"name\">containsInfix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">pattern</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns true iff `pattern` occurs as an infix sublist of `l`.\n","docLink":"./Batteries/Data/List/Matcher.html#List.containsInfix","kind":"def","line":80,"name":"List.containsInfix","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L80-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.findInfix?\"><span class=\"name\">List</span>.<span class=\"name\">findInfix?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">pattern</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"Returns the start and end positions of the first infix sublist of `l` that matches `pattern`,\nor `none` if there is no such sublist.\n","docLink":"./Batteries/Data/List/Matcher.html#List.findInfix?","kind":"def","line":73,"name":"List.findInfix?","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L73-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.findAllInfix\"><span class=\"name\">List</span>.<span class=\"name\">findAllInfix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l </span><span class=\"fn\">pattern</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"Returns all the start and end positions of all infix sublists of of `l` that match `pattern`.\nThe sublists may be overlapping.\n","docLink":"./Batteries/Data/List/Matcher.html#List.findAllInfix","kind":"def","line":66,"name":"List.findAllInfix","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L66-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.find?\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"Find the start and end positions of the first infix sublist of `l` matching `m.pattern`,\nor `none` if there is no such sublist.\n","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.find?","kind":"def","line":57,"name":"List.Matcher.find?","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L57-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.findAll.loop\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">findAll</span>.<span class=\"name\">loop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">am</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Array/Match.html#Array.Matcher\">Array.Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">occs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"Accumulator loop for `List.Matcher.findAll` ","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.findAll.loop","kind":"opaque","line":52,"name":"List.Matcher.findAll.loop","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L52-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.findAll\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">findAll</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></div></div>","info":{"doc":"Find all start and end positions of all infix sublists of `l` matching `m.pattern`.\nThe sublists may be overlapping.\n","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.findAll","kind":"def","line":44,"name":"List.Matcher.findAll","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L44-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.instStreamProdNat_batteries\"><span class=\"name\">List</span>.<span class=\"name\">instStreamProdNat_batteries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Stream.html#Stream\">Stream</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>) <span class=\"fn\">α</span></span></div></div>","info":{"doc":"List stream that keeps count of items read. ","docLink":"./Batteries/Data/List/Matcher.html#List.instStreamProdNat_batteries","kind":"def","line":38,"name":"List.instStreamProdNat_batteries","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L38-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.ofList\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pattern</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Make KMP matcher from list pattern. ","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.ofList","kind":"def","line":33,"name":"List.Matcher.ofList","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L33-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.pattern\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">pattern</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"The pattern for the matcher ","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.pattern","kind":"def","line":31,"name":"List.Matcher.pattern","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.mk\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toMatcher</span> : <span class=\"fn\"><a href=\"./Batteries/Data/Array/Match.html#Array.Matcher\">Array.Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pattern</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.mk","kind":"ctor","line":29,"name":"List.Matcher.mk","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher.toMatcher\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span>.<span class=\"name\">toMatcher</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Batteries/Data/List/Matcher.html#List.Matcher\">Matcher</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/Array/Match.html#Array.Matcher\">Array.Matcher</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher.toMatcher","kind":"def","line":29,"name":"List.Matcher.toMatcher","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L29-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Data/List/Matcher.html#List.Matcher\"><span class=\"name\">List</span>.<span class=\"name\">Matcher</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Batteries/Data/Array/Match.html#Array.Matcher\">Array.Matcher</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>","info":{"doc":"Knuth-Morris-Pratt matcher type\n\nThis type is used to keep data for running the Knuth-Morris-Pratt (KMP) list matching algorithm.\nKMP is a linear time algorithm to locate all contiguous sublists of a list that match a given\npattern. Generating the algorithm data is also linear in the length of the pattern but the data can\nbe re-used to match the same pattern over multiple lists.\n\nThe KMP data for a pattern can be generated using `Matcher.ofList`. Then `Matcher.find?` and\n`Matcher.findAll` can be used to run the algorithm on an input list.\n```\ndef m := Matcher.ofList [0,1,1,0]\n\n#eval Option.isSome <| m.find? [2,1,1,0,1,1,2] -- false\n#eval Option.isSome <| m.find? [0,0,1,1,0,0] -- true\n\n#eval Array.size <| m.findAll [0,1,1,0,1,1,0] -- 2\n#eval Array.size <| m.findAll [0,1,1,0,1,1,0,1,1,0] -- 3\n```\n","docLink":"./Batteries/Data/List/Matcher.html#List.Matcher","kind":"structure","line":10,"name":"List.Matcher","sourceLink":"https://github.com/leanprover-community/batteries/blob/903b509acff8e83c0dd7820d164968e0cb941b97/Batteries/Data/List/Matcher.lean#L10-L31"}}],"imports":["Init","Batteries.Data.Array.Match"],"instances":[],"name":"Batteries.Data.List.Matcher"}