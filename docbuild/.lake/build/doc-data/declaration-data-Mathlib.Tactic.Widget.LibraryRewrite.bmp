{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.elabrw??Command\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">elabrw??Command</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>","info":{"doc":"Elaborate a `#rw??` command. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.elabrw??Command","kind":"def","line":558,"name":"Mathlib.Tactic.LibraryRewrite.elabrw??Command","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L558-L583"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.rw??Command\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">rw??Command</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`#rw?? e` gives all possible rewrites of `e`. It is a testing command for the `rw??` tactic ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.rw??Command","kind":"def","line":554,"name":"Mathlib.Tactic.LibraryRewrite.rw??Command","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L554-L555"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.SectionToMessageData\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">SectionToMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sec</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span></div></div>","info":{"doc":"Represent a section of rewrites as `MessageData`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.SectionToMessageData","kind":"def","line":546,"name":"Mathlib.Tactic.LibraryRewrite.SectionToMessageData","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L546-L552"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.toMessageData\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">toMessageData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rw</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>","info":{"doc":"Represent a `Rewrite` as `MessageData`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.toMessageData","kind":"def","line":535,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.toMessageData","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L535-L544"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.tacticRw??\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">tacticRw??</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`rw??` is an interactive tactic that suggests rewrites for any expression selected by the user.\nTo use it, shift-click an expression in the goal or a hypothesis that you want to rewrite.\nClicking on one of the rewrite suggestions will paste the relevant rewrite tactic into the editor.\n\nThe rewrite suggestions are grouped and sorted by the pattern that the rewrite lemmas match with.\nRewrites that don't change the goal and rewrites that create the same goal as another rewrite\nare filtered out, as well as rewrites that have new metavariables in the replacement expression.\nTo see all suggestions, click on the filter button (▼) in the top right.\n","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.tacticRw??","kind":"def","line":519,"name":"Mathlib.Tactic.LibraryRewrite.tacticRw??","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L519-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.LibraryRewriteComponent\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">LibraryRewriteComponent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./ProofWidgets/Component/Basic.html#ProofWidgets.Component\">ProofWidgets.Component</a> <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a></span></div></div>","info":{"doc":"The component called by the `rw??` tactic ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.LibraryRewriteComponent","kind":"def","line":514,"name":"Mathlib.Tactic.LibraryRewrite.LibraryRewriteComponent","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L514-L517"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.renderRewrites.renderSectionCore\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">renderRewrites</span>.<span class=\"name\">renderSectionCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">Lean.Server.FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">showNames</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sec</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a></div></div>","info":{"doc":"Render the list of rewrite results in one section. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.renderRewrites.renderSectionCore","kind":"def","line":462,"name":"Mathlib.Tactic.LibraryRewrite.renderRewrites.renderSectionCore","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L462-L476"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.renderRewrites.renderSection\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">renderRewrites</span>.<span class=\"name\">renderSection</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">Lean.Server.FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">showNames</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sec</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a>)</span></span></div></div>","info":{"doc":"Render one section of rewrite results. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.renderRewrites.renderSection","kind":"def","line":446,"name":"Mathlib.Tactic.LibraryRewrite.renderRewrites.renderSection","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L446-L459"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.renderRewrites\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">renderRewrites</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">results</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">Lean.Server.FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">showNames</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a></span></div></div>","info":{"doc":"Render the given rewrite results. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.renderRewrites","kind":"def","line":432,"name":"Mathlib.Tactic.LibraryRewrite.renderRewrites","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L432-L476"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.pattern\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">pattern</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Render the matching side of the rewrite lemma.\nThis is shown at the header of each section of rewrite results. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.pattern","kind":"def","line":425,"name":"Mathlib.Tactic.LibraryRewrite.pattern","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L425-L430"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getRewriteInterfaces\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getRewriteInterfaces</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">occ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">loc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">except</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a>)</span>)</span></div></div>","info":{"doc":"Return the Interfaces for rewriting `e`, both filtered and unfiltered. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getRewriteInterfaces","kind":"def","line":403,"name":"Mathlib.Tactic.LibraryRewrite.getRewriteInterfaces","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L403-L423"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind.fromCache\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Kind</span>.<span class=\"name\">fromCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a></div></div>","info":{"doc":"A rewrite with a lemma from an imported file ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind.fromCache","kind":"ctor","line":400,"name":"Mathlib.Tactic.LibraryRewrite.Kind.fromCache","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L400-L401"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind.fromFile\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Kind</span>.<span class=\"name\">fromFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a></div></div>","info":{"doc":"A rewrite with a lemma from the current file ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind.fromFile","kind":"ctor","line":398,"name":"Mathlib.Tactic.LibraryRewrite.Kind.fromFile","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L398-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind.hypothesis\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Kind</span>.<span class=\"name\">hypothesis</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\">Kind</a></div></div>","info":{"doc":"A rewrite with a local hypothesis ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind.hypothesis","kind":"ctor","line":396,"name":"Mathlib.Tactic.LibraryRewrite.Kind.hypothesis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L396-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Kind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The kind of rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Kind","kind":"inductive","line":394,"name":"Mathlib.Tactic.LibraryRewrite.Kind","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L394-L401"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.toInterface\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">toInterface</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rw</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">occ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">loc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">range</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></span></div></div>","info":{"doc":"Construct the `RewriteInterface` from a `Rewrite`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.toInterface","kind":"def","line":371,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.toInterface","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L371-L392"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.makesNewMVars\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">makesNewMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether the rewrite introduces new metavariables with the replacement. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.makesNewMVars","kind":"def","line":369,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.makesNewMVars","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L369-L369"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.lemmaType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">lemmaType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>","info":{"doc":"The type of the lemma ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.lemmaType","kind":"def","line":367,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.lemmaType","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L367-L367"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.prettyLemma\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">prettyLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos\">Lean.Widget.CodeWithInfos</a></div></div>","info":{"doc":"The lemma name with hover information ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.prettyLemma","kind":"def","line":365,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.prettyLemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L365-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.extraGoals\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">extraGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos\">Lean.Widget.CodeWithInfos</a></span></div></div>","info":{"doc":"The extra goals created by the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.extraGoals","kind":"def","line":363,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.extraGoals","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L363-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.replacementString\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">replacementString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The replacement expression obtained from the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.replacementString","kind":"def","line":361,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.replacementString","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L361-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.replacement\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">replacement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>","info":{"doc":"The replacement expression obtained from the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.replacement","kind":"def","line":359,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.replacement","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L359-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.tactic\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"The rewrite tactic string that performs the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.tactic","kind":"def","line":357,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.tactic","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L357-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.symm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"`symm` is `true` when rewriting from right to left ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.symm","kind":"def","line":355,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L355-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tactic</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">replacement</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">replacementString</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraGoals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos\">Lean.Widget.CodeWithInfos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prettyLemma</span> : <a href=\"./Lean/Widget/InteractiveCode.html#Lean.Widget.CodeWithInfos\">Lean.Widget.CodeWithInfos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lemmaType</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">makesNewMVars</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\">RewriteInterface</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface.mk","kind":"ctor","line":353,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L353-L353"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteInterface</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The structure with all data necessary for rendering a rewrite suggestion ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteInterface","kind":"structure","line":352,"name":"Mathlib.Tactic.LibraryRewrite.RewriteInterface","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L352-L369"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.tacticSyntax\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">tacticSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rw</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">occ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">loc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`tactic</span>)</span></div></div>","info":{"doc":"Return the rewrite tactic that performs the rewrite. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.tacticSyntax","kind":"def","line":342,"name":"Mathlib.Tactic.LibraryRewrite.tacticSyntax","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L342-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.filterRewrites\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">filterRewrites</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rewrites</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">replacement</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">makesNewMVars</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Filter out duplicate rewrites, reflexive rewrites\nor rewrites that have metavariables in the replacement expression. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.filterRewrites","kind":"def","line":318,"name":"Mathlib.Tactic.LibraryRewrite.filterRewrites","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L318-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.isExplicitEq\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">isExplicitEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t </span><span class=\"fn\">s</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Determine whether the explicit parts of two expressions are equal,\nand the implicit parts are definitionally equal. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.isExplicitEq","kind":"opaque","line":302,"name":"Mathlib.Tactic.LibraryRewrite.isExplicitEq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L302-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getBinderInfos\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getBinderInfos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></span></div></div>","info":{"doc":"Get the `BinderInfo`s for the arguments of `mkAppN fn args`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getBinderInfos","kind":"def","line":288,"name":"Mathlib.Tactic.LibraryRewrite.getBinderInfos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L288-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getHypothesisRewrites\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getHypothesisRewrites</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">except</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>))</span>)</span></span></div></div>","info":{"doc":"Return all applicable hypothesis rewrites of `e`. Similar to `getImportRewrites`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getHypothesisRewrites","kind":"def","line":275,"name":"Mathlib.Tactic.LibraryRewrite.getHypothesisRewrites","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L275-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getHypotheses\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getHypotheses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">except</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree\">Lean.Meta.RefinedDiscrTree</a> (<a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>))</span></span></div></div>","info":{"doc":"Construct the `RefinedDiscrTree` of all local hypotheses. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getHypotheses","kind":"def","line":265,"name":"Mathlib.Tactic.LibraryRewrite.getHypotheses","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L265-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getModuleRewrites\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getModuleRewrites</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>))</span>)</span></span></div></div>","info":{"doc":"Same as `getImportRewrites`, but for lemmas from the current file. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getModuleRewrites","kind":"def","line":259,"name":"Mathlib.Tactic.LibraryRewrite.getModuleRewrites","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L259-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getImportRewrites\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getImportRewrites</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>))</span>)</span></span></div></div>","info":{"doc":"Return all applicable library rewrites of `e`.\nNote that the result may contain duplicate rewrites. These can be removed with `filterRewrites`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getImportRewrites","kind":"def","line":254,"name":"Mathlib.Tactic.LibraryRewrite.getImportRewrites","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L254-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.checkAndSortRewriteLemmas\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">checkAndSortRewriteLemmas</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rewrites</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>))</span></span></div></div>","info":{"doc":"Try to rewrite `e` with each of the rewrite lemmas, and sort the resulting rewrites. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.checkAndSortRewriteLemmas","kind":"def","line":237,"name":"Mathlib.Tactic.LibraryRewrite.checkAndSortRewriteLemmas","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L237-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.checkRewrite\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">checkRewrite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span></div></div>","info":{"doc":"If `thm` can be used to rewrite `e`, return the rewrite. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.checkRewrite","kind":"def","line":208,"name":"Mathlib.Tactic.LibraryRewrite.checkRewrite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L208-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.makesNewMVars\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">makesNewMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether the rewrite introduces a new metavariable in the replacement expression. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.makesNewMVars","kind":"def","line":206,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.makesNewMVars","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L206-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.extraGoals\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">extraGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></div></div>","info":{"doc":"The extra goals created by the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.extraGoals","kind":"def","line":204,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.extraGoals","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L204-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.stringLength\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">stringLength</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The size of the replacement when printed ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.stringLength","kind":"def","line":202,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.stringLength","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L202-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.replacement\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">replacement</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>","info":{"doc":"The replacement expression obtained from the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.replacement","kind":"def","line":200,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.replacement","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L200-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.proof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">proof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>","info":{"doc":"The proof of the rewrite ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.proof","kind":"def","line":198,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.proof","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L198-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.symm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"`symm` is `true` when rewriting from right to left ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.symm","kind":"def","line":196,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L196-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proof </span><span class=\"fn\">replacement</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stringLength</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">extraGoals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">makesNewMVars</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\">Rewrite</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite.mk","kind":"ctor","line":194,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L194-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">Rewrite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A rewrite lemma that has been applied to an expression. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.Rewrite","kind":"structure","line":193,"name":"Mathlib.Tactic.LibraryRewrite.Rewrite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L193-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getModuleCandidates\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getModuleCandidates</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a>)</span>)</span></span></div></div>","info":{"doc":"Get all potential rewrite lemmas from the current file. Exclude lemmas from modules\nin the `librarySearch.excludedModules` option. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getModuleCandidates","kind":"def","line":185,"name":"Mathlib.Tactic.LibraryRewrite.getModuleCandidates","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L185-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getImportCandidates\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">getImportCandidates</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a>)</span>)</span></span></div></div>","info":{"doc":"Get all potential rewrite lemmas from the imported environment.\nBy setting the `librarySearch.excludedModules` option, all lemmas from certain modules\ncan be excluded. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.getImportCandidates","kind":"def","line":169,"name":"Mathlib.Tactic.LibraryRewrite.getImportCandidates","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L169-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.addLocalRewriteEntry\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">addLocalRewriteEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> ((<a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree.Key\">Lean.Meta.RefinedDiscrTree.Key</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree.LazyEntry\">Lean.Meta.RefinedDiscrTree.LazyEntry</a>)</span>))</span></span></div></div>","info":{"doc":"Try adding the local hypothesis to the `RefinedDiscrTree`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.addLocalRewriteEntry","kind":"def","line":145,"name":"Mathlib.Tactic.LibraryRewrite.addLocalRewriteEntry","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L145-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.addRewriteEntry\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">addRewriteEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cinfo</span> : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree.Key\">Lean.Meta.RefinedDiscrTree.Key</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree.LazyEntry\">Lean.Meta.RefinedDiscrTree.LazyEntry</a>)</span>))</span></span></div></div>","info":{"doc":"Try adding the lemma to the `RefinedDiscrTree`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.addRewriteEntry","kind":"def","line":117,"name":"Mathlib.Tactic.LibraryRewrite.addRewriteEntry","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L117-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.eqOrIff?\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">eqOrIff?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></div></div>","info":{"doc":"Extract the left and right-hand sides of an equality or iff statement. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.eqOrIff?","kind":"def","line":111,"name":"Mathlib.Tactic.LibraryRewrite.eqOrIff?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L111-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.isMVarSwap.go\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">isMVarSwap</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t </span><span class=\"fn\">s</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">swaps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>))</span></span></div></div>","info":{"doc":"The main loop of `isMVarSwap`. Returning `none` corresponds to a failure. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.isMVarSwap.go","kind":"def","line":80,"name":"Mathlib.Tactic.LibraryRewrite.isMVarSwap.go","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L80-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.isMVarSwap\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">isMVarSwap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t </span><span class=\"fn\">s</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Return `true` if `s` and `t` are equal up to changing the `MVarId`s. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.isMVarSwap","kind":"def","line":75,"name":"Mathlib.Tactic.LibraryRewrite.isMVarSwap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L75-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instToFormatRewriteLemma\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">instToFormatRewriteLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Std.ToFormat</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instToFormatRewriteLemma","kind":"instance","line":72,"name":"Mathlib.Tactic.LibraryRewrite.instToFormatRewriteLemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L72-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma.default\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">instInhabitedRewriteLemma</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma.default","kind":"def","line":70,"name":"Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma.default","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">instInhabitedRewriteLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma","kind":"instance","line":70,"name":"Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">instBEqRewriteLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma","kind":"instance","line":70,"name":"Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma.beq\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">instBEqRewriteLemma</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a> → <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma.beq","kind":"def","line":70,"name":"Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma.beq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma.symm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteLemma</span>.<span class=\"name\">symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"`symm` is `true` when rewriting from right to left ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma.symm","kind":"def","line":69,"name":"Mathlib.Tactic.LibraryRewrite.RewriteLemma.symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma.name\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteLemma</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"The name of the lemma ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma.name","kind":"def","line":67,"name":"Mathlib.Tactic.LibraryRewrite.RewriteLemma.name","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteLemma</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\">RewriteLemma</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma.mk","kind":"ctor","line":65,"name":"Mathlib.Tactic.LibraryRewrite.RewriteLemma.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">LibraryRewrite</span>.<span class=\"name\">RewriteLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The structure for rewrite lemmas stored in the `RefinedDiscrTree`. ","docLink":"./Mathlib/Tactic/Widget/LibraryRewrite.html#Mathlib.Tactic.LibraryRewrite.RewriteLemma","kind":"structure","line":64,"name":"Mathlib.Tactic.LibraryRewrite.RewriteLemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/LibraryRewrite.lean#L64-L70"}}],"imports":["Init","Mathlib.Lean.Meta.RefinedDiscrTree","Mathlib.Tactic.Widget.InteractiveUnfold","ProofWidgets.Component.FilterDetails"],"instances":[{"className":"BEq","name":"Mathlib.Tactic.LibraryRewrite.instBEqRewriteLemma","typeNames":["Mathlib.Tactic.LibraryRewrite.RewriteLemma"]},{"className":"Inhabited","name":"Mathlib.Tactic.LibraryRewrite.instInhabitedRewriteLemma","typeNames":["Mathlib.Tactic.LibraryRewrite.RewriteLemma"]},{"className":"Std.ToFormat","name":"Mathlib.Tactic.LibraryRewrite.instToFormatRewriteLemma","typeNames":["Mathlib.Tactic.LibraryRewrite.RewriteLemma"]}],"name":"Mathlib.Tactic.Widget.LibraryRewrite"}