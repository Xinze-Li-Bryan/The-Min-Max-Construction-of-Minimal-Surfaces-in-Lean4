{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Spread.html#elabLetImplDetail\"><span class=\"name\">elabLetImplDetail</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>","info":{"doc":"Mathlib extension to preserve old behavior of structure instances.\nWe need to be able to `let` some implementation details that are still local instances.\nNormally implementation detail fvars are not local instances,\nbut we need them to be implementation details so that `simp` will see them as \"reducible\" fvars.\n","docLink":"./Mathlib/Tactic/Spread.html#elabLetImplDetail","kind":"def","line":38,"name":"elabLetImplDetail","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Spread.lean#L38-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Spread.html#letImplDetailStx\"><span class=\"name\">letImplDetailStx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Mathlib extension to preserve old behavior of structure instances.\nWe need to be able to `let` some implementation details that are still local instances.\nNormally implementation detail fvars are not local instances,\nbut we need them to be implementation details so that `simp` will see them as \"reducible\" fvars.\n","docLink":"./Mathlib/Tactic/Spread.html#letImplDetailStx","kind":"def","line":28,"name":"letImplDetailStx","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Spread.lean#L28-L34"}}],"imports":["Init","Mathlib.Init","Lean.Elab.Binders"],"instances":[],"name":"Mathlib.Tactic.Spread"}