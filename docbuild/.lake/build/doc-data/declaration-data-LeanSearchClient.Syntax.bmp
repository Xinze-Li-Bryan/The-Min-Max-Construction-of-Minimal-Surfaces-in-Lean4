{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">searchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTacticImpl","kind":"def","line":549,"name":"LeanSearchClient.searchTacticImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L549-L560"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search either [Moogle](https://www.moogle.ai/api/search) or [LeanSearch]((https://leansearch.net/)) from within Lean, depending on the option `leansearchclient.backend`.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n\nIn tactic mode, if the query string is not supplied, then [LeanStateSearch](https://premise-search.com) is queried based on the goal state.\n```\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.search_tactic","kind":"def","line":546,"name":"LeanSearchClient.search_tactic","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L546-L547"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">stateSearchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchTacticImpl","kind":"def","line":510,"name":"LeanSearchClient.stateSearchTacticImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L510-L544"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.statesearch_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">statesearch_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [LeanStateSearch](https://premise-search.com) from within Lean.\nYour current main goal is sent as query. The revision to search can be set\nusing the `statesearch.revision` option. The number of results can be set\nusing the `statesearch.queries` option.\n\nHint: If you want to modify the query, you need to use the web interface.\n\n```lean\nset_option statesearch.queries 1\nset_option statesearch.revision \"v4.16.0\"\n\nexample : 0 ≤ 1 := by\n  #statesearch\n  sorry\n```\n\nYou can modify the LeanStateSearch URL by setting the `LEANSEARCHCLIENT_LEANSTATESEARCH_API_URL` environment variable.\n","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.statesearch_search_tactic","kind":"def","line":489,"name":"LeanSearchClient.statesearch_search_tactic","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L489-L508"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTacticImpl","kind":"def","line":480,"name":"LeanSearchClient.moogleTacticImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L480-L487"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n\nYou can modify the Moogle URL by setting the `LEANSEARCHCLIENT_MOOGLE_API_URL` environment variable.\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_tactic","kind":"def","line":476,"name":"LeanSearchClient.moogle_search_tactic","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L476-L478"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTacticImpl","kind":"def","line":467,"name":"LeanSearchClient.leanSearchTacticImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L467-L474"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n\nYou can modify the LeanSearch URL by setting the `LEANSEARCHCLIENT_LEANSEARCH_API_URL` environment variable.\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_tactic","kind":"def","line":463,"name":"LeanSearchClient.leansearch_search_tactic","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L463-L465"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">searchTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.searchTermImpl","kind":"def","line":448,"name":"LeanSearchClient.searchTermImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L448-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search either [Moogle](https://www.moogle.ai/api/search) or [LeanSearch]((https://leansearch.net/)) from within Lean, depending on the option `leansearchclient.backend`.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n\nIn tactic mode, if the query string is not supplied, then [LeanStateSearch](https://premise-search.com) is queried based on the goal state.\n```\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.search_term","kind":"def","line":445,"name":"LeanSearchClient.search_term","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L445-L446"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTermImpl","kind":"def","line":434,"name":"LeanSearchClient.moogleTermImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L434-L443"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n\nYou can modify the Moogle URL by setting the `LEANSEARCHCLIENT_MOOGLE_API_URL` environment variable.\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_term","kind":"def","line":431,"name":"LeanSearchClient.moogle_search_term","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L431-L432"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTermImpl","kind":"def","line":420,"name":"LeanSearchClient.leanSearchTermImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L420-L429"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n\nYou can modify the LeanSearch URL by setting the `LEANSEARCHCLIENT_LEANSEARCH_API_URL` environment variable.\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_term","kind":"def","line":417,"name":"LeanSearchClient.leansearch_search_term","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L417-L418"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.searchCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">searchCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.searchCommandImpl","kind":"def","line":403,"name":"LeanSearchClient.searchCommandImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L403-L414"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search either [Moogle](https://www.moogle.ai/api/search) or [LeanSearch]((https://leansearch.net/)) from within Lean, depending on the option `leansearchclient.backend`.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #search \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n\nIn tactic mode, if the query string is not supplied, then [LeanStateSearch](https://premise-search.com) is queried based on the goal state.\n```\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.search_cmd","kind":"def","line":386,"name":"LeanSearchClient.search_cmd","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L386-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCommandImpl","kind":"def","line":377,"name":"LeanSearchClient.moogleCommandImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L377-L384"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n\nYou can modify the Moogle URL by setting the `LEANSEARCHCLIENT_MOOGLE_API_URL` environment variable.\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_cmd","kind":"def","line":359,"name":"LeanSearchClient.moogle_search_cmd","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L359-L375"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCommandImpl","kind":"def","line":350,"name":"LeanSearchClient.leanSearchCommandImpl","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L350-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n\nYou can modify the LeanSearch URL by setting the `LEANSEARCHCLIENT_LEANSEARCH_API_URL` environment variable.\n ","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_cmd","kind":"def","line":332,"name":"LeanSearchClient.leansearch_search_cmd","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L332-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTacticSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchTacticSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTacticSuggestions","kind":"def","line":305,"name":"LeanSearchClient.SearchServer.searchTacticSuggestions","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L305-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTermSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchTermSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTermSuggestions","kind":"def","line":296,"name":"LeanSearchClient.SearchServer.searchTermSuggestions","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L296-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchCommandSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchCommandSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchCommandSuggestions","kind":"def","line":288,"name":"LeanSearchClient.SearchServer.searchCommandSuggestions","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L288-L294"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.incompleteSearchQuery\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">incompleteSearchQuery</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.incompleteSearchQuery","kind":"def","line":283,"name":"LeanSearchClient.SearchServer.incompleteSearchQuery","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L283-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTacticSuggestionGroups\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getTacticSuggestionGroups</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></span>))</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTacticSuggestionGroups","kind":"def","line":274,"name":"LeanSearchClient.SearchServer.getTacticSuggestionGroups","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L274-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTermSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getTermSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTermSuggestions","kind":"def","line":269,"name":"LeanSearchClient.SearchServer.getTermSuggestions","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L269-L272"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getCommandSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getCommandSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ss</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getCommandSuggestions","kind":"def","line":264,"name":"LeanSearchClient.SearchServer.getCommandSuggestions","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L264-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instInhabitedSearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instInhabitedSearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instInhabitedSearchServer","kind":"instance","line":260,"name":"LeanSearchClient.instInhabitedSearchServer","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L260-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleServer","kind":"def","line":256,"name":"LeanSearchClient.moogleServer","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L256-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchServer","kind":"def","line":252,"name":"LeanSearchClient.leanSearchServer","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L252-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.queryNum\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">queryNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.queryNum","kind":"def","line":250,"name":"LeanSearchClient.SearchServer.queryNum","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L250-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.query\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">query</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.query","kind":"def","line":249,"name":"LeanSearchClient.SearchServer.query","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L249-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">cmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.cmd","kind":"def","line":248,"name":"LeanSearchClient.SearchServer.cmd","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L248-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.url\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">url</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.url","kind":"def","line":247,"name":"LeanSearchClient.SearchServer.url","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L247-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.name\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.name","kind":"def","line":246,"name":"LeanSearchClient.SearchServer.name","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L246-L246"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.mk\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name </span><span class=\"fn\">url </span><span class=\"fn\">cmd</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">query</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queryNum</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">SearchServer</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.mk","kind":"ctor","line":245,"name":"LeanSearchClient.SearchServer.mk","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L245-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer","kind":"structure","line":245,"name":"LeanSearchClient.SearchServer","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L245-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.checkTactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">checkTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">target</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tac</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.checkTactic","kind":"def","line":232,"name":"LeanSearchClient.checkTactic","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L232-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.defaultTerm\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">defaultTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedType?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.defaultTerm","kind":"def","line":223,"name":"LeanSearchClient.defaultTerm","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L223-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryStateSearch\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryStateSearch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rev</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryStateSearch","kind":"def","line":218,"name":"LeanSearchClient.queryStateSearch","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L218-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryMoogle\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryMoogle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryMoogle","kind":"def","line":212,"name":"LeanSearchClient.queryMoogle","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L212-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryLeanSearch\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryLeanSearch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryLeanSearch","kind":"def","line":207,"name":"LeanSearchClient.queryLeanSearch","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L207-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTacticSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toTacticSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sr</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTacticSuggestions","kind":"def","line":196,"name":"LeanSearchClient.SearchResult.toTacticSuggestions","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L196-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTermSuggestion\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toTermSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sr</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTermSuggestion","kind":"def","line":191,"name":"LeanSearchClient.SearchResult.toTermSuggestion","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L191-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toCommandSuggestion\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toCommandSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sr</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toCommandSuggestion","kind":"def","line":185,"name":"LeanSearchClient.SearchResult.toCommandSuggestion","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L185-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofStateSearchJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofStateSearchJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofStateSearchJson?","kind":"def","line":175,"name":"LeanSearchClient.SearchResult.ofStateSearchJson?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L175-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLoogleJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofLoogleJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLoogleJson?","kind":"def","line":166,"name":"LeanSearchClient.SearchResult.ofLoogleJson?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L166-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofMoogleJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofMoogleJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofMoogleJson?","kind":"def","line":150,"name":"LeanSearchClient.SearchResult.ofMoogleJson?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L150-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLeanSearchJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofLeanSearchJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">js</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLeanSearchJson?","kind":"def","line":132,"name":"LeanSearchClient.SearchResult.ofLeanSearchJson?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L132-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instReprSearchResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult","kind":"instance","line":128,"name":"LeanSearchClient.instReprSearchResult","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult.repr\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instReprSearchResult</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Std.Format</a></span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult.repr","kind":"def","line":128,"name":"LeanSearchClient.instReprSearchResult.repr","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L128-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.kind?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">kind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.kind?","kind":"def","line":127,"name":"LeanSearchClient.SearchResult.kind?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L127-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.doc_url?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">doc_url?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.doc_url?","kind":"def","line":126,"name":"LeanSearchClient.SearchResult.doc_url?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L126-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.docString?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">docString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.docString?","kind":"def","line":125,"name":"LeanSearchClient.SearchResult.docString?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L125-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.type?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.type?","kind":"def","line":124,"name":"LeanSearchClient.SearchResult.type?","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L124-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.name\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.name","kind":"def","line":123,"name":"LeanSearchClient.SearchResult.name","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L123-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.mk\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type? </span><span class=\"fn\">docString? </span><span class=\"fn\">doc_url? </span><span class=\"fn\">kind?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">SearchResult</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.mk","kind":"ctor","line":122,"name":"LeanSearchClient.SearchResult.mk","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L122-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult","kind":"structure","line":122,"name":"LeanSearchClient.SearchResult","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L122-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getStateSearchQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getStateSearchQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rev</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getStateSearchQueryJson","kind":"def","line":97,"name":"LeanSearchClient.getStateSearchQueryJson","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L97-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getMoogleQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getMoogleQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getMoogleQueryJson","kind":"def","line":74,"name":"LeanSearchClient.getMoogleQueryJson","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L74-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getLeanSearchQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getLeanSearchQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num_results</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getLeanSearchQueryJson","kind":"def","line":52,"name":"LeanSearchClient.getLeanSearchQueryJson","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L52-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">stateSearchCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.stateSearchCache","kind":"opaque","line":49,"name":"LeanSearchClient.stateSearchCache","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCache","kind":"opaque","line":46,"name":"LeanSearchClient.moogleCache","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L46-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCache","kind":"opaque","line":43,"name":"LeanSearchClient.leanSearchCache","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.useragent\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">useragent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.useragent","kind":"def","line":40,"name":"LeanSearchClient.useragent","sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/99657ad92e23804e279f77ea6dbdeebaa1317b98/LeanSearchClient/Syntax.lean#L40-L41"}}],"imports":["Init","Lean.Elab.Tactic.Meta","Lean.Meta.Tactic.TryThis","LeanSearchClient.Basic"],"instances":[{"className":"Repr","name":"LeanSearchClient.instReprSearchResult","typeNames":["LeanSearchClient.SearchResult"]},{"className":"Inhabited","name":"LeanSearchClient.instInhabitedSearchServer","typeNames":["LeanSearchClient.SearchServer"]}],"name":"LeanSearchClient.Syntax"}