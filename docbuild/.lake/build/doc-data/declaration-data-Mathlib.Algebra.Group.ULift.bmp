{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.nontrivial\"><span class=\"name\">ULift</span>.<span class=\"name\">nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.nontrivial","kind":"instance","line":141,"name":"ULift.nontrivial","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L141-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addCancelCommMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">addCancelCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelCommMonoid\">AddCancelCommMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addCancelCommMonoid","kind":"instance","line":137,"name":"ULift.addCancelCommMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L137-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.cancelCommMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">cancelCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelCommMonoid\">CancelCommMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.cancelCommMonoid","kind":"instance","line":137,"name":"ULift.cancelCommMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L137-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addCancelMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">addCancelMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCancelMonoid\">AddCancelMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addCancelMonoid","kind":"instance","line":133,"name":"ULift.addCancelMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.cancelMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">cancelMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CancelMonoid\">CancelMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.cancelMonoid","kind":"instance","line":133,"name":"ULift.cancelMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L133-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addRightCancelMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">addRightCancelMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelMonoid\">AddRightCancelMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addRightCancelMonoid","kind":"instance","line":129,"name":"ULift.addRightCancelMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.rightCancelMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">rightCancelMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelMonoid\">RightCancelMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.rightCancelMonoid","kind":"instance","line":129,"name":"ULift.rightCancelMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L129-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addLeftCancelMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">addLeftCancelMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addLeftCancelMonoid","kind":"instance","line":125,"name":"ULift.addLeftCancelMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L125-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.leftCancelMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">leftCancelMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelMonoid\">LeftCancelMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.leftCancelMonoid","kind":"instance","line":125,"name":"ULift.leftCancelMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L125-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addRightCancelSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">addRightCancelSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup\">AddRightCancelSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup\">AddRightCancelSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addRightCancelSemigroup","kind":"instance","line":121,"name":"ULift.addRightCancelSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.rightCancelSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">rightCancelSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup\">RightCancelSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#RightCancelSemigroup\">RightCancelSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.rightCancelSemigroup","kind":"instance","line":121,"name":"ULift.rightCancelSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L121-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addLeftCancelSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">addLeftCancelSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup\">AddLeftCancelSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup\">AddLeftCancelSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addLeftCancelSemigroup","kind":"instance","line":117,"name":"ULift.addLeftCancelSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L117-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.leftCancelSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">leftCancelSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup\">LeftCancelSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#LeftCancelSemigroup\">LeftCancelSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.leftCancelSemigroup","kind":"instance","line":117,"name":"ULift.leftCancelSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L117-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addCommGroup\"><span class=\"name\">ULift</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addCommGroup","kind":"instance","line":112,"name":"ULift.addCommGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.commGroup\"><span class=\"name\">ULift</span>.<span class=\"name\">commGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.commGroup","kind":"instance","line":112,"name":"ULift.commGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L112-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addGroup\"><span class=\"name\">ULift</span>.<span class=\"name\">addGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addGroup","kind":"instance","line":107,"name":"ULift.addGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.group\"><span class=\"name\">ULift</span>.<span class=\"name\">group</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.group","kind":"instance","line":107,"name":"ULift.group","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L107-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.subNegAddMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">subNegAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SubNegMonoid\">SubNegMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.subNegAddMonoid","kind":"instance","line":102,"name":"ULift.subNegAddMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L102-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.divInvMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">divInvMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.divInvMonoid","kind":"instance","line":102,"name":"ULift.divInvMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L102-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addCommMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">addCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addCommMonoid","kind":"instance","line":98,"name":"ULift.addCommMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.commMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">commMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.commMonoid","kind":"instance","line":98,"name":"ULift.commMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L98-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addMonoid\"><span class=\"name\">ULift</span>.<span class=\"name\">addMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addMonoid","kind":"instance","line":94,"name":"ULift.addMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L94-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.monoid\"><span class=\"name\">ULift</span>.<span class=\"name\">monoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.monoid","kind":"instance","line":94,"name":"ULift.monoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L94-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addZeroClass\"><span class=\"name\">ULift</span>.<span class=\"name\">addZeroClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addZeroClass","kind":"instance","line":90,"name":"ULift.addZeroClass","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.mulOneClass\"><span class=\"name\">ULift</span>.<span class=\"name\">mulOneClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.mulOneClass","kind":"instance","line":90,"name":"ULift.mulOneClass","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L90-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addCommSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">addCommSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addCommSemigroup","kind":"instance","line":86,"name":"ULift.addCommSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.commSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">commSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.commSemigroup","kind":"instance","line":86,"name":"ULift.commSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L86-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.addSemigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">addSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.addSemigroup","kind":"instance","line":82,"name":"ULift.addSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.semigroup\"><span class=\"name\">ULift</span>.<span class=\"name\">semigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.semigroup","kind":"instance","line":82,"name":"ULift.semigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L82-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#AddEquiv.ulift\"><span class=\"name\">AddEquiv</span>.<span class=\"name\">ulift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\">α</span></div></div>","info":{"doc":"The additive equivalence between `ULift α` and `α`. ","docLink":"./Mathlib/Algebra/Group/ULift.html#AddEquiv.ulift","kind":"def","line":78,"name":"AddEquiv.ulift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#MulEquiv.ulift\"><span class=\"name\">MulEquiv</span>.<span class=\"name\">ulift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">α</span></div></div>","info":{"doc":"The multiplicative equivalence between `ULift α` and `α`.\n","docLink":"./Mathlib/Algebra/Group/ULift.html#MulEquiv.ulift","kind":"def","line":76,"name":"MulEquiv.ulift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L76-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.pow_down\"><span class=\"name\">ULift</span>.<span class=\"name\">pow_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.pow_down","kind":"theorem","line":72,"name":"ULift.pow_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L72-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.pow\"><span class=\"name\">ULift</span>.<span class=\"name\">pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pow\">Pow</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.pow","kind":"instance","line":68,"name":"ULift.pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L68-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.vadd_down\"><span class=\"name\">ULift</span>.<span class=\"name\">vadd_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, v}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.vadd_down","kind":"theorem","line":64,"name":"ULift.vadd_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.smul_down\"><span class=\"name\">ULift</span>.<span class=\"name\">smul_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#SMul\">SMul</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, v}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.smul_down","kind":"theorem","line":64,"name":"ULift.smul_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L64-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.vadd\"><span class=\"name\">ULift</span>.<span class=\"name\">vadd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#VAdd\">VAdd</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, v}</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.vadd","kind":"instance","line":60,"name":"ULift.vadd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.smul\"><span class=\"name\">ULift</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#SMul\">SMul</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#SMul\">SMul</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, v}</a> <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.smul","kind":"instance","line":60,"name":"ULift.smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L60-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.neg_down\"><span class=\"name\">ULift</span>.<span class=\"name\">neg_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.neg_down","kind":"theorem","line":56,"name":"ULift.neg_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.inv_down\"><span class=\"name\">ULift</span>.<span class=\"name\">inv_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inv\">Inv</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.inv_down","kind":"theorem","line":56,"name":"ULift.inv_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L56-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.neg\"><span class=\"name\">ULift</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.neg","kind":"instance","line":52,"name":"ULift.neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.inv\"><span class=\"name\">ULift</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inv\">Inv</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inv\">Inv</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.inv","kind":"instance","line":52,"name":"ULift.inv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L52-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.sub_down\"><span class=\"name\">ULift</span>.<span class=\"name\">sub_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.sub_down","kind":"theorem","line":48,"name":"ULift.sub_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.div_down\"><span class=\"name\">ULift</span>.<span class=\"name\">div_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">y</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.div_down","kind":"theorem","line":48,"name":"ULift.div_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L48-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.sub\"><span class=\"name\">ULift</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.sub","kind":"instance","line":44,"name":"ULift.sub","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.div\"><span class=\"name\">ULift</span>.<span class=\"name\">div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Div\">Div</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.div","kind":"instance","line":44,"name":"ULift.div","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L44-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.add_down\"><span class=\"name\">ULift</span>.<span class=\"name\">add_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.add_down","kind":"theorem","line":40,"name":"ULift.add_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.mul_down\"><span class=\"name\">ULift</span>.<span class=\"name\">mul_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{w, u}</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>).<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#ULift.down\">down</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.mul_down","kind":"theorem","line":40,"name":"ULift.mul_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L40-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.add\"><span class=\"name\">ULift</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.add","kind":"instance","line":36,"name":"ULift.add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.mul\"><span class=\"name\">ULift</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.mul","kind":"instance","line":36,"name":"ULift.mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L36-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.zero_down\"><span class=\"name\">ULift</span>.<span class=\"name\">zero_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ULift.down\">down</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.zero_down","kind":"theorem","line":32,"name":"ULift.zero_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.one_down\"><span class=\"name\">ULift</span>.<span class=\"name\">one_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ULift.down\">down</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.one_down","kind":"theorem","line":32,"name":"ULift.one_down","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L32-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.zero\"><span class=\"name\">ULift</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.zero","kind":"instance","line":28,"name":"ULift.zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Group/ULift.html#ULift.one\"><span class=\"name\">ULift</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#One\">One</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift.{u_1, u}</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Group/ULift.html#ULift.one","kind":"instance","line":28,"name":"ULift.one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Group/ULift.lean#L28-L30"}}],"imports":["Init","Mathlib.Algebra.Group.Equiv.Defs","Mathlib.Algebra.Group.InjSurj","Mathlib.Logic.Nontrivial.Basic"],"instances":[{"className":"One","name":"ULift.one","typeNames":["ULift"]},{"className":"Zero","name":"ULift.zero","typeNames":["ULift"]},{"className":"Mul","name":"ULift.mul","typeNames":["ULift"]},{"className":"Add","name":"ULift.add","typeNames":["ULift"]},{"className":"Div","name":"ULift.div","typeNames":["ULift"]},{"className":"Sub","name":"ULift.sub","typeNames":["ULift"]},{"className":"Inv","name":"ULift.inv","typeNames":["ULift"]},{"className":"Neg","name":"ULift.neg","typeNames":["ULift"]},{"className":"SMul","name":"ULift.smul","typeNames":["ULift"]},{"className":"VAdd","name":"ULift.vadd","typeNames":["ULift"]},{"className":"Pow","name":"ULift.pow","typeNames":["ULift"]},{"className":"Semigroup","name":"ULift.semigroup","typeNames":["ULift"]},{"className":"AddSemigroup","name":"ULift.addSemigroup","typeNames":["ULift"]},{"className":"CommSemigroup","name":"ULift.commSemigroup","typeNames":["ULift"]},{"className":"AddCommSemigroup","name":"ULift.addCommSemigroup","typeNames":["ULift"]},{"className":"MulOneClass","name":"ULift.mulOneClass","typeNames":["ULift"]},{"className":"AddZeroClass","name":"ULift.addZeroClass","typeNames":["ULift"]},{"className":"Monoid","name":"ULift.monoid","typeNames":["ULift"]},{"className":"AddMonoid","name":"ULift.addMonoid","typeNames":["ULift"]},{"className":"CommMonoid","name":"ULift.commMonoid","typeNames":["ULift"]},{"className":"AddCommMonoid","name":"ULift.addCommMonoid","typeNames":["ULift"]},{"className":"DivInvMonoid","name":"ULift.divInvMonoid","typeNames":["ULift"]},{"className":"SubNegMonoid","name":"ULift.subNegAddMonoid","typeNames":["ULift"]},{"className":"Group","name":"ULift.group","typeNames":["ULift"]},{"className":"AddGroup","name":"ULift.addGroup","typeNames":["ULift"]},{"className":"CommGroup","name":"ULift.commGroup","typeNames":["ULift"]},{"className":"AddCommGroup","name":"ULift.addCommGroup","typeNames":["ULift"]},{"className":"LeftCancelSemigroup","name":"ULift.leftCancelSemigroup","typeNames":["ULift"]},{"className":"AddLeftCancelSemigroup","name":"ULift.addLeftCancelSemigroup","typeNames":["ULift"]},{"className":"RightCancelSemigroup","name":"ULift.rightCancelSemigroup","typeNames":["ULift"]},{"className":"AddRightCancelSemigroup","name":"ULift.addRightCancelSemigroup","typeNames":["ULift"]},{"className":"LeftCancelMonoid","name":"ULift.leftCancelMonoid","typeNames":["ULift"]},{"className":"AddLeftCancelMonoid","name":"ULift.addLeftCancelMonoid","typeNames":["ULift"]},{"className":"RightCancelMonoid","name":"ULift.rightCancelMonoid","typeNames":["ULift"]},{"className":"AddRightCancelMonoid","name":"ULift.addRightCancelMonoid","typeNames":["ULift"]},{"className":"CancelMonoid","name":"ULift.cancelMonoid","typeNames":["ULift"]},{"className":"AddCancelMonoid","name":"ULift.addCancelMonoid","typeNames":["ULift"]},{"className":"CancelCommMonoid","name":"ULift.cancelCommMonoid","typeNames":["ULift"]},{"className":"AddCancelCommMonoid","name":"ULift.addCancelCommMonoid","typeNames":["ULift"]},{"className":"Nontrivial","name":"ULift.nontrivial","typeNames":["ULift"]}],"name":"Mathlib.Algebra.Group.ULift"}