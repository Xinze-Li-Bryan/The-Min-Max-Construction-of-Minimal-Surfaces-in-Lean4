{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.jordan_holder\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">jordan_holder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₂</span></span></div></div>","info":{"doc":"The **Jordan-Hölder** theorem, stated for any `JordanHolderLattice`.\nIf two composition series start and finish at the same place, they are equivalent. ","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.jordan_holder","kind":"theorem","line":399,"name":"CompositionSeries.jordan_holder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L399-L417"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.exists_last_eq_snoc_equivalent\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">exists_last_eq_snoc_equivalent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (<span class=\"fn\">htx</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">t</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">⋯</span>)</span></span></span></span></div></div>","info":{"doc":"Given a `CompositionSeries`, `s`, and an element `x`\nsuch that `x` is maximal inside `s.last` there is a series, `t`,\nsuch that `t.last = x`, `t.head = s.head`\nand `snoc t s.last _` is equivalent to `s`. ","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.exists_last_eq_snoc_equivalent","kind":"theorem","line":359,"name":"CompositionSeries.exists_last_eq_snoc_equivalent","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L359-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₁0</span> : <span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero","kind":"theorem","line":346,"name":"CompositionSeries.eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L346-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_pos_of_head_eq_head_of_last_eq_last_of_length_pos\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">length_pos_of_head_eq_head_of_last_eq_last_of_length_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_pos_of_head_eq_head_of_last_eq_last_of_length_pos","kind":"theorem","line":339,"name":"CompositionSeries.length_pos_of_head_eq_head_of_last_eq_last_of_length_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L339-L344"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero","kind":"theorem","line":332,"name":"CompositionSeries.length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L332-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc_snoc_swap\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">snoc_snoc_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hsat₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hsat₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hsaty₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₁</span> <span class=\"fn\">hsat₁</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">last</a></span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hsaty₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₂</span> <span class=\"fn\">hsat₂</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">last</a></span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">x₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₁</span> <span class=\"fn\">hsat₁</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">snoc</a></span> <span class=\"fn\">y₁</span> <span class=\"fn\">hsaty₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₂</span> <span class=\"fn\">hsat₂</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">snoc</a></span> <span class=\"fn\">y₂</span> <span class=\"fn\">hsaty₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc_snoc_swap","kind":"theorem","line":301,"name":"CompositionSeries.Equivalent.snoc_snoc_swap","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L301-L328"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.length_eq\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">length_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.length_eq","kind":"theorem","line":298,"name":"CompositionSeries.Equivalent.length_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L298-L299"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">snoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hsat₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span>)</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hsat₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span>)</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hequiv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlast</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">x₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">x₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">hsat₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s₂</span> <span class=\"fn\">x₂</span> <span class=\"fn\">hsat₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc","kind":"theorem","line":284,"name":"CompositionSeries.Equivalent.snoc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L284-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.smash\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">smash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂ </span><span class=\"fn\">t₁ </span><span class=\"fn\">t₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">t₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.smash\">RelSeries.smash</a> <span class=\"fn\">s₁</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.smash\">RelSeries.smash</a> <span class=\"fn\">t₁</span> <span class=\"fn\">t₂</span> <span class=\"fn\">ht</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.smash","kind":"theorem","line":267,"name":"CompositionSeries.Equivalent.smash","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L267-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.trans\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂ </span><span class=\"fn\">s₃</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₃</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.trans","kind":"theorem","line":261,"name":"CompositionSeries.Equivalent.trans","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L261-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.symm\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s₁</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.symm","kind":"theorem","line":257,"name":"CompositionSeries.Equivalent.symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L257-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.refl\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">Equivalent</a></span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.refl","kind":"theorem","line":253,"name":"CompositionSeries.Equivalent.refl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L253-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"Two `CompositionSeries X`, `s₁` and `s₂` are equivalent if there is a bijection\n`e : Fin s₁.length ≃ Fin s₂.length` such that for any `i`,\n`Iso (s₁ i) (s₁ i.succ) (s₂ (e i), s₂ (e i.succ))` ","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent","kind":"def","line":243,"name":"CompositionSeries.Equivalent","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L243-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.snoc_eraseLast_last\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">snoc_eraseLast_last</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">last</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">snoc</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.snoc_eraseLast_last","kind":"theorem","line":236,"name":"CompositionSeries.snoc_eraseLast_last","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L236-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_snoc_eraseLast\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">eq_snoc_eraseLast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">snoc</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_snoc_eraseLast","kind":"theorem","line":230,"name":"CompositionSeries.eq_snoc_eraseLast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L230-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.isMaximal_eraseLast_last\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">isMaximal_eraseLast_last</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">last</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.isMaximal_eraseLast_last","kind":"theorem","line":222,"name":"CompositionSeries.isMaximal_eraseLast_last","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L222-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_last_of_mem_eraseLast\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">lt_last_of_mem_eraseLast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_last_of_mem_eraseLast","kind":"theorem","line":218,"name":"CompositionSeries.lt_last_of_mem_eraseLast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L218-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">mem_eraseLast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast","kind":"theorem","line":208,"name":"CompositionSeries.mem_eraseLast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L208-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast_of_ne_of_mem\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">mem_eraseLast_of_ne_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxs</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast_of_ne_of_mem","kind":"theorem","line":199,"name":"CompositionSeries.mem_eraseLast_of_ne_of_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L199-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.last_eraseLast_le\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">last_eraseLast_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">last</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.last_eraseLast_le","kind":"theorem","line":196,"name":"CompositionSeries.last_eraseLast_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L196-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le_of_mem\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">head_le_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le_of_mem","kind":"theorem","line":192,"name":"CompositionSeries.head_le_of_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L192-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">head_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span> <span class=\"fn\">i</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le","kind":"theorem","line":188,"name":"CompositionSeries.head_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L188-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last_of_mem\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">le_last_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last_of_mem","kind":"theorem","line":184,"name":"CompositionSeries.le_last_of_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L184-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">le_last</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last","kind":"theorem","line":180,"name":"CompositionSeries.le_last","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L180-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.ext_iff\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.ext_iff","kind":"theorem","line":170,"name":"CompositionSeries.ext_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L170-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.ext\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span></div></div>","info":{"doc":"Two `CompositionSeries` are equal if they have the same elements. See also `ext_fun`. ","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.ext","kind":"theorem","line":169,"name":"CompositionSeries.ext","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L169-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_nodup\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">toList_nodup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toList\">RelSeries.toList</a> <span class=\"fn\">s</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_nodup","kind":"theorem","line":166,"name":"CompositionSeries.toList_nodup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L166-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_sorted\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">toList_sorted</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">X</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toList\">RelSeries.toList</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_sorted","kind":"theorem","line":160,"name":"CompositionSeries.toList_sorted","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L160-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.total\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.total","kind":"theorem","line":154,"name":"CompositionSeries.total","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L154-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.inj\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.inj","kind":"theorem","line":150,"name":"CompositionSeries.inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L150-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.injective\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.injective","kind":"theorem","line":147,"name":"CompositionSeries.injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L147-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.strictMono\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.strictMono","kind":"theorem","line":144,"name":"CompositionSeries.strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L144-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_succ\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">lt_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.length\">length</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">castSucc</a></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toFun\">toFun</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Fin/Basic.html#Fin.succ\">succ</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_succ","kind":"theorem","line":140,"name":"CompositionSeries.lt_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L140-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\"><span class=\"name\">CompositionSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A `CompositionSeries X` is a finite nonempty series of elements of a\n`JordanHolderLattice` such that each element is maximal inside the next. The length of a\n`CompositionSeries X` is one less than the number of elements in the series.\nNote that there is no stipulation that a series start from the bottom of the lattice and finish at\nthe top. For a composition series `s`, `s.last` is the largest element of the series,\nand `s.head` is the least element.\n","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries","kind":"def","line":126,"name":"CompositionSeries","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L126-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal.iso_refl\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">IsMaximal</span>.<span class=\"name\">iso_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal.iso_refl","kind":"theorem","line":114,"name":"JordanHolderLattice.IsMaximal.iso_refl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L114-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso_of_eq\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">second_iso_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso_of_eq","kind":"theorem","line":111,"name":"JordanHolderLattice.second_iso_of_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L111-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_of_eq_inf\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">isMaximal_of_eq_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">b</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">a</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_of_eq_inf","kind":"theorem","line":105,"name":"JordanHolderLattice.isMaximal_of_eq_inf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L105-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_right_of_isMaximal_sup\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">isMaximal_inf_right_of_isMaximal_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxz</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyz</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">(<span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span>)</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_right_of_isMaximal_sup","kind":"theorem","line":99,"name":"JordanHolderLattice.isMaximal_inf_right_of_isMaximal_sup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L99-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">second_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso","kind":"theorem","line":93,"name":"JordanHolderLattice.second_iso","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L93-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_trans\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">iso_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_trans","kind":"theorem","line":92,"name":"JordanHolderLattice.iso_trans","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_symm\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">iso_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">Iso</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_symm","kind":"theorem","line":91,"name":"JordanHolderLattice.iso_symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L91-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">Iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span> → <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso","kind":"def","line":90,"name":"JordanHolderLattice.Iso","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_left_of_isMaximal_sup\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">isMaximal_inf_left_of_isMaximal_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">(<span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_left_of_isMaximal_sup","kind":"theorem","line":88,"name":"JordanHolderLattice.isMaximal_inf_left_of_isMaximal_sup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.sup_eq_of_isMaximal\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">sup_eq_of_isMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span> → <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.sup_eq_of_isMaximal","kind":"theorem","line":87,"name":"JordanHolderLattice.sup_eq_of_isMaximal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.lt_of_isMaximal\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">lt_of_isMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.lt_of_isMaximal","kind":"theorem","line":86,"name":"JordanHolderLattice.lt_of_isMaximal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">IsMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal","kind":"def","line":85,"name":"JordanHolderLattice.IsMaximal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.mk\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IsMaximal</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lt_of_isMaximal</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sup_eq_of_isMaximal</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span> → <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isMaximal_inf_left_of_isMaximal_sup</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Iso</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span> → <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iso_symm</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iso_trans</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">second_iso</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">Iso</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">y</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.mk","kind":"ctor","line":84,"name":"JordanHolderLattice.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\"><span class=\"name\">JordanHolderLattice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A `JordanHolderLattice` is the class for which the Jordan Hölder theorem is proved. A\nJordan Hölder lattice is a lattice equipped with a notion of maximality, `IsMaximal`, and a notion\nof isomorphism of pairs `Iso`. In the example of subgroups of a group, `IsMaximal H K` means that\n`H` is a maximal normal subgroup of `K`, and `Iso (H₁, K₁) (H₂, K₂)` means that the quotient\n`H₁ / K₁` is isomorphic to the quotient `H₂ / K₂`. `Iso` must be symmetric and transitive and must\nsatisfy the second isomorphism theorem `Iso (H, H ⊔ K) (H ⊓ K, K)`.\nExamples include `Subgroup G` if `G` is a group, and `Submodule R M` if `M` is an `R`-module.\n","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice","kind":"class","line":76,"name":"JordanHolderLattice","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/JordanHolder.lean#L76-L93"}}],"imports":["Init","Mathlib.Order.Lattice","Mathlib.Data.List.Sort","Mathlib.Logic.Equiv.Fin.Basic","Mathlib.Logic.Equiv.Functor","Mathlib.Data.Fintype.Pigeonhole","Mathlib.Order.RelSeries"],"instances":[],"name":"Mathlib.Order.JordanHolder"}