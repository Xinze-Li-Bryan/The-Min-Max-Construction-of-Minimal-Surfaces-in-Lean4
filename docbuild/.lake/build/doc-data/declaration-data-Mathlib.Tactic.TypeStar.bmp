{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/TypeStar.html#«termType*»\"><span class=\"name\">«termType*»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The syntax `variable (X Y ... Z : Type*)` creates a new distinct implicit universe variable\n`> 0` for each variable in the sequence. ","docLink":"./Mathlib/Tactic/TypeStar.html#«termType*»","kind":"def","line":22,"name":"«termType*»","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/TypeStar.lean#L22-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/TypeStar.html#«termSort*»\"><span class=\"name\">«termSort*»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The syntax `variable (X Y ... Z : Sort*)` creates a new distinct implicit universe variable\nfor each variable in the sequence. ","docLink":"./Mathlib/Tactic/TypeStar.html#«termSort*»","kind":"def","line":16,"name":"«termSort*»","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/TypeStar.lean#L16-L20"}}],"imports":["Init","Mathlib.Init"],"instances":[],"name":"Mathlib.Tactic.TypeStar"}