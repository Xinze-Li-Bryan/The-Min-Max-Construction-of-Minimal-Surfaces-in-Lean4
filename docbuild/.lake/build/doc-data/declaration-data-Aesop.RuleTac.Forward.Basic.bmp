{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.hideForwardImplDetailHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">hideForwardImplDetailHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>","info":{"doc":"Mark hypotheses that, according to their name, are forward implementation detail\nhypotheses, as implementation details. This is a hack that works around the\nfact that certain tactics (particularly anything based on the revert-intro\npattern) can turn implementation detail hyps into regular hyps.\n","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.hideForwardImplDetailHyps","kind":"def","line":96,"name":"Aesop.hideForwardImplDetailHyps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L96-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.getForwardHypData\"><span class=\"name\">Aesop</span>.<span class=\"name\">getForwardHypData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData\">ForwardHypData</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.getForwardHypData","kind":"def","line":87,"name":"Aesop.getForwardHypData","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L87-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData.depths\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardHypData</span>.<span class=\"name\">depths</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData\">ForwardHypData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Depths of the hypotheses that have already been added by forward reasoning.\n","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData.depths","kind":"def","line":85,"name":"Aesop.ForwardHypData.depths","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardHypData</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depths</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData\">ForwardHypData</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData.mk","kind":"ctor","line":81,"name":"Aesop.ForwardHypData.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardHypData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData","kind":"structure","line":81,"name":"Aesop.ForwardHypData","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L81-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.clearForwardImplDetailHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">clearForwardImplDetailHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.clearForwardImplDetailHyps","kind":"def","line":76,"name":"Aesop.clearForwardImplDetailHyps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L76-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.getForwardImplDetailHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">getForwardImplDetailHyps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.getForwardImplDetailHyps","kind":"def","line":69,"name":"Aesop.getForwardImplDetailHyps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L69-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.isForwardImplDetailHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">isForwardImplDetailHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ldecl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.isForwardImplDetailHyp","kind":"def","line":66,"name":"Aesop.isForwardImplDetailHyp","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.isForwardImplDetailHypName\"><span class=\"name\">Aesop</span>.<span class=\"name\">isForwardImplDetailHypName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether the given name was generated by `forwardImplDetailHypName`.\nWe assume that nobody else adds hyps with the `forwardImplHypDetailPrefix`\nprefix.\n","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.isForwardImplDetailHypName","kind":"def","line":58,"name":"Aesop.isForwardImplDetailHypName","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L58-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.matchForwardImplDetailHypName\"><span class=\"name\">Aesop</span>.<span class=\"name\">matchForwardImplDetailHypName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></div></div>","info":{"doc":"Parse a name generated by `forwardImplDetailHypName`, obtaining the\n`fwdHypName` and `depth`.\n","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.matchForwardImplDetailHypName","kind":"def","line":47,"name":"Aesop.matchForwardImplDetailHypName","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L47-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.forwardImplDetailHypName\"><span class=\"name\">Aesop</span>.<span class=\"name\">forwardImplDetailHypName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fwdHypName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"Name of the `implDetail` hyp corresponding to the forward `hyp` with name\n`fwdHypName` and depth `depth`. ","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.forwardImplDetailHypName","kind":"def","line":42,"name":"Aesop.forwardImplDetailHypName","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L42-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.forwardImplDetailHypPrefix\"><span class=\"name\">Aesop</span>.<span class=\"name\">forwardImplDetailHypPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"Prefix of the `implDetail` hyps added by `forward`. ","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.forwardImplDetailHypPrefix","kind":"def","line":39,"name":"Aesop.forwardImplDetailHypPrefix","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L39-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.forwardHypPrefix\"><span class=\"name\">Aesop</span>.<span class=\"name\">forwardHypPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"Prefix of the regular hyps added by `forward`. ","docLink":"./Aesop/RuleTac/Forward/Basic.html#Aesop.forwardHypPrefix","kind":"def","line":36,"name":"Aesop.forwardHypPrefix","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Forward/Basic.lean#L36-L37"}}],"imports":["Init","Aesop.Util.Basic","Aesop.Util.EqualUpToIds"],"instances":[],"name":"Aesop.RuleTac.Forward.Basic"}