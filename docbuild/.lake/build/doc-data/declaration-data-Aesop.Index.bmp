{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.applicableRules.addRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">applicableRules</span>.<span class=\"name\">addRules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patSubstMap</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">IndexMatchResult</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruless</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">IndexMatchLocation</a></span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">IndexMatchResult</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.applicableRules.addRules","kind":"def","line":153,"name":"Aesop.Index.applicableRules.addRules","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L153-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.applicableRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">applicableRules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patSubstMap</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">additionalRules</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">IndexMatchResult</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">include?</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">IndexMatchResult</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.applicableRules","kind":"def","line":136,"name":"Aesop.Index.applicableRules","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L136-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.fold\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">fold</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.fold","kind":"def","line":91,"name":"Aesop.Index.fold","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L91-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.foldM\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">foldM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.foldM","kind":"def","line":83,"name":"Aesop.Index.foldM","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L83-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.unindex.filterDiscrTree'\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">unindex</span>.<span class=\"name\">filterDiscrTree'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unindexed</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.unindex.filterDiscrTree'","kind":"def","line":78,"name":"Aesop.Index.unindex.filterDiscrTree'","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L78-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.unindex\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">unindex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.unindex","kind":"def","line":72,"name":"Aesop.Index.unindex","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L72-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.add\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imode</span> : <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.add","kind":"opaque","line":58,"name":"Aesop.Index.add","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L58-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.merge\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">merge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri₁ </span><span class=\"fn\">ri₂</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.merge","kind":"def","line":53,"name":"Aesop.Index.merge","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L53-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <span class=\"fn\">(<a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.instEmptyCollection","kind":"instance","line":46,"name":"Aesop.Index.instEmptyCollection","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L46-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.trace.traceArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">trace</span>.<span class=\"name\">traceArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceOpt</span> : <a href=\"./Aesop/Tracing.html#Aesop.TraceOption\">TraceOption</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.trace.traceArray","kind":"def","line":43,"name":"Aesop.Index.trace.traceArray","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.trace\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">trace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ri</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">traceOpt</span> : <a href=\"./Aesop/Tracing.html#Aesop.TraceOption\">TraceOption</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.trace","kind":"def","line":32,"name":"Aesop.Index.trace","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L32-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.instInhabitedIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.instInhabitedIndex","kind":"instance","line":26,"name":"Aesop.instInhabitedIndex","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.instInhabitedIndex.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedIndex</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.instInhabitedIndex.default","kind":"def","line":26,"name":"Aesop.instInhabitedIndex.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.unindexed\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">unindexed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.unindexed","kind":"def","line":25,"name":"Aesop.Index.unindexed","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.byHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">byHyp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.byHyp","kind":"def","line":24,"name":"Aesop.Index.byHyp","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.byTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">byTarget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.byTarget","kind":"def","line":23,"name":"Aesop.Index.byTarget","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">byTarget </span><span class=\"fn\">byHyp</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unindexed</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Rule</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Index</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index.mk","kind":"ctor","line":22,"name":"Aesop.Index.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index.html#Aesop.Index\"><span class=\"name\">Aesop</span>.<span class=\"name\">Index</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Index.html#Aesop.Index","kind":"structure","line":22,"name":"Aesop.Index","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Index.lean#L22-L26"}}],"imports":["Init","Aesop.Forward.Match","Aesop.Index.Basic","Aesop.Index.RulePattern","Aesop.RulePattern","Aesop.Rule.Basic","Aesop.Tracing","Batteries.Lean.Meta.InstantiateMVars","Batteries.Lean.PersistentHashSet","Batteries.Lean.Meta.DiscrTree"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedIndex","typeNames":["Aesop.Index"]},{"className":"EmptyCollection","name":"Aesop.Index.instEmptyCollection","typeNames":["Aesop.Index"]}],"name":"Aesop.Index"}