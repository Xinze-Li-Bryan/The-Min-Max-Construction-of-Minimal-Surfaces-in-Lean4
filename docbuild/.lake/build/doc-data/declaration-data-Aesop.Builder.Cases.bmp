{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.cases\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">cases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder\">RuleBuilder</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.cases","kind":"def","line":72,"name":"Aesop.RuleBuilder.cases","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L72-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.casesCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">casesCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pats</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imode?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md </span><span class=\"fn\">indexMd</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.PhaseSpec\">PhaseSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/RuleSet/Member.html#Aesop.LocalRuleSetMember\">LocalRuleSetMember</a></span></div></div>","info":{"doc":"`decl` is either the name of the inductive type described by `info`, or a\ntype synonym for it at transparency `default` or `md` (whichever is larger). ","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.casesCore","kind":"def","line":60,"name":"Aesop.RuleBuilder.casesCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L60-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.getCasesIndexingMode\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">getCasesIndexingMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indexMd</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">casesPatterns</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.getCasesIndexingMode","kind":"def","line":51,"name":"Aesop.RuleBuilder.getCasesIndexingMode","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L51-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.mkCasesTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">mkCasesTarget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">casesPatterns</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilder.mkCasesTarget","kind":"def","line":44,"name":"Aesop.RuleBuilder.mkCasesTarget","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L44-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilderOptions.casesPatterns\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOptions</span>.<span class=\"name\">casesPatterns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOptions\">RuleBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilderOptions.casesPatterns","kind":"def","line":37,"name":"Aesop.RuleBuilderOptions.casesPatterns","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilderOptions.casesIndexTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOptions</span>.<span class=\"name\">casesIndexTransparency</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOptions\">RuleBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilderOptions.casesIndexTransparency","kind":"def","line":34,"name":"Aesop.RuleBuilderOptions.casesIndexTransparency","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.RuleBuilderOptions.casesTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOptions</span>.<span class=\"name\">casesTransparency</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOptions\">RuleBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.RuleBuilderOptions.casesTransparency","kind":"def","line":31,"name":"Aesop.RuleBuilderOptions.casesTransparency","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L31-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.CasesPattern.toIndexingMode\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesPattern</span>.<span class=\"name\">toIndexingMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.CasesPattern.toIndexingMode","kind":"def","line":23,"name":"Aesop.CasesPattern.toIndexingMode","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L23-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Cases.html#Aesop.CasesPattern.check\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesPattern</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Cases.html#Aesop.CasesPattern.check","kind":"def","line":17,"name":"Aesop.CasesPattern.check","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Cases.lean#L17-L21"}}],"imports":["Init","Aesop.Builder.Basic","Aesop.RuleTac.Cases"],"instances":[],"name":"Aesop.Builder.Cases"}