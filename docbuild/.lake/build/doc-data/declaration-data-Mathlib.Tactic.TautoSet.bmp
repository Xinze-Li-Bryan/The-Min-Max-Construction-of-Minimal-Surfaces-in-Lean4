{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/TautoSet.html#Mathlib.Tactic.TautoSet.tacticTauto_set\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TautoSet</span>.<span class=\"name\">tacticTauto_set</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`tauto_set` attempts to prove tautologies involving hypotheses and goals of the form `X ⊆ Y`\nor `X = Y`, where `X`, `Y` are expressions built using ∪, ∩, \\, and ᶜ from finitely many\nvariables of type `Set α`. It also unfolds expressions of the form `Disjoint A B` and\n`symmDiff A B`.\n\nExamples:\n```lean\nexample {α} (A B C D : Set α) (h1 : A ⊆ B) (h2 : C ⊆ D) : C \\ B ⊆ D \\ A := by\n  tauto_set\n\nexample {α} (A B C : Set α) (h1 : A ⊆ B ∪ C) : (A ∩ B) ∪ (A ∩ C) = A := by\n  tauto_set\n```\n","docLink":"./Mathlib/Tactic/TautoSet.html#Mathlib.Tactic.TautoSet.tacticTauto_set","kind":"def","line":43,"name":"Mathlib.Tactic.TautoSet.tacticTauto_set","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/TautoSet.lean#L43-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/TautoSet.html#Mathlib.Tactic.TautoSet.specialize_all\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">TautoSet</span>.<span class=\"name\">specialize_all</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`specialize_all x` runs `specialize h x` for all hypotheses `h` where this tactic succeeds.\n","docLink":"./Mathlib/Tactic/TautoSet.html#Mathlib.Tactic.TautoSet.specialize_all","kind":"def","line":20,"name":"Mathlib.Tactic.TautoSet.specialize_all","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/TautoSet.lean#L20-L25"}}],"imports":["Init","Mathlib.Data.Set.SymmDiff","Mathlib.Data.Set.Disjoint"],"instances":[],"name":"Mathlib.Tactic.TautoSet"}