{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Lean.Environment.getSortedAssertExists\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getSortedAssertExists</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">Mathlib.AssertNotExist.AssertExists</a></span></div></div>","info":{"doc":"`getSortedAssertExists env` returns the array of `AssertExists`, placing first all declarations,\nin alphabetical order, and then all modules, also in alphabetical order. ","docLink":"./Mathlib/Util/AssertExistsExt.html#Lean.Environment.getSortedAssertExists","kind":"def","line":53,"name":"Lean.Environment.getSortedAssertExists","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L53-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.addDeclEntry\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">addDeclEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDecl</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName </span><span class=\"fn\">mod</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"`addDeclEntry isDecl declName mod` takes as input the `Bool`ean `isDecl` and the `Name`s of\na declaration or import, `declName`, and of a module, `mod`.\nIt extends the `AssertExists` environment extension with the data `isDecl, declName, mod`.\nThis information is used to capture declarations and modules that are forbidden from\nexisting/being imported at some point, but should eventually exist/be imported.\n","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.addDeclEntry","kind":"def","line":39,"name":"Mathlib.AssertNotExist.addDeclEntry","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L39-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.assertExistsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">assertExistsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/EnvExtension.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a>)</span></span></div></div>","info":{"doc":"Defines the `assertExistsExt` extension for adding a `HashSet` of `AssertExists` entries\nto the environment. ","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.assertExistsExt","kind":"opaque","line":31,"name":"Mathlib.AssertNotExist.assertExistsExt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L31-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instHashableAssertExists\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">instHashableAssertExists</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instHashableAssertExists","kind":"instance","line":29,"name":"Mathlib.AssertNotExist.instHashableAssertExists","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instHashableAssertExists.hash\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">instHashableAssertExists</span>.<span class=\"name\">hash</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a> → <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instHashableAssertExists.hash","kind":"def","line":29,"name":"Mathlib.AssertNotExist.instHashableAssertExists.hash","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instBEqAssertExists.beq\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">instBEqAssertExists</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a> → <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instBEqAssertExists.beq","kind":"def","line":29,"name":"Mathlib.AssertNotExist.instBEqAssertExists.beq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instBEqAssertExists\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">instBEqAssertExists</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.instBEqAssertExists","kind":"instance","line":29,"name":"Mathlib.AssertNotExist.instBEqAssertExists","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.modName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">AssertExists</span>.<span class=\"name\">modName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"The name of the module where the assertion was made. ","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.modName","kind":"def","line":28,"name":"Mathlib.AssertNotExist.AssertExists.modName","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.givenName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">AssertExists</span>.<span class=\"name\">givenName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"The fully qualified name of a declaration that is expected to exist. ","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.givenName","kind":"def","line":26,"name":"Mathlib.AssertNotExist.AssertExists.givenName","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.isDecl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">AssertExists</span>.<span class=\"name\">isDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"The type of the assertion: `true` means declaration, `false` means import. ","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.isDecl","kind":"def","line":24,"name":"Mathlib.AssertNotExist.AssertExists.isDecl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">AssertExists</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDecl</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">givenName </span><span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\">AssertExists</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists.mk","kind":"ctor","line":22,"name":"Mathlib.AssertNotExist.AssertExists.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">AssertExists</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`AssertExists` is the structure that carries the data to check whether a declaration or an\nimport is meant to exist somewhere in Mathlib. ","docLink":"./Mathlib/Util/AssertExistsExt.html#Mathlib.AssertNotExist.AssertExists","kind":"structure","line":20,"name":"Mathlib.AssertNotExist.AssertExists","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/AssertExistsExt.lean#L20-L29"}}],"imports":["Init","Lean.Environment","Mathlib.Init"],"instances":[{"className":"BEq","name":"Mathlib.AssertNotExist.instBEqAssertExists","typeNames":["Mathlib.AssertNotExist.AssertExists"]},{"className":"Hashable","name":"Mathlib.AssertNotExist.instHashableAssertExists","typeNames":["Mathlib.AssertNotExist.AssertExists"]}],"name":"Mathlib.Util.AssertExistsExt"}