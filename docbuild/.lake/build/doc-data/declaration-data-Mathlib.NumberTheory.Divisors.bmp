{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_zero_one_two_three_four_iff\"><span class=\"name\">Int</span>.<span class=\"name\">mul_mem_zero_one_two_three_four_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">4</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a>       <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"This lemma justifies its existence from its utility in crystallographic root system theory. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_zero_one_two_three_four_iff","kind":"theorem","line":724,"name":"Int.mul_mem_zero_one_two_three_four_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L724-L734"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_one_two_three_iff\"><span class=\"name\">Int</span>.<span class=\"name\">mul_mem_one_two_three_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"This lemma justifies its existence from its utility in crystallographic root system theory. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_one_two_three_iff","kind":"theorem","line":714,"name":"Int.mul_mem_one_two_three_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L714-L722"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_ofNat\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>.<a href=\"./Mathlib/Data/Finset/Disjoint.html#Finset.disjUnion\">disjUnion</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>)</span>\n      <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_ofNat","kind":"theorem","line":708,"name":"Int.divisorsAntidiag_ofNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L708-L712"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg_natCast\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_neg_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>)</span>\n        <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>.<a href=\"./Mathlib/Data/Finset/Disjoint.html#Finset.disjUnion\">disjUnion</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>)</span>\n      <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg_natCast","kind":"theorem","line":702,"name":"Int.divisorsAntidiag_neg_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L702-L706"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_natCast\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>.<a href=\"./Mathlib/Data/Finset/Disjoint.html#Finset.disjUnion\">disjUnion</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>)</span>\n      <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_natCast","kind":"theorem","line":696,"name":"Int.divisorsAntidiag_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L696-L700"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg","kind":"theorem","line":691,"name":"Int.divisorsAntidiag_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L691-L694"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.map_neg_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">map_neg_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> (<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>))</span>)</span> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.map_neg_divisorsAntidiag","kind":"theorem","line":686,"name":"Int.map_neg_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L686-L689"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.map_prodComm_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">map_prodComm_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Prod.html#Equiv.prodComm\">Equiv.prodComm</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.map_prodComm_divisorsAntidiag","kind":"theorem","line":681,"name":"Int.map_prodComm_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L681-L684"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.neg_mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">neg_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xy</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.neg_mem_divisorsAntidiag","kind":"theorem","line":679,"name":"Int.neg_mem_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L679-L679"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.swap_mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">swap_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xy</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">xy</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.swap_mem_divisorsAntidiag","kind":"theorem","line":675,"name":"Int.swap_mem_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L675-L677"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.prodMk_mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">prodMk_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.prodMk_mem_divisorsAntidiag","kind":"theorem","line":672,"name":"Int.prodMk_mem_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L672-L673"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_four\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_four</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_four","kind":"theorem","line":667,"name":"Int.divisorsAntidiagonal_four","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L667-L670"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_three\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_three</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_three","kind":"theorem","line":662,"name":"Int.divisorsAntidiagonal_three","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L662-L665"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_two\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_two","kind":"theorem","line":657,"name":"Int.divisorsAntidiagonal_two","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L657-L660"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_one\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_one","kind":"theorem","line":652,"name":"Int.divisorsAntidiagonal_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L652-L655"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_zero\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_zero","kind":"theorem","line":648,"name":"Int.divisorsAntidiag_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L648-L648"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xy</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">xy</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">xy</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.mem_divisorsAntidiag","kind":"theorem","line":609,"name":"Int.mem_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L609-L646"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> (<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></div></div>","info":{"doc":"Pairs of divisors of an integer as a finset.\n\n`z.divisorsAntidiag` is the finset of pairs `(a, b) : ℤ × ℤ` such that `a * b = z`.\nBy convention, we set `Int.divisorsAntidiag 0 = ∅`.\n\nO(|z|). Computed from `Nat.divisorsAntidiagonal`. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag","kind":"def","line":593,"name":"Int.divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L593-L607"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.disjoint_divisors_filter_isPrimePow\"><span class=\"name\">Nat</span>.<span class=\"name\">disjoint_divisors_filter_isPrimePow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Filter.html#Finset.filter\">Finset.filter</a> <a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Filter.html#Finset.filter\">Finset.filter</a> <a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.disjoint_divisors_filter_isPrimePow","kind":"theorem","line":577,"name":"Nat.disjoint_divisors_filter_isPrimePow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L577-L581"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_div_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_div_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Finset/Defs.html#Finset.sum\">sum</a></span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_div_divisors","kind":"theorem","line":567,"name":"Nat.sum_div_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L567-L567"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_div_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_div_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Finset/Defs.html#Finset.prod\">prod</a></span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_div_divisors","kind":"theorem","line":567,"name":"Nat.prod_div_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L567-L575"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.image_div_divisors_eq_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">image_div_divisors_eq_divisors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.image_div_divisors_eq_divisors","kind":"theorem","line":550,"name":"Nat.image_div_divisors_eq_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L550-L565"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_filter_dvd_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_filter_dvd_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmn</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> | <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_filter_dvd_of_dvd","kind":"theorem","line":545,"name":"Nat.primeFactors_filter_dvd_of_dvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L545-L548"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_eq_to_filter_divisors_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_eq_to_filter_divisors_prime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>}</span></div></div>","info":{"doc":"The factors of `n` are the prime divisors ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_eq_to_filter_divisors_prime","kind":"theorem","line":537,"name":"Nat.primeFactors_eq_to_filter_divisors_prime","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L537-L543"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal'\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisorsAntidiagonal'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>) <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal'","kind":"theorem","line":531,"name":"Nat.sum_divisorsAntidiagonal'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L531-L531"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal'\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_divisorsAntidiagonal'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>) <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal'","kind":"theorem","line":531,"name":"Nat.prod_divisorsAntidiagonal'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L531-L535"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal","kind":"theorem","line":525,"name":"Nat.sum_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L525-L525"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal","kind":"theorem","line":525,"name":"Nat.prod_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L525-L529"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_prime_pow","kind":"theorem","line":520,"name":"Nat.sum_divisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L520-L520"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisors_prime_pow","kind":"theorem","line":520,"name":"Nat.prod_divisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L520-L523"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_prime_nsmul\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_properDivisors_prime_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_prime_nsmul","kind":"theorem","line":515,"name":"Nat.sum_properDivisors_prime_nsmul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L515-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_properDivisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_properDivisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_properDivisors_prime_pow","kind":"theorem","line":515,"name":"Nat.prod_properDivisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L515-L518"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_prime_pow","kind":"theorem","line":507,"name":"Nat.properDivisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L507-L513"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_properDivisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">j</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_prime_pow","kind":"theorem","line":493,"name":"Nat.mem_properDivisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L493-L505"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_eq_one_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_properDivisors_eq_one_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_eq_one_iff_prime","kind":"theorem","line":479,"name":"Nat.sum_properDivisors_eq_one_iff_prime","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L479-L491"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_singleton_one_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_eq_singleton_one_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_singleton_one_iff_prime","kind":"theorem","line":463,"name":"Nat.properDivisors_eq_singleton_one_iff_prime","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L463-L477"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">sum_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_divisors","kind":"theorem","line":458,"name":"Nat.Prime.sum_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L458-L458"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">prod_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_divisors","kind":"theorem","line":458,"name":"Nat.Prime.prod_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L458-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">sum_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_properDivisors","kind":"theorem","line":454,"name":"Nat.Prime.sum_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L454-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">prod_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_properDivisors","kind":"theorem","line":454,"name":"Nat.Prime.prod_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L454-L456"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_properDivisors_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_dvd","kind":"theorem","line":439,"name":"Nat.sum_properDivisors_dvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L439-L452"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.eq_properDivisors_of_subset_of_sum_eq_sum\"><span class=\"name\">Nat</span>.<span class=\"name\">eq_properDivisors_of_subset_of_sum_eq_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsub</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> → <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.eq_properDivisors_of_subset_of_sum_eq_sum","kind":"theorem","line":419,"name":"Nat.eq_properDivisors_of_subset_of_sum_eq_sum","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L419-L437"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_inj","kind":"theorem","line":415,"name":"Nat.divisors_inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L415-L417"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_injective\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_injective","kind":"theorem","line":412,"name":"Nat.divisors_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L412-L413"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_prime_pow","kind":"theorem","line":406,"name":"Nat.divisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L406-L410"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.properDivisors","kind":"theorem","line":402,"name":"Nat.Prime.properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L402-L404"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">p</span><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.divisors","kind":"theorem","line":398,"name":"Nat.Prime.divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L398-L400"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">j</span> ≤ <span class=\"fn\">k</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">j</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_prime_pow","kind":"theorem","line":394,"name":"Nat.mem_divisors_prime_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L394-L396"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_divisors_eq_two_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">perfect_iff_sum_divisors_eq_two_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect\">Perfect</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_divisors_eq_two_mul","kind":"theorem","line":387,"name":"Nat.perfect_iff_sum_divisors_eq_two_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L387-L392"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">perfect_iff_sum_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect\">Perfect</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_properDivisors","kind":"theorem","line":384,"name":"Nat.perfect_iff_sum_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L384-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect\"><span class=\"name\">Nat</span>.<span class=\"name\">Perfect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"`n : ℕ` is perfect if and only the sum of the proper divisors of `n` is `n` and `n`\nis positive. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect","kind":"def","line":379,"name":"Nat.Perfect","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L379-L382"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_eq_sum_properDivisors_add_self\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisors_eq_sum_properDivisors_add_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_eq_sum_properDivisors_add_self","kind":"theorem","line":373,"name":"Nat.sum_divisors_eq_sum_properDivisors_add_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L373-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_left_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">map_div_left_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_left_divisors","kind":"theorem","line":365,"name":"Nat.map_div_left_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L365-L371"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_right_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">map_div_right_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_right_divisors","kind":"theorem","line":352,"name":"Nat.map_div_right_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L352-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.image_snd_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">image_snd_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <a href=\"./Init/Prelude.html#Prod.snd\">Prod.snd</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.image_snd_divisorsAntidiagonal","kind":"theorem","line":347,"name":"Nat.image_snd_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L347-L350"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.image_fst_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">image_fst_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.image_fst_divisorsAntidiagonal","kind":"theorem","line":342,"name":"Nat.image_fst_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L342-L345"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.map_swap_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">map_swap_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Prod.html#Equiv.prodComm\">Equiv.prodComm</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.map_swap_divisorsAntidiagonal","kind":"theorem","line":334,"name":"Nat.map_swap_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L334-L340"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.snd_mem_divisors_of_mem_antidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">snd_mem_divisors_of_mem_antidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.snd_mem_divisors_of_mem_antidiagonal","kind":"theorem","line":329,"name":"Nat.snd_mem_divisors_of_mem_antidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L329-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.fst_mem_divisors_of_mem_antidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">fst_mem_divisors_of_mem_antidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.fst_mem_divisors_of_mem_antidiagonal","kind":"theorem","line":324,"name":"Nat.fst_mem_divisors_of_mem_antidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L324-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prodMk_mem_divisorsAntidiag\"><span class=\"name\">Nat</span>.<span class=\"name\">prodMk_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prodMk_mem_divisorsAntidiag","kind":"theorem","line":321,"name":"Nat.prodMk_mem_divisorsAntidiag","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L321-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">swap_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonal","kind":"theorem","line":316,"name":"Nat.swap_mem_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L316-L319"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_one\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_one","kind":"theorem","line":311,"name":"Nat.divisorsAntidiagonal_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L311-L314"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_zero","kind":"theorem","line":306,"name":"Nat.divisorsAntidiagonal_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L306-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_empty\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_empty","kind":"theorem","line":302,"name":"Nat.properDivisors_eq_empty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L302-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">nonempty_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_properDivisors","kind":"theorem","line":297,"name":"Nat.nonempty_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L297-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_iff_exists\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_properDivisors_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">k</span> &gt; <span class=\"fn\">1</span>, <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span></div></div>","info":{"doc":"See also `Nat.mem_properDivisors`. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_iff_exists","kind":"theorem","line":288,"name":"Nat.mem_properDivisors_iff_exists","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L288-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_div_of_mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">one_lt_div_of_mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_div_of_mem_properDivisors","kind":"theorem","line":283,"name":"Nat.one_lt_div_of_mem_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L283-L286"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_of_mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">one_lt_of_mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_of_mem_properDivisors","kind":"theorem","line":280,"name":"Nat.one_lt_of_mem_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L280-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sup_divisors_id\"><span class=\"name\">Nat</span>.<span class=\"name\">sup_divisors_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></span> <a href=\"./Init/Prelude.html#id\">id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sup_divisors_id","kind":"theorem","line":273,"name":"Nat.sup_divisors_id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L273-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_properDivisors_iff_one_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">one_mem_properDivisors_iff_one_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_properDivisors_iff_one_lt","kind":"theorem","line":270,"name":"Nat.one_mem_properDivisors_iff_one_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L270-L271"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">pos_of_mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_properDivisors","kind":"theorem","line":267,"name":"Nat.pos_of_mem_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L267-L268"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">pos_of_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_divisors","kind":"theorem","line":261,"name":"Nat.pos_of_mem_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L261-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_one\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_one","kind":"theorem","line":258,"name":"Nat.properDivisors_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L258-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_one\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_one","kind":"theorem","line":253,"name":"Nat.divisors_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L253-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_subset_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_subset_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_subset_divisors","kind":"theorem","line":250,"name":"Nat.properDivisors_subset_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_eq_empty\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_eq_empty","kind":"theorem","line":246,"name":"Nat.divisors_eq_empty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L246-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">nonempty_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_divisors","kind":"theorem","line":242,"name":"Nat.nonempty_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L242-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_zero","kind":"theorem","line":237,"name":"Nat.properDivisors_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L237-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_zero","kind":"theorem","line":232,"name":"Nat.divisors_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L232-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_filter_dvd_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_filter_dvd_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_filter_dvd_of_dvd","kind":"theorem","line":226,"name":"Nat.divisors_filter_dvd_of_dvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L226-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_subset_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hzero</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdiff</span> : <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_properDivisors","kind":"theorem","line":216,"name":"Nat.divisors_subset_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L216-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.card_divisors_le_self\"><span class=\"name\">Nat</span>.<span class=\"name\">card_divisors_le_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.card_divisors_le_self","kind":"theorem","line":210,"name":"Nat.card_divisors_le_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L210-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_subset_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hzero</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_of_dvd","kind":"theorem","line":206,"name":"Nat.divisors_subset_of_dvd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L206-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisor_le\"><span class=\"name\">Nat</span>.<span class=\"name\">divisor_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> → <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisor_le","kind":"theorem","line":200,"name":"Nat.divisor_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L200-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.right_ne_zero_of_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">right_ne_zero_of_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.right_ne_zero_of_mem_divisorsAntidiagonal","kind":"theorem","line":196,"name":"Nat.right_ne_zero_of_mem_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L196-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.left_ne_zero_of_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">left_ne_zero_of_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.left_ne_zero_of_mem_divisorsAntidiagonal","kind":"theorem","line":192,"name":"Nat.left_ne_zero_of_mem_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L192-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.ne_zero_of_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">ne_zero_of_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.ne_zero_of_mem_divisorsAntidiagonal","kind":"theorem","line":187,"name":"Nat.ne_zero_of_mem_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L187-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.reverse_divisorsAntidiagonalList\"><span class=\"name\">Nat</span>.<span class=\"name\">reverse_divisorsAntidiagonalList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Init/Data/Prod.html#Prod.swap\">Prod.swap</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.reverse_divisorsAntidiagonalList","kind":"theorem","line":179,"name":"Nat.reverse_divisorsAntidiagonalList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L179-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonalList\"><span class=\"name\">Nat</span>.<span class=\"name\">swap_mem_divisorsAntidiagonalList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonalList","kind":"theorem","line":175,"name":"Nat.swap_mem_divisorsAntidiagonalList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L175-L177"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisorsAntidiagonalList\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisorsAntidiagonalList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisorsAntidiagonalList","kind":"theorem","line":170,"name":"Nat.mem_divisorsAntidiagonalList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L170-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.val_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">val_divisorsAntidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>.<a href=\"./Mathlib/Data/Finset/Defs.html#Finset.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span></span></div></div>","info":{"doc":"The `Finset` and `List` versions agree by definition. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.val_divisorsAntidiagonal","kind":"theorem","line":164,"name":"Nat.val_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L164-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.nodup_divisorsAntidiagonalList\"><span class=\"name\">Nat</span>.<span class=\"name\">nodup_divisorsAntidiagonalList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.nodup_divisorsAntidiagonalList","kind":"theorem","line":160,"name":"Nat.nodup_divisorsAntidiagonalList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L160-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sorted_divisorsAntidiagonalList_snd\"><span class=\"name\">Nat</span>.<span class=\"name\">sorted_divisorsAntidiagonalList_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span>.2</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\"><span class=\"fn\">x2</span>.2</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sorted_divisorsAntidiagonalList_snd","kind":"theorem","line":150,"name":"Nat.sorted_divisorsAntidiagonalList_snd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L150-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sorted_divisorsAntidiagonalList_fst\"><span class=\"name\">Nat</span>.<span class=\"name\">sorted_divisorsAntidiagonalList_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span>.1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x2</span>.1</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sorted_divisorsAntidiagonalList_fst","kind":"theorem","line":144,"name":"Nat.sorted_divisorsAntidiagonalList_fst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L144-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.toFinset_divisorsAntidiagonalList\"><span class=\"name\">Nat</span>.<span class=\"name\">toFinset_divisorsAntidiagonalList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a></span>.<a href=\"./Mathlib/Data/Finset/Dedup.html#List.toFinset\">toFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.toFinset_divisorsAntidiagonalList","kind":"theorem","line":138,"name":"Nat.toFinset_divisorsAntidiagonalList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L138-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList_one\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonalList_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList_one","kind":"theorem","line":136,"name":"Nat.divisorsAntidiagonalList_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonalList_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\">divisorsAntidiagonalList</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList_zero","kind":"theorem","line":135,"name":"Nat.divisorsAntidiagonalList_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L135-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisorsAntidiagonal","kind":"theorem","line":121,"name":"Nat.mem_divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L121-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_self\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisors_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_self","kind":"theorem","line":118,"name":"Nat.mem_divisors_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L118-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">one_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_divisors","kind":"theorem","line":116,"name":"Nat.one_mem_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.ne_zero_of_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">ne_zero_of_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.ne_zero_of_mem_divisors","kind":"theorem","line":114,"name":"Nat.ne_zero_of_mem_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L114-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.dvd_of_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">dvd_of_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.dvd_of_mem_divisors","kind":"theorem","line":112,"name":"Nat.dvd_of_mem_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors","kind":"theorem","line":105,"name":"Nat.mem_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L105-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.cons_self_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">cons_self_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Insert.html#Finset.cons\">Finset.cons</a> <span class=\"fn\">n</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.cons_self_properDivisors","kind":"theorem","line":101,"name":"Nat.cons_self_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L101-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.insert_self_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">insert_self_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">n</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.insert_self_properDivisors","kind":"theorem","line":96,"name":"Nat.insert_self_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L96-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors","kind":"theorem","line":91,"name":"Nat.mem_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L91-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors.not_self_mem\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors</span>.<span class=\"name\">not_self_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span></div></div>","info":{"doc":"**Alias** of `Nat.self_notMem_properDivisors`.","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors.not_self_mem","kind":"theorem","line":88,"name":"Nat.properDivisors.not_self_mem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L88-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.self_notMem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">self_notMem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.self_notMem_properDivisors","kind":"theorem","line":86,"name":"Nat.self_notMem_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">filter_dvd_eq_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span> | <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_properDivisors","kind":"theorem","line":80,"name":"Nat.filter_dvd_eq_properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L80-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">filter_dvd_eq_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> | <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_divisors","kind":"theorem","line":74,"name":"Nat.filter_dvd_eq_divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L74-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonalList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></div></div>","info":{"doc":"Pairs of divisors of a natural number, as a list.\n\n`n.divisorsAntidiagonalList` is the list of pairs `(a, b) : ℕ × ℕ` such that `a * b = n`, ordered\nby increasing `a`. By convention, we set `Nat.divisorsAntidiagonalList 0 = []`.\n","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonalList","kind":"def","line":63,"name":"Nat.divisorsAntidiagonalList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L63-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> (<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></div></div>","info":{"doc":"Pairs of divisors of a natural number as a finset.\n\n`n.divisorsAntidiagonal` is the finset of pairs `(a, b) : ℕ × ℕ` such that `a * b = n`.\nBy convention, we set `Nat.divisorsAntidiagonal 0 = ∅`.\n\nO(n). ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal","kind":"def","line":53,"name":"Nat.divisorsAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L53-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"`properDivisors n` is the `Finset` of divisors of `n`, other than `n`.\nBy convention, we set `properDivisors 0 = ∅`. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors","kind":"def","line":49,"name":"Nat.properDivisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L49-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"`divisors n` is the `Finset` of divisors of `n`. By convention, we set `divisors 0 = ∅`. ","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors","kind":"def","line":46,"name":"Nat.divisors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/NumberTheory/Divisors.lean#L46-L47"}}],"imports":["Init","Mathlib.Algebra.IsPrimePow","Mathlib.Algebra.Order.BigOperators.Group.Finset","Mathlib.Algebra.Order.Interval.Finset.SuccPred","Mathlib.Algebra.Order.Ring.Int","Mathlib.Algebra.Ring.CharZero","Mathlib.Data.Nat.Cast.Order.Ring","Mathlib.Data.Nat.PrimeFin","Mathlib.Data.Nat.SuccPred","Mathlib.Order.Interval.Finset.Nat"],"instances":[],"name":"Mathlib.NumberTheory.Divisors"}