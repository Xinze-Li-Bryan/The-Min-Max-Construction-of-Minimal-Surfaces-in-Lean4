{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/MinimalAxioms.html#Module.ofMinimalAxioms\"><span class=\"name\">Module</span>.<span class=\"name\">ofMinimalAxioms</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul_add</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">R</span>) (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">M</span>), <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">add_smul</span> : <span class=\"fn\">∀ (<span class=\"fn\">r </span><span class=\"fn\">s</span> : <span class=\"fn\">R</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span>) <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul_smul</span> : <span class=\"fn\">∀ (<span class=\"fn\">r </span><span class=\"fn\">s</span> : <span class=\"fn\">R</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s</span>) <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one_smul</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>), <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"Define a `Module` structure on a Type by proving a minimized set of axioms. ","docLink":"./Mathlib/Algebra/Module/MinimalAxioms.html#Module.ofMinimalAxioms","kind":"def","line":23,"name":"Module.ofMinimalAxioms","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/Module/MinimalAxioms.lean#L23-L39"}}],"imports":["Init","Mathlib.Algebra.Module.Defs"],"instances":[],"name":"Mathlib.Algebra.Module.MinimalAxioms"}