{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_apply\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\">sigmaAntidiagonalTupleEquivTuple</a> <span class=\"fn\">k</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_apply","kind":"theorem","line":240,"name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_fst\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple_symm_apply_fst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\">sigmaAntidiagonalTupleEquivTuple</a> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_fst","kind":"theorem","line":240,"name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_fst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\">sigmaAntidiagonalTupleEquivTuple</a> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe","kind":"theorem","line":240,"name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple_symm_apply_snd_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L240-L240"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">sigmaAntidiagonalTupleEquivTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></div></div>","info":{"doc":"The disjoint union of antidiagonal tuples `Σ n, antidiagonalTuple k n` is equivalent to the\n`k`-tuple `Fin k → ℕ`. This is such an equivalence, obtained by mapping `(n, x)` to `x`.\n\nThis is the tuple version of `Finset.sigmaAntidiagonalEquivProd`. ","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.sigmaAntidiagonalTupleEquivTuple","kind":"def","line":236,"name":"Finset.Nat.sigmaAntidiagonalTupleEquivTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L236-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_two\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#piFinTwoEquiv\">piFinTwoEquiv</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) =&gt; <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_two","kind":"theorem","line":230,"name":"Finset.Nat.antidiagonalTuple_two","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L230-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_one\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">n</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_one","kind":"theorem","line":226,"name":"Finset.Nat.antidiagonalTuple_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L226-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_right\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_right","kind":"theorem","line":223,"name":"Finset.Nat.antidiagonalTuple_zero_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L223-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.mem_antidiagonalTuple\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonalTuple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.mem_antidiagonalTuple","kind":"theorem","line":219,"name":"Finset.Nat.mem_antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L219-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_succ","kind":"theorem","line":215,"name":"Finset.Nat.antidiagonalTuple_zero_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L215-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_zero\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple_zero_zero","kind":"theorem","line":211,"name":"Finset.Nat.antidiagonalTuple_zero_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L211-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span></div></div>","info":{"doc":"`Finset.Nat.antidiagonalTuple k n` is a finset of `k`-tuples summing to `n` ","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Finset.Nat.antidiagonalTuple","kind":"def","line":207,"name":"Finset.Nat.antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L207-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_two\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/MapFold.html#Multiset.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">i</span>.1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">i</span>.2</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_two","kind":"theorem","line":196,"name":"Multiset.Nat.antidiagonalTuple_two","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L196-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_one\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">n</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_one","kind":"theorem","line":192,"name":"Multiset.Nat.antidiagonalTuple_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L192-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_right\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_right","kind":"theorem","line":189,"name":"Multiset.Nat.antidiagonalTuple_zero_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L189-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.nodup_antidiagonalTuple\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">nodup_antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Multiset/Defs.html#Multiset.Nodup\">Nodup</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.nodup_antidiagonalTuple","kind":"theorem","line":186,"name":"Multiset.Nat.nodup_antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L186-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.mem_antidiagonalTuple\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonalTuple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.mem_antidiagonalTuple","kind":"theorem","line":182,"name":"Multiset.Nat.mem_antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L182-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_succ\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_succ","kind":"theorem","line":178,"name":"Multiset.Nat.antidiagonalTuple_zero_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L178-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_zero\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple_zero_zero","kind":"theorem","line":174,"name":"Multiset.Nat.antidiagonalTuple_zero_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L174-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Defs.html#Multiset\">Multiset</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span></div></div>","info":{"doc":"`Multiset.Nat.antidiagonalTuple k n` is a multiset of `k`-tuples summing to `n` ","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#Multiset.Nat.antidiagonalTuple","kind":"def","line":170,"name":"Multiset.Nat.antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L170-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_pairwise_pi_lex\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_pairwise_pi_lex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/PiLex.html#Pi.Lex\">Pi.Lex</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>) (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_pairwise_pi_lex","kind":"theorem","line":138,"name":"List.Nat.antidiagonalTuple_pairwise_pi_lex","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L138-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_two\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">i</span>.1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">i</span>.2</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/NatAntidiagonal.html#List.Nat.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_two","kind":"theorem","line":131,"name":"List.Nat.antidiagonalTuple_two","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L131-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_one\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">n</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_one","kind":"theorem","line":120,"name":"List.Nat.antidiagonalTuple_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L120-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_right\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_right","kind":"theorem","line":113,"name":"List.Nat.antidiagonalTuple_zero_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L113-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.nodup_antidiagonalTuple\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">nodup_antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>","info":{"doc":"The antidiagonal of `n` does not contain duplicate entries. ","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.nodup_antidiagonalTuple","kind":"theorem","line":87,"name":"List.Nat.nodup_antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L87-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.mem_antidiagonalTuple\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonalTuple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">k</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.mem_antidiagonalTuple","kind":"theorem","line":74,"name":"List.Nat.mem_antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L74-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_succ\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">0</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_succ","kind":"theorem","line":70,"name":"List.Nat.antidiagonalTuple_zero_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L70-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_zero\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple_zero_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\">antidiagonalTuple</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple_zero_zero","kind":"theorem","line":66,"name":"List.Nat.antidiagonalTuple_zero_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L66-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple\"><span class=\"name\">List</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalTuple</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">a✝</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">k</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span></div></div>","info":{"doc":"`List.antidiagonalTuple k n` is a list of all `k`-tuples which sum to `n`.\n\nThis list contains no duplicates (`List.Nat.nodup_antidiagonalTuple`), and is sorted\nlexicographically (`List.Nat.antidiagonalTuple_pairwise_pi_lex`), starting with `![0, ..., n]`\nand ending with `![n, ..., 0]`.\n\n```\n#eval antidiagonalTuple 3 2\n-- [![0, 0, 2], ![0, 1, 1], ![0, 2, 0], ![1, 0, 1], ![1, 1, 0], ![2, 0, 0]]\n```\n","docLink":"./Mathlib/Data/Fin/Tuple/NatAntidiagonal.html#List.Nat.antidiagonalTuple","kind":"def","line":48,"name":"List.Nat.antidiagonalTuple","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Fin/Tuple/NatAntidiagonal.lean#L48-L64"}}],"imports":["Init","Mathlib.Algebra.BigOperators.Fin","Mathlib.Algebra.Group.Fin.Tuple","Mathlib.Data.Finset.NatAntidiagonal","Mathlib.Order.Fin.Tuple"],"instances":[],"name":"Mathlib.Data.Fin.Tuple.NatAntidiagonal"}