{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.subst\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">subst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>","info":{"doc":"","docLink":"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.subst","kind":"def","line":83,"name":"Aesop.BuiltinRules.subst","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/BuiltinRules/Subst.lean#L83-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.substEqsAndIffs?\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">substEqsAndIffs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.substEqsAndIffs?","kind":"def","line":73,"name":"Aesop.BuiltinRules.substEqsAndIffs?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/BuiltinRules/Subst.lean#L73-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.substEqs?\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">substEqs?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.substEqs?","kind":"def","line":50,"name":"Aesop.BuiltinRules.substEqs?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/BuiltinRules/Subst.lean#L50-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.prepareIffs\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">prepareIffs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.prepareIffs","kind":"def","line":38,"name":"Aesop.BuiltinRules.prepareIffs","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/BuiltinRules/Subst.lean#L38-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.prepareIff?\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">prepareIff?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>))</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.prepareIff?","kind":"def","line":22,"name":"Aesop.BuiltinRules.prepareIff?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/BuiltinRules/Subst.lean#L22-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.matchSubstitutableIff?\"><span class=\"name\">Aesop</span>.<span class=\"name\">BuiltinRules</span>.<span class=\"name\">matchSubstitutableIff?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/BuiltinRules/Subst.html#Aesop.BuiltinRules.matchSubstitutableIff?","kind":"def","line":14,"name":"Aesop.BuiltinRules.matchSubstitutableIff?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/BuiltinRules/Subst.lean#L14-L20"}}],"imports":["Init","Aesop.Frontend.Attribute","Aesop.RuleTac.Forward.Basic"],"instances":[],"name":"Aesop.BuiltinRules.Subst"}