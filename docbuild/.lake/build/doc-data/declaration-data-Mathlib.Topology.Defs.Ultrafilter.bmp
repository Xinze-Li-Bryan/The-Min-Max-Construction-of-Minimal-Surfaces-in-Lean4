{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Defs/Ultrafilter.html#Ultrafilter.lim\"><span class=\"name\">Ultrafilter</span>.<span class=\"name\">lim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span></div></div>","info":{"doc":"If `F` is an ultrafilter, then `Filter.Ultrafilter.lim F` is a limit of the filter, if it exists.\nNote that dot notation `F.lim` can be used for `F : Filter.Ultrafilter X`.\n","docLink":"./Mathlib/Topology/Defs/Ultrafilter.html#Ultrafilter.lim","kind":"def","line":24,"name":"Ultrafilter.lim","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Defs/Ultrafilter.lean#L24-L29"}}],"imports":["Init","Mathlib.Data.Set.Lattice","Mathlib.Order.Filter.Ultrafilter.Defs","Mathlib.Topology.Defs.Basic","Mathlib.Topology.Defs.Filter"],"instances":[],"name":"Mathlib.Topology.Defs.Ultrafilter"}