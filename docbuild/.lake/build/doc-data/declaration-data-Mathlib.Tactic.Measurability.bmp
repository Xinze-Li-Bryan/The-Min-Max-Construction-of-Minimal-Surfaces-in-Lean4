{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#measurability!?\"><span class=\"name\">measurability!?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Measurability.html#measurability!?","kind":"def","line":52,"name":"measurability!?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Measurability.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#measurability!\"><span class=\"name\">measurability!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Measurability.html#measurability!","kind":"def","line":51,"name":"measurability!","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Measurability.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#tacticMeasurability?\"><span class=\"name\">tacticMeasurability?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The tactic `measurability?` solves goals of the form `Measurable f`, `AEMeasurable f`,\n`StronglyMeasurable f`, `AEStronglyMeasurable f μ`, or `MeasurableSet s` by applying lemmas tagged\nwith the `measurability` user attribute, and suggests a faster proof script that can be substituted\nfor the tactic call in case of success. ","docLink":"./Mathlib/Tactic/Measurability.html#tacticMeasurability?","kind":"def","line":45,"name":"tacticMeasurability?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Measurability.lean#L45-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#tacticMeasurability\"><span class=\"name\">tacticMeasurability</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The tactic `measurability` solves goals of the form `Measurable f`, `AEMeasurable f`,\n`StronglyMeasurable f`, `AEStronglyMeasurable f μ`, or `MeasurableSet s` by applying lemmas tagged\nwith the `measurability` user attribute.\n\n`fun_prop` is a (usually more powerful) alternative to `measurability`\nif your goal does not involve `MeasurableSet`. ","docLink":"./Mathlib/Tactic/Measurability.html#tacticMeasurability","kind":"def","line":36,"name":"tacticMeasurability","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Measurability.lean#L36-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#attrMeasurability\"><span class=\"name\">attrMeasurability</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `measurability` attribute used to tag measurability statements for the `measurability` tactic.\n","docLink":"./Mathlib/Tactic/Measurability.html#attrMeasurability","kind":"def","line":26,"name":"attrMeasurability","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Measurability.lean#L26-L27"}}],"imports":["Init","Mathlib.Tactic.Measurability.Init","Mathlib.Algebra.Group.Defs"],"instances":[],"name":"Mathlib.Tactic.Measurability"}