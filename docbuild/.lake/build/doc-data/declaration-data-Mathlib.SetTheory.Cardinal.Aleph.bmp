{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isStrongLimit_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isStrongLimit_beth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Order.html#Cardinal.IsStrongLimit\">IsStrongLimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isStrongLimit_beth","kind":"theorem","line":645,"name":"Cardinal.isStrongLimit_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L645-L646"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_ne_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_ne_zero","kind":"theorem","line":642,"name":"Cardinal.beth_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L642-L643"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_pos","kind":"theorem","line":639,"name":"Cardinal.beth_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L639-L640"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_beth","kind":"theorem","line":636,"name":"Cardinal.aleph0_le_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L636-L637"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_le_beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_beth","kind":"theorem","line":633,"name":"Cardinal.aleph_le_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L633-L634"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_limit","kind":"theorem","line":630,"name":"Cardinal.beth_limit","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L630-L631"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isNormal_beth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/IsNormal.html#Order.IsNormal\">Order.IsNormal</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_beth","kind":"theorem","line":627,"name":"Cardinal.isNormal_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L627-L628"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_succ","kind":"theorem","line":623,"name":"Cardinal.beth_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L623-L625"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_zero","kind":"theorem","line":619,"name":"Cardinal.beth_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L619-L621"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_le_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_le_beth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_le_beth","kind":"theorem","line":615,"name":"Cardinal.beth_le_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L615-L617"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_lt_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_lt_beth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_lt_beth","kind":"theorem","line":611,"name":"Cardinal.beth_lt_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L611-L613"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_mono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_mono","kind":"theorem","line":608,"name":"Cardinal.beth_mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L608-L609"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_strictMono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_strictMono","kind":"theorem","line":605,"name":"Cardinal.beth_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L605-L606"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_le_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_le_beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_le_beth","kind":"theorem","line":602,"name":"Cardinal.preBeth_le_beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L602-L603"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_eq_preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_eq_preBeth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">beth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> (<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_eq_preBeth","kind":"theorem","line":599,"name":"Cardinal.beth_eq_preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L599-L600"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℶ_\"><span class=\"name\">Cardinal</span>.<span class=\"name\">termℶ_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The Beth function is defined so that `beth 0 = ℵ₀'`, `beth (succ o) = 2 ^ beth o`, and that for\na limit ordinal `o`, `beth o` is the supremum of `beth a` for `a < o`.\n\nAssuming the generalized continuum hypothesis, which is undecidable in ZFC, we have `ℶ_ o = ℵ_ o`\nfor all ordinals.\n\nFor a version which starts at zero, see `Cardinal.preBeth`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℶ_","kind":"def","line":596,"name":"Cardinal.termℶ_","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L596-L597"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a></div></div>","info":{"doc":"The Beth function is defined so that `beth 0 = ℵ₀'`, `beth (succ o) = 2 ^ beth o`, and that for\na limit ordinal `o`, `beth o` is the supremum of `beth a` for `a < o`.\n\nAssuming the generalized continuum hypothesis, which is undecidable in ZFC, we have `ℶ_ o = ℵ_ o`\nfor all ordinals.\n\nFor a version which starts at zero, see `Cardinal.preBeth`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth","kind":"def","line":586,"name":"Cardinal.beth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L586-L594"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isStrongLimit_preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isStrongLimit_preBeth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Order.html#Cardinal.IsStrongLimit\">IsStrongLimit</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isStrongLimit_preBeth","kind":"theorem","line":571,"name":"Cardinal.isStrongLimit_preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L571-L584"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_eq_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_eq_zero","kind":"theorem","line":567,"name":"Cardinal.preBeth_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L567-L569"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_pos","kind":"theorem","line":563,"name":"Cardinal.preBeth_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L563-L565"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_omega\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_omega","kind":"theorem","line":553,"name":"Cardinal.preBeth_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L553-L561"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_one","kind":"theorem","line":549,"name":"Cardinal.preBeth_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L549-L551"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_nat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_nat","kind":"theorem","line":543,"name":"Cardinal.preBeth_nat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L543-L547"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isNormal_preBeth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/IsNormal.html#Order.IsNormal\">Order.IsNormal</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_preBeth","kind":"theorem","line":538,"name":"Cardinal.isNormal_preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L538-L541"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_limit","kind":"theorem","line":529,"name":"Cardinal.preBeth_limit","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L529-L536"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_succ","kind":"theorem","line":524,"name":"Cardinal.preBeth_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L524-L527"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_zero","kind":"theorem","line":519,"name":"Cardinal.preBeth_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L519-L522"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_inj\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_inj","kind":"theorem","line":515,"name":"Cardinal.preBeth_inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L515-L517"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_le_preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_le_preBeth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_le_preBeth","kind":"theorem","line":511,"name":"Cardinal.preBeth_le_preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L511-L513"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_lt_preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_lt_preBeth</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_lt_preBeth","kind":"theorem","line":507,"name":"Cardinal.preBeth_lt_preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L507-L509"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_preBeth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_preBeth","kind":"theorem","line":504,"name":"Cardinal.preAleph_le_preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L504-L505"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_mono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_mono","kind":"theorem","line":501,"name":"Cardinal.preBeth_mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L501-L502"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_strictMono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\">preBeth</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth_strictMono","kind":"theorem","line":495,"name":"Cardinal.preBeth_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L495-L499"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preBeth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a></div></div>","info":{"doc":"The \"pre-beth\" function is defined so that `preBeth o` is the supremum of `2 ^ preBeth a` for\n`a < o`. This implies `beth 0 = 0`, `beth (succ o) = 2 ^ beth o`, and that for a limit ordinal `o`,\n`beth o` is the supremum of `beth a` for `a < o`.\n\nFor the usual function starting at `ℵ₀`, see `Cardinal.beth`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preBeth","kind":"def","line":485,"name":"Cardinal.preBeth","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L485-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lt_omega_iff_card_lt\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lt_omega_iff_card_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lt_omega_iff_card_lt","kind":"theorem","line":480,"name":"Cardinal.lt_omega_iff_card_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L480-L481"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_eq_aleph1\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_eq_aleph1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_eq_aleph1","kind":"theorem","line":476,"name":"Cardinal.lift_eq_aleph1","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L476-L478"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_eq_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph1_eq_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_eq_lift","kind":"theorem","line":472,"name":"Cardinal.aleph1_eq_lift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L472-L474"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_lt_aleph1\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_lt_aleph1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_lt_aleph1","kind":"theorem","line":468,"name":"Cardinal.lift_lt_aleph1","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L468-L470"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_lt_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph1_lt_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_lt_lift","kind":"theorem","line":464,"name":"Cardinal.aleph1_lt_lift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L464-L466"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_le_aleph1\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_le_aleph1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_le_aleph1","kind":"theorem","line":460,"name":"Cardinal.lift_le_aleph1","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L460-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_le_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph1_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_le_lift","kind":"theorem","line":456,"name":"Cardinal.aleph1_le_lift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L456-L458"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.countable_iff_lt_aleph_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">countable_iff_lt_aleph_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Countable</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.countable_iff_lt_aleph_one","kind":"theorem","line":453,"name":"Cardinal.countable_iff_lt_aleph_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L453-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_lt_aleph_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_lt_aleph_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_lt_aleph_one","kind":"theorem","line":449,"name":"Cardinal.aleph0_lt_aleph_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L449-L451"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.succ_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">succ_aleph0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.succ_aleph0","kind":"theorem","line":445,"name":"Cardinal.succ_aleph0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L445-L447"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mem_range_aleph_iff\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mem_range_aleph_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mem_range_aleph_iff","kind":"theorem","line":442,"name":"Cardinal.mem_range_aleph_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L442-L443"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.range_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">range_aleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.range_aleph","kind":"theorem","line":435,"name":"Cardinal.range_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L435-L440"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isLimit_omega\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isLimit_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"**Alias** of `Cardinal.isSuccLimit_omega`.","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isLimit_omega","kind":"theorem","line":432,"name":"Cardinal.isLimit_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L432-L433"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isSuccLimit_omega\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isSuccLimit_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isSuccLimit_omega","kind":"theorem","line":428,"name":"Cardinal.isSuccLimit_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L428-L430"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_toENat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ENat.html#Cardinal.toENat\">toENat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toENat","kind":"theorem","line":424,"name":"Cardinal.aleph_toENat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L424-L426"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/ToNat.html#Cardinal.toNat\">toNat</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toNat","kind":"theorem","line":420,"name":"Cardinal.aleph_toNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L420-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_pos","kind":"theorem","line":417,"name":"Cardinal.aleph_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L417-L418"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_aleph","kind":"theorem","line":413,"name":"Cardinal.aleph0_le_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L413-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccLimit\">Order.IsSuccLimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_limit","kind":"theorem","line":410,"name":"Cardinal.aleph_limit","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L410-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isNormal_aleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/IsNormal.html#Order.IsNormal\">Order.IsNormal</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_aleph","kind":"theorem","line":407,"name":"Cardinal.isNormal_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L407-L408"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{v, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{v, u}</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"For the theorem `lift ω = ω`, see `lift_omega0`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_omega","kind":"theorem","line":401,"name":"Ordinal.lift_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L401-L405"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_aleph","kind":"theorem","line":397,"name":"Cardinal.lift_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L397-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_zero","kind":"theorem","line":394,"name":"Cardinal.aleph_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L394-L395"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_succ","kind":"theorem","line":390,"name":"Cardinal.aleph_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L390-L392"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_aleph","kind":"theorem","line":387,"name":"Cardinal.preAleph_le_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L387-L388"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_max\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_max","kind":"theorem","line":384,"name":"Cardinal.aleph_max","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L384-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_le_aleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_aleph","kind":"theorem","line":381,"name":"Cardinal.aleph_le_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L381-L382"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_lt_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_lt_aleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_lt_aleph","kind":"theorem","line":378,"name":"Cardinal.aleph_lt_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L378-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_aleph","kind":"theorem","line":374,"name":"Cardinal.ord_aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L374-L376"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">Cardinal.aleph</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_omega","kind":"theorem","line":370,"name":"Ordinal.card_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L370-L372"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_eq_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_eq_preAleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> (<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_eq_preAleph","kind":"theorem","line":367,"name":"Cardinal.aleph_eq_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L367-L368"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ₁\"><span class=\"name\">Cardinal</span>.<span class=\"name\">termℵ₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`ℵ₁` is the first uncountable cardinal. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ₁","kind":"def","line":364,"name":"Cardinal.termℵ₁","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L364-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ_\"><span class=\"name\">Cardinal</span>.<span class=\"name\">termℵ_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `aleph` function gives the infinite cardinals listed by their ordinal index. `aleph 0 = ℵ₀`,\n`aleph 1 = succ ℵ₀` is the first uncountable cardinal, and so on.\n\nFor a version including finite cardinals, see `Cardinal.preAleph`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ_","kind":"def","line":361,"name":"Cardinal.termℵ_","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L361-L362"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a></div></div>","info":{"doc":"The `aleph` function gives the infinite cardinals listed by their ordinal index. `aleph 0 = ℵ₀`,\n`aleph 1 = succ ℵ₀` is the first uncountable cardinal, and so on.\n\nFor a version including finite cardinals, see `Cardinal.preAleph`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph","kind":"def","line":354,"name":"Cardinal.aleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L354-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_strictMono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_of_strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> → <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_strictMono","kind":"theorem","line":350,"name":"Cardinal.preAleph_le_of_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L350-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_limit","kind":"theorem","line":344,"name":"Cardinal.preAleph_limit","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L344-L348"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_isLimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_of_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">o'</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"**Alias** of `Cardinal.preAleph_le_of_isSuccPrelimit`.","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_isLimit","kind":"theorem","line":341,"name":"Cardinal.preAleph_le_of_isLimit","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L341-L342"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_isSuccPrelimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_of_isSuccPrelimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Limit.html#Order.IsSuccPrelimit\">Order.IsSuccPrelimit</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">o'</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_isSuccPrelimit","kind":"theorem","line":335,"name":"Cardinal.preAleph_le_of_isSuccPrelimit","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L335-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isNormal_preAleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/IsNormal.html#Order.IsNormal\">Order.IsNormal</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_preAleph","kind":"theorem","line":332,"name":"Cardinal.isNormal_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L332-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{v, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">lift.{v, u}</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_preOmega","kind":"theorem","line":327,"name":"Ordinal.lift_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L327-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_preAleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_preAleph","kind":"theorem","line":322,"name":"Cardinal.lift_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L322-L325"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_preAleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_preAleph","kind":"theorem","line":318,"name":"Cardinal.aleph0_le_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L318-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_pos","kind":"theorem","line":314,"name":"Cardinal.preAleph_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L314-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_omega0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_omega0","kind":"theorem","line":310,"name":"Cardinal.preAleph_omega0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L310-L312"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_nat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_nat","kind":"theorem","line":306,"name":"Cardinal.preAleph_nat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L306-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_succ","kind":"theorem","line":302,"name":"Cardinal.preAleph_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L302-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_zero","kind":"theorem","line":298,"name":"Cardinal.preAleph_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L298-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_max\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_max","kind":"theorem","line":295,"name":"Cardinal.preAleph_max","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L295-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_preAleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_preAleph","kind":"theorem","line":292,"name":"Cardinal.preAleph_le_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L292-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_lt_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_lt_preAleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_lt_preAleph","kind":"theorem","line":289,"name":"Cardinal.preAleph_lt_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L289-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mk_cardinal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_cardinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.univ\">univ.{u, u + 1}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mk_cardinal","kind":"theorem","line":285,"name":"Cardinal.mk_cardinal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L285-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.type_cardinal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">type_cardinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.univ\">Ordinal.univ.{u, u + 1}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.type_cardinal","kind":"theorem","line":280,"name":"Cardinal.type_cardinal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L280-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_preAleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">preAleph</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_preAleph","kind":"theorem","line":276,"name":"Cardinal.ord_preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L276-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">Cardinal.preAleph</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_preOmega","kind":"theorem","line":272,"name":"Ordinal.card_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L272-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a></div></div>","info":{"doc":"The \"pre-aleph\" function gives the cardinals listed by their ordinal index. `preAleph n = n`,\n`preAleph ω = ℵ₀`, `preAleph (ω + 1) = succ ℵ₀`, etc.\n\nFor the more common aleph function skipping over finite cardinals, see `Cardinal.aleph`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph","kind":"def","line":265,"name":"Cardinal.preAleph","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L265-L270"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_omega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mem_range_omega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_omega_iff","kind":"theorem","line":256,"name":"Ordinal.mem_range_omega_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L256-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">range_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_omega","kind":"theorem","line":244,"name":"Ordinal.range_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L244-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_omega","kind":"theorem","line":241,"name":"Ordinal.isNormal_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L241-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_omega1\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_lt_omega1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_omega1","kind":"theorem","line":237,"name":"Ordinal.omega0_lt_omega1","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L237-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"For the theorem `0 < ω`, see `omega0_pos`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_pos","kind":"theorem","line":233,"name":"Ordinal.omega_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L233-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_le_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_omega","kind":"theorem","line":229,"name":"Ordinal.omega0_le_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L229-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_zero","kind":"theorem","line":225,"name":"Ordinal.omega_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L225-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_omega_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_omega_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_omega_self","kind":"theorem","line":222,"name":"Ordinal.le_omega_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L222-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega","kind":"theorem","line":219,"name":"Ordinal.isInitial_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L219-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_le_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_omega","kind":"theorem","line":216,"name":"Ordinal.preOmega_le_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L216-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_max\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_max","kind":"theorem","line":213,"name":"Ordinal.omega_max","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L213-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_le_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_le_omega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_le_omega","kind":"theorem","line":210,"name":"Ordinal.omega_le_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L210-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_lt_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_lt_omega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_lt_omega","kind":"theorem","line":207,"name":"Ordinal.omega_lt_omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L207-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_strictMono","kind":"theorem","line":204,"name":"Ordinal.omega_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L204-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_eq_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_eq_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> (<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_eq_preOmega","kind":"theorem","line":201,"name":"Ordinal.omega_eq_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L201-L202"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω₁\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termω₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`ω₁` is the first uncountable ordinal. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω₁","kind":"def","line":198,"name":"Ordinal.termω₁","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L198-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω_\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termω_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `omega` function gives the infinite initial ordinals listed by their ordinal index.\n`omega 0 = ω`, `omega 1 = ω₁` is the first uncountable ordinal, and so on.\n\nThis is not to be confused with the first infinite ordinal `Ordinal.omega0`.\n\nFor a version including finite ordinals, see `Ordinal.preOmega`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω_","kind":"def","line":195,"name":"Ordinal.termω_","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L195-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></div></div>","info":{"doc":"The `omega` function gives the infinite initial ordinals listed by their ordinal index.\n`omega 0 = ω`, `omega 1 = ω₁` is the first uncountable ordinal, and so on.\n\nThis is not to be confused with the first infinite ordinal `Ordinal.omega0`.\n\nFor a version including finite ordinals, see `Ordinal.preOmega`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega","kind":"def","line":186,"name":"Ordinal.omega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L186-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_preOmega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_lt_preOmega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_preOmega_iff","kind":"theorem","line":182,"name":"Ordinal.omega0_lt_preOmega_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L182-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_preOmega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_le_preOmega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_preOmega_iff","kind":"theorem","line":178,"name":"Ordinal.omega0_le_preOmega_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L178-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_omega0","kind":"theorem","line":174,"name":"Ordinal.preOmega_omega0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L174-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.mem_range_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">mem_range_preOmega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a></span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `Ordinal.mem_range_preOmega_iff`.","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.mem_range_preOmega","kind":"theorem","line":172,"name":"Ordinal.IsInitial.mem_range_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L172-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_preOmega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mem_range_preOmega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_preOmega_iff","kind":"theorem","line":169,"name":"Ordinal.mem_range_preOmega_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L169-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">range_preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_preOmega","kind":"theorem","line":165,"name":"Ordinal.range_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L165-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">IsNormal</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_preOmega","kind":"theorem","line":156,"name":"Ordinal.isNormal_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L156-L163"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_of_forall_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_le_of_forall_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o </span><span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_of_forall_lt","kind":"theorem","line":152,"name":"Ordinal.preOmega_le_of_forall_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L152-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_ofNat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Init.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_ofNat","kind":"theorem","line":148,"name":"Ordinal.preOmega_ofNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L148-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_natCast","kind":"theorem","line":138,"name":"Ordinal.preOmega_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L138-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_zero","kind":"theorem","line":133,"name":"Ordinal.preOmega_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L133-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_preOmega_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_preOmega_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_preOmega_self","kind":"theorem","line":130,"name":"Ordinal.le_preOmega_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L130-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_preOmega","kind":"theorem","line":127,"name":"Ordinal.isInitial_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L127-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_max\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">o₁</span> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_max","kind":"theorem","line":124,"name":"Ordinal.preOmega_max","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L124-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_le_preOmega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_preOmega","kind":"theorem","line":121,"name":"Ordinal.preOmega_le_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L121-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_lt_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_lt_preOmega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o₁ </span><span class=\"fn\">o₂</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a> <span class=\"fn\">o₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_lt_preOmega","kind":"theorem","line":118,"name":"Ordinal.preOmega_lt_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L118-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_strictMono","kind":"theorem","line":115,"name":"Ordinal.preOmega_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L115-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.coe_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">coe_preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">preOmega</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Enum.html#Ordinal.enumOrd\">enumOrd</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.coe_preOmega","kind":"theorem","line":112,"name":"Ordinal.coe_preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L112-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></div></div>","info":{"doc":"The \"pre-omega\" function gives the initial ordinals listed by their ordinal index.\n`preOmega n = n`, `preOmega ω = ω`, `preOmega (ω + 1) = ω₁`, etc.\n\nFor the more common omega function skipping over finite ordinals, see `Ordinal.omega`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega","kind":"def","line":103,"name":"Ordinal.preOmega","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L103-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_apply\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitialIso_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso\">isInitialIso</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_apply","kind":"theorem","line":95,"name":"Ordinal.isInitialIso_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_symm_apply_coe\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitialIso_symm_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso.symm\">RelIso.symm</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso\">isInitialIso</a>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_symm_apply_coe","kind":"theorem","line":95,"name":"Ordinal.isInitialIso_symm_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitialIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a></div></div>","info":{"doc":"Initial ordinals are order-isomorphic to the cardinals. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso","kind":"def","line":94,"name":"Ordinal.isInitialIso","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L94-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.not_bddAbove_isInitial\"><span class=\"name\">Ordinal</span>.<span class=\"name\">not_bddAbove_isInitial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddAbove\">BddAbove</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.not_bddAbove_isInitial","kind":"theorem","line":88,"name":"Ordinal.not_bddAbove_isInitial","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L88-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_succ\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_succ","kind":"theorem","line":84,"name":"Ordinal.isInitial_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L84-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega0","kind":"theorem","line":81,"name":"Ordinal.isInitial_omega0","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L81-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_one","kind":"theorem","line":78,"name":"Ordinal.isInitial_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L78-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_zero","kind":"theorem","line":75,"name":"Ordinal.isInitial_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L75-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_natCast","kind":"theorem","line":71,"name":"Ordinal.isInitial_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L71-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_ord</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_ord","kind":"theorem","line":68,"name":"Ordinal.isInitial_ord","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L68-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_lt_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">card_lt_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_lt_card","kind":"theorem","line":65,"name":"Ordinal.IsInitial.card_lt_card","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L65-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_le_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">card_le_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_le_card","kind":"theorem","line":60,"name":"Ordinal.IsInitial.card_le_card","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L60-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.ord_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">ord_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></div></div>","info":{"doc":"","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.ord_card","kind":"theorem","line":58,"name":"Ordinal.IsInitial.ord_card","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"An ordinal is initial when it is the first ordinal with a given cardinality.\n\nThis is written as `o.card.ord = o`, i.e. `o` is the smallest ordinal with cardinality `o.card`. ","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial","kind":"def","line":52,"name":"Ordinal.IsInitial","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/SetTheory/Cardinal/Aleph.lean#L52-L56"}}],"imports":["Init","Mathlib.SetTheory.Cardinal.ToNat","Mathlib.SetTheory.Cardinal.ENat","Mathlib.SetTheory.Ordinal.Enum"],"instances":[],"name":"Mathlib.SetTheory.Cardinal.Aleph"}