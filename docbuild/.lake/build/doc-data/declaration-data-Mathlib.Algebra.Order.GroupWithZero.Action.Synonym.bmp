{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instMulActionWithZero'\"><span class=\"name\">Lex</span>.<span class=\"name\">instMulActionWithZero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">M₀</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instMulActionWithZero'","kind":"instance","line":75,"name":"Lex.instMulActionWithZero'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L75-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instMulActionWithZero\"><span class=\"name\">Lex</span>.<span class=\"name\">instMulActionWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">G₀</span>)</span> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instMulActionWithZero","kind":"instance","line":72,"name":"Lex.instMulActionWithZero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L72-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribMulAction'\"><span class=\"name\">Lex</span>.<span class=\"name\">instDistribMulAction'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">M₀</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribMulAction'","kind":"instance","line":69,"name":"Lex.instDistribMulAction'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribMulAction\"><span class=\"name\">Lex</span>.<span class=\"name\">instDistribMulAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">G₀</span>)</span> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribMulAction","kind":"instance","line":66,"name":"Lex.instDistribMulAction","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribSMul'\"><span class=\"name\">Lex</span>.<span class=\"name\">instDistribSMul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">M₀</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribSMul'","kind":"instance","line":63,"name":"Lex.instDistribSMul'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L63-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribSMul\"><span class=\"name\">Lex</span>.<span class=\"name\">instDistribSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">G₀</span>)</span> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instDistribSMul","kind":"instance","line":60,"name":"Lex.instDistribSMul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instSMulWithZero'\"><span class=\"name\">Lex</span>.<span class=\"name\">instSMulWithZero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">M₀</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instSMulWithZero'","kind":"instance","line":57,"name":"Lex.instSMulWithZero'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instSMulWithZero\"><span class=\"name\">Lex</span>.<span class=\"name\">instSMulWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Synonym.html#Lex\">Lex</a> <span class=\"fn\">G₀</span>)</span> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#Lex.instSMulWithZero","kind":"instance","line":54,"name":"Lex.instSMulWithZero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instMulActionWithZero'\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instMulActionWithZero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instMulActionWithZero'","kind":"instance","line":47,"name":"OrderDual.instMulActionWithZero'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instMulActionWithZero\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instMulActionWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#MulActionWithZero\">MulActionWithZero</a> <span class=\"fn\">G₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instMulActionWithZero","kind":"instance","line":44,"name":"OrderDual.instMulActionWithZero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L44-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribMulAction'\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instDistribMulAction'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribMulAction'","kind":"instance","line":41,"name":"OrderDual.instDistribMulAction'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribMulAction\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instDistribMulAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribMulAction","kind":"instance","line":38,"name":"OrderDual.instDistribMulAction","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribSMul'\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instDistribSMul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribSMul'","kind":"instance","line":35,"name":"OrderDual.instDistribSMul'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribSMul\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instDistribSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">G₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instDistribSMul","kind":"instance","line":32,"name":"OrderDual.instDistribSMul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instSMulWithZero'\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instSMulWithZero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instSMulWithZero'","kind":"instance","line":29,"name":"OrderDual.instSMulWithZero'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L29-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instSMulWithZero\"><span class=\"name\">OrderDual</span>.<span class=\"name\">instSMulWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G₀</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₀</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">G₀</span><a href=\"./Mathlib/Order/Basic.html#OrderDual\">ᵒᵈ</a> <span class=\"fn\">M₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.html#OrderDual.instSMulWithZero","kind":"instance","line":26,"name":"OrderDual.instSMulWithZero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Algebra/Order/GroupWithZero/Action/Synonym.lean#L26-L27"}}],"imports":["Init","Mathlib.Algebra.GroupWithZero.Action.Defs","Mathlib.Algebra.Order.GroupWithZero.Synonym","Mathlib.Tactic.Common"],"instances":[{"className":"SMulWithZero","name":"OrderDual.instSMulWithZero","typeNames":["OrderDual"]},{"className":"SMulWithZero","name":"OrderDual.instSMulWithZero'","typeNames":["OrderDual"]},{"className":"DistribSMul","name":"OrderDual.instDistribSMul","typeNames":["OrderDual"]},{"className":"DistribSMul","name":"OrderDual.instDistribSMul'","typeNames":["OrderDual"]},{"className":"DistribMulAction","name":"OrderDual.instDistribMulAction","typeNames":["OrderDual"]},{"className":"DistribMulAction","name":"OrderDual.instDistribMulAction'","typeNames":["OrderDual"]},{"className":"MulActionWithZero","name":"OrderDual.instMulActionWithZero","typeNames":["OrderDual"]},{"className":"MulActionWithZero","name":"OrderDual.instMulActionWithZero'","typeNames":["OrderDual"]},{"className":"SMulWithZero","name":"Lex.instSMulWithZero","typeNames":["Lex"]},{"className":"SMulWithZero","name":"Lex.instSMulWithZero'","typeNames":["Lex"]},{"className":"DistribSMul","name":"Lex.instDistribSMul","typeNames":["Lex"]},{"className":"DistribSMul","name":"Lex.instDistribSMul'","typeNames":["Lex"]},{"className":"DistribMulAction","name":"Lex.instDistribMulAction","typeNames":["Lex"]},{"className":"DistribMulAction","name":"Lex.instDistribMulAction'","typeNames":["Lex"]},{"className":"MulActionWithZero","name":"Lex.instMulActionWithZero","typeNames":["Lex"]},{"className":"MulActionWithZero","name":"Lex.instMulActionWithZero'","typeNames":["Lex"]}],"name":"Mathlib.Algebra.Order.GroupWithZero.Action.Synonym"}