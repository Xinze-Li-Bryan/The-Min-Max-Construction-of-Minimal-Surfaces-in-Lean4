{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/RSuffices.html#Mathlib.Tactic.rsuffices\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">rsuffices</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `rsuffices` tactic is an alternative version of `suffices`, that allows the usage\nof any syntax that would be valid in an `obtain` block. This tactic just calls `obtain`\non the expression, and then `rotate_left`.\n","docLink":"./Mathlib/Tactic/RSuffices.html#Mathlib.Tactic.rsuffices","kind":"def","line":18,"name":"Mathlib.Tactic.rsuffices","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/RSuffices.lean#L18-L24"}}],"imports":["Init","Mathlib.Tactic.Basic"],"instances":[],"name":"Mathlib.Tactic.RSuffices"}