{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Array.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Array</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Array.Arbitrary","kind":"instance","line":159,"name":"Plausible.Array.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L159-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.String.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">String</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.String.Arbitrary","kind":"instance","line":156,"name":"Plausible.String.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L156-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.ULift.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">ULift</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.ULift.Arbitrary","kind":"instance","line":153,"name":"Plausible.ULift.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L153-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.List.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">List</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.List.Arbitrary","kind":"instance","line":150,"name":"Plausible.List.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L150-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Prod.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Prod</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Prod.Arbitrary","kind":"instance","line":146,"name":"Plausible.Prod.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L146-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Option.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Option</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Option.Arbitrary","kind":"instance","line":140,"name":"Plausible.Option.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L140-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Char.arbitraryDefaultInstance\"><span class=\"name\">Plausible</span>.<span class=\"name\">Char</span>.<span class=\"name\">arbitraryDefaultInstance</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"Pick a simple ASCII character 2/3s of the time, and otherwise pick any random `Char` encoded by\nthe next `Nat` (or `\\0` if there is no such character) ","docLink":"./Plausible/Arbitrary.html#Plausible.Char.arbitraryDefaultInstance","kind":"instance","line":135,"name":"Plausible.Char.arbitraryDefaultInstance","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L135-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Char.arbitraryFromList\"><span class=\"name\">Plausible</span>.<span class=\"name\">Char</span>.<span class=\"name\">arbitraryFromList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">chars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">chars</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>","info":{"doc":"This can be specialized into customized `Arbitrary Char` instances.\nThe resulting instance has `1 / p` chances of making an unrestricted choice of characters\nand it otherwise chooses a character from `chars` with uniform probability. ","docLink":"./Plausible/Arbitrary.html#Plausible.Char.arbitraryFromList","kind":"def","line":122,"name":"Plausible.Char.arbitraryFromList","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L122-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Bool.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Bool</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Bool.Arbitrary","kind":"instance","line":119,"name":"Plausible.Bool.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L119-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Int.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Int</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Int.Arbitrary","kind":"instance","line":115,"name":"Plausible.Int.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L115-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.USize.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">USize</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.USize.Arbitrary","kind":"instance","line":110,"name":"Plausible.USize.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L110-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.UInt64.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt64</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.UInt64.Arbitrary","kind":"instance","line":105,"name":"Plausible.UInt64.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L105-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.UInt32.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt32</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.UInt32.Arbitrary","kind":"instance","line":100,"name":"Plausible.UInt32.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L100-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.UInt16.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt16</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.UInt16.Arbitrary","kind":"instance","line":95,"name":"Plausible.UInt16.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L95-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.UInt8.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">UInt8</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.UInt8.Arbitrary","kind":"instance","line":90,"name":"Plausible.UInt8.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L90-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.BitVec.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">BitVec</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.BitVec.Arbitrary","kind":"instance","line":85,"name":"Plausible.BitVec.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L85-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Fin.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Fin</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Fin.Arbitrary","kind":"instance","line":80,"name":"Plausible.Fin.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L80-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Nat.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Nat</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Nat.Arbitrary","kind":"instance","line":76,"name":"Plausible.Nat.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L76-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Sigma.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Sigma</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">((_ : <span class=\"fn\">α</span>) × <span class=\"fn\">β</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Sigma.Arbitrary","kind":"instance","line":71,"name":"Plausible.Sigma.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L71-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Unit.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Unit</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Unit.Arbitrary","kind":"instance","line":69,"name":"Plausible.Unit.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Sum.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Sum</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Plausible.Arbitrary</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Sum.Arbitrary","kind":"instance","line":63,"name":"Plausible.Sum.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L63-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary.runArbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Arbitrary</span>.<span class=\"name\">runArbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">size</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Samples from the generator associated with the `Arbitrary` instance for a type,\nusing `size` as the size parameter for the generator.\nTo invoke this function, you will need to specify what type `α` is,\nfor example by doing `runArbitrary (α := Nat) 10`. ","docLink":"./Plausible/Arbitrary.html#Plausible.Arbitrary.runArbitrary","kind":"def","line":50,"name":"Plausible.Arbitrary.runArbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L50-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary.arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Arbitrary</span>.<span class=\"name\">arbitrary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"A random generator for values of the given type. ","docLink":"./Plausible/Arbitrary.html#Plausible.Arbitrary.arbitrary","kind":"def","line":45,"name":"Plausible.Arbitrary.arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary.mk\"><span class=\"name\">Plausible</span>.<span class=\"name\">Arbitrary</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arbitrary</span> : <span class=\"fn\"><a href=\"./Plausible/Gen.html#Plausible.Gen\">Gen</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\">Arbitrary</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Plausible/Arbitrary.html#Plausible.Arbitrary.mk","kind":"ctor","line":43,"name":"Plausible.Arbitrary.mk","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Plausible/Arbitrary.html#Plausible.Arbitrary\"><span class=\"name\">Plausible</span>.<span class=\"name\">Arbitrary</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"The `Arbitrary` typeclass represents types for which there exists a\nrandom generator suitable for property-based testing.\n- This is the equivalent of Haskell QuickCheck's `Arbitrary` typeclass.\n- In QuickChick, this typeclass is called `Gen`, but `Gen` is already\na reserved keyword in Plausible, so we call this typeclass `Arbitrary`\nfollowing the Haskell QuickCheck convention). ","docLink":"./Plausible/Arbitrary.html#Plausible.Arbitrary","kind":"class","line":37,"name":"Plausible.Arbitrary","sourceLink":"https://github.com/leanprover-community/plausible/blob/9f492660e9837df43fd885a2ad05c520da9ff9f5/Plausible/Arbitrary.lean#L37-L45"}}],"imports":["Init","Plausible.Gen"],"instances":[{"className":"Plausible.Arbitrary","name":"Plausible.Sum.Arbitrary","typeNames":["Sum"]},{"className":"Plausible.Arbitrary","name":"Plausible.Unit.Arbitrary","typeNames":["Unit"]},{"className":"Plausible.Arbitrary","name":"Plausible.Sigma.Arbitrary","typeNames":["Sigma"]},{"className":"Plausible.Arbitrary","name":"Plausible.Nat.Arbitrary","typeNames":["Nat"]},{"className":"Plausible.Arbitrary","name":"Plausible.Fin.Arbitrary","typeNames":["Fin"]},{"className":"Plausible.Arbitrary","name":"Plausible.BitVec.Arbitrary","typeNames":["BitVec"]},{"className":"Plausible.Arbitrary","name":"Plausible.UInt8.Arbitrary","typeNames":["UInt8"]},{"className":"Plausible.Arbitrary","name":"Plausible.UInt16.Arbitrary","typeNames":["UInt16"]},{"className":"Plausible.Arbitrary","name":"Plausible.UInt32.Arbitrary","typeNames":["UInt32"]},{"className":"Plausible.Arbitrary","name":"Plausible.UInt64.Arbitrary","typeNames":["UInt64"]},{"className":"Plausible.Arbitrary","name":"Plausible.USize.Arbitrary","typeNames":["USize"]},{"className":"Plausible.Arbitrary","name":"Plausible.Int.Arbitrary","typeNames":["Int"]},{"className":"Plausible.Arbitrary","name":"Plausible.Bool.Arbitrary","typeNames":["Bool"]},{"className":"Plausible.Arbitrary","name":"Plausible.Char.arbitraryDefaultInstance","typeNames":["Char"]},{"className":"Plausible.Arbitrary","name":"Plausible.Option.Arbitrary","typeNames":["Option"]},{"className":"Plausible.Arbitrary","name":"Plausible.Prod.Arbitrary","typeNames":["Prod"]},{"className":"Plausible.Arbitrary","name":"Plausible.List.Arbitrary","typeNames":["List"]},{"className":"Plausible.Arbitrary","name":"Plausible.ULift.Arbitrary","typeNames":["ULift"]},{"className":"Plausible.Arbitrary","name":"Plausible.String.Arbitrary","typeNames":["String"]},{"className":"Plausible.Arbitrary","name":"Plausible.Array.Arbitrary","typeNames":["Array"]}],"name":"Plausible.Arbitrary"}