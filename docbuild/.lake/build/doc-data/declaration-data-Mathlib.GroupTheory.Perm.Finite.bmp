{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_closure_of_disjoint_support\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">disjoint_closure_of_disjoint_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">T</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">T</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_closure_of_disjoint_support","kind":"theorem","line":290,"name":"Equiv.Perm.disjoint_closure_of_disjoint_support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L290-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_support_closure_of_disjoint_support\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">disjoint_support_closure_of_disjoint_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">T</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span> → <span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">T</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_support_closure_of_disjoint_support","kind":"theorem","line":280,"name":"Equiv.Perm.disjoint_support_closure_of_disjoint_support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L280-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.support_closure_subset_union\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">support_closure_subset_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">S</span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ <span class=\"fn\">b</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.support_closure_subset_union","kind":"theorem","line":269,"name":"Equiv.Perm.support_closure_subset_union","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L269-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_of_disjoint_support\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">disjoint_of_disjoint_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H </span><span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\">H</span>, <span class=\"fn\">∀ <span class=\"fn\">b</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\">H</span> <span class=\"fn\">K</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_of_disjoint_support","kind":"theorem","line":261,"name":"Equiv.Perm.disjoint_of_disjoint_support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L261-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.ofSubtype_support_disjoint\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">ofSubtype_support_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">σ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.ofSubtype\">ofSubtype</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.ofSubtype_support_disjoint","kind":"theorem","line":252,"name":"Equiv.Perm.ofSubtype_support_disjoint","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L252-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.support_pow_coprime\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">support_pow_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">σ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>).<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.support_pow_coprime","kind":"theorem","line":245,"name":"Equiv.Perm.support_pow_coprime","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L245-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_ofSubtype_of_memFixedPoints_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">disjoint_ofSubtype_of_memFixedPoints_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.ofSubtype\">ofSubtype</a> <span class=\"fn\">u</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.disjoint_ofSubtype_of_memFixedPoints_self","kind":"theorem","line":232,"name":"Equiv.Perm.disjoint_ofSubtype_of_memFixedPoints_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L232-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.mem_fixedPoints_iff_apply_mem_of_mem_centralizer\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_fixedPoints_iff_apply_mem_of_mem_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Centralizer.html#Subgroup.centralizer\">Subgroup.centralizer</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">g</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></div></div>","info":{"doc":"**Alias** of `Equiv.Perm.apply_mem_fixedPoints_iff_mem_of_mem_centralizer`.","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.mem_fixedPoints_iff_apply_mem_of_mem_centralizer","kind":"theorem","line":224,"name":"Equiv.Perm.mem_fixedPoints_iff_apply_mem_of_mem_centralizer","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L224-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.apply_mem_fixedPoints_iff_mem_of_mem_centralizer\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">apply_mem_fixedPoints_iff_mem_of_mem_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Centralizer.html#Subgroup.centralizer\">Subgroup.centralizer</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">g</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.apply_mem_fixedPoints_iff_mem_of_mem_centralizer","kind":"theorem","line":217,"name":"Equiv.Perm.apply_mem_fixedPoints_iff_mem_of_mem_centralizer","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L217-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.Disjoint.isConj_mul\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">Disjoint</span>.<span class=\"name\">isConj_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">τ </span><span class=\"fn\">π </span><span class=\"fn\">ρ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc1</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">σ</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc2</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">τ</span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd1</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd2</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">ρ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> (<span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">τ</span>) (<span class=\"fn\">π</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ρ</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.Disjoint.isConj_mul","kind":"theorem","line":171,"name":"Equiv.Perm.Disjoint.isConj_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L171-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.Disjoint.extendDomain\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">Disjoint</span>.<span class=\"name\">extendDomain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Subtype\">Subtype</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">τ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.Perm.extendDomain\">extendDomain</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">τ</span>.<a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.Perm.extendDomain\">extendDomain</a></span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.Disjoint.extendDomain","kind":"theorem","line":161,"name":"Equiv.Perm.Disjoint.extendDomain","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L161-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.Disjoint.orderOf\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">Disjoint</span>.<span class=\"name\">orderOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">τ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hστ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">τ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">_root_.orderOf</a> (<span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">τ</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">_root_.orderOf</a> <span class=\"fn\">σ</span>)</span>.<a href=\"./Init/Data/Nat/Lcm.html#Nat.lcm\">lcm</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">_root_.orderOf</a> <span class=\"fn\">τ</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.Disjoint.orderOf","kind":"theorem","line":152,"name":"Equiv.Perm.Disjoint.orderOf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L152-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.mem_sumCongrHom_range_of_perm_mapsTo_inl\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_sumCongrHom_range_of_perm_mapsTo_inl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> (<span class=\"fn\">m</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">n</span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">σ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sumCongrHom\">sumCongrHom</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.mem_sumCongrHom_range_of_perm_mapsTo_inl","kind":"theorem","line":119,"name":"Equiv.Perm.mem_sumCongrHom_range_of_perm_mapsTo_inl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L119-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_mapsTo_inl_iff_mapsTo_inr\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">perm_mapsTo_inl_iff_mapsTo_inr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> (<span class=\"fn\">m</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">n</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">σ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">σ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_mapsTo_inl_iff_mapsTo_inr","kind":"theorem","line":99,"name":"Equiv.Perm.perm_mapsTo_inl_iff_mapsTo_inr","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L99-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype_one\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subtypePermOfFintype_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">1</span> <span class=\"fn\">x</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype\">subtypePermOfFintype</a> <span class=\"fn\">1</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype_one","kind":"theorem","line":95,"name":"Equiv.Perm.subtypePermOfFintype_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L95-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subtypePermOfFintype_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype\">subtypePermOfFintype</a></span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype_apply","kind":"theorem","line":90,"name":"Equiv.Perm.subtypePermOfFintype_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L90-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subtypePermOfFintype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>","info":{"doc":"If the permutation `f` maps `{x // p x}` into itself, then this returns the permutation\non `{x // p x}` induced by `f`. Note that the `h` hypothesis is weaker than for\n`Equiv.Perm.subtypePerm`. ","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.subtypePermOfFintype","kind":"def","line":83,"name":"Equiv.Perm.subtypePermOfFintype","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L83-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_on_of_perm_on_finite\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">perm_inv_on_of_perm_on_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_on_of_perm_on_finite","kind":"theorem","line":78,"name":"Equiv.Perm.perm_inv_on_of_perm_on_finite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L78-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_mapsTo_iff_mapsTo\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">perm_inv_mapsTo_iff_mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <span class=\"fn\">s</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_mapsTo_iff_mapsTo","kind":"theorem","line":73,"name":"Equiv.Perm.perm_inv_mapsTo_iff_mapsTo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L73-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_mapsTo_of_mapsTo\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">perm_inv_mapsTo_of_mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <span class=\"fn\">s</span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_mapsTo_of_mapsTo","kind":"theorem","line":64,"name":"Equiv.Perm.perm_inv_mapsTo_of_mapsTo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L64-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_on_of_perm_on_finset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">perm_inv_on_of_perm_on_finset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.perm_inv_on_of_perm_on_finset","kind":"theorem","line":54,"name":"Equiv.Perm.perm_inv_on_of_perm_on_finset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L54-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.isConj_of_support_equiv\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isConj_of_support_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ </span><span class=\"fn\">τ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">τ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\"><span class=\"fn\">σ</span> <span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">τ</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype.mk\">⟨</a><span class=\"fn\">x</span>, <span class=\"fn\">hx</span><a href=\"./Init/Prelude.html#Subtype.mk\">⟩</a>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Finite.html#Equiv.Perm.isConj_of_support_equiv","kind":"theorem","line":35,"name":"Equiv.Perm.isConj_of_support_equiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Finite.lean#L35-L48"}}],"imports":["Init","Mathlib.Data.Finite.Sum","Mathlib.GroupTheory.OrderOfElement","Mathlib.GroupTheory.Perm.Support","Mathlib.Logic.Equiv.Fintype"],"instances":[],"name":"Mathlib.GroupTheory.Perm.Finite"}