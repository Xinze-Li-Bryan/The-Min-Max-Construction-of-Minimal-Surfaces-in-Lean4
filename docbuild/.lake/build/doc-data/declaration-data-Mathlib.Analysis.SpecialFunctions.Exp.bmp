{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#HasSum.cexp\"><span class=\"name\">HasSum</span>.<span class=\"name\">cexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#HasSum\">HasSum</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#HasProd\">HasProd</a> (<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">a</span>)</span></span></div></div>","info":{"doc":"If `f` has sum `a`, then `exp ∘ f` has product `exp a`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#HasSum.cexp","kind":"theorem","line":484,"name":"HasSum.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L484-L486"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_comap_re_atBot_nhdsNE\"><span class=\"name\">Complex</span>.<span class=\"name\">tendsto_exp_comap_re_atBot_nhdsNE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_comap_re_atBot_nhdsNE","kind":"theorem","line":478,"name":"Complex.tendsto_exp_comap_re_atBot_nhdsNE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L478-L479"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_comap_re_atBot\"><span class=\"name\">Complex</span>.<span class=\"name\">tendsto_exp_comap_re_atBot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"`Complex.exp z → 0` as `Complex.re z → -∞`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_comap_re_atBot","kind":"theorem","line":474,"name":"Complex.tendsto_exp_comap_re_atBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L474-L476"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_comap_re_atTop\"><span class=\"name\">Complex</span>.<span class=\"name\">tendsto_exp_comap_re_atTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span></div></div>","info":{"doc":"`‖Complex.exp z‖ → ∞` as `Complex.re z → ∞`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_comap_re_atTop","kind":"theorem","line":470,"name":"Complex.tendsto_exp_comap_re_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L470-L472"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_nhds_zero_iff\"><span class=\"name\">Complex</span>.<span class=\"name\">tendsto_exp_nhds_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.tendsto_exp_nhds_zero_iff","kind":"theorem","line":465,"name":"Complex.tendsto_exp_nhds_zero_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L465-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.comap_exp_nhdsNE\"><span class=\"name\">Complex</span>.<span class=\"name\">comap_exp_nhdsNE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.comap_exp_nhdsNE","kind":"theorem","line":461,"name":"Complex.comap_exp_nhdsNE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L461-L463"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.comap_exp_nhds_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">comap_exp_nhds_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.comap_exp_nhds_zero","kind":"theorem","line":453,"name":"Complex.comap_exp_nhds_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L453-L459"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.comap_exp_cobounded\"><span class=\"name\">Complex</span>.<span class=\"name\">comap_exp_cobounded</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.comap_exp_cobounded","kind":"theorem","line":446,"name":"Complex.comap_exp_cobounded","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L446-L451"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#HasSum.rexp\"><span class=\"name\">HasSum</span>.<span class=\"name\">rexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#HasSum\">HasSum</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#HasProd\">HasProd</a> (<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">a</span>)</span></span></div></div>","info":{"doc":"If `f` has sum `a`, then `exp ∘ f` has product `exp a`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#HasSum.rexp","kind":"theorem","line":440,"name":"HasSum.rexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L440-L442"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_pow_mul_exp_neg_nat_mul\"><span class=\"name\">Real</span>.<span class=\"name\">summable_pow_mul_exp_neg_nat_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_pow_mul_exp_neg_nat_mul","kind":"theorem","line":431,"name":"Real.summable_pow_mul_exp_neg_nat_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L431-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_exp_nat_mul_of_ge\"><span class=\"name\">Real</span>.<span class=\"name\">summable_exp_nat_mul_of_ge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_exp_nat_mul_of_ge","kind":"theorem","line":424,"name":"Real.summable_exp_nat_mul_of_ge","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L424-L429"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_exp_neg_nat\"><span class=\"name\">Real</span>.<span class=\"name\">summable_exp_neg_nat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_exp_neg_nat","kind":"theorem","line":421,"name":"Real.summable_exp_neg_nat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L421-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_exp_nat_mul_iff\"><span class=\"name\">Real</span>.<span class=\"name\">summable_exp_nat_mul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>)</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.summable_exp_nat_mul_iff","kind":"theorem","line":416,"name":"Real.summable_exp_nat_mul_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L416-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isTheta_exp_comp_one\"><span class=\"name\">Real</span>.<span class=\"name\">isTheta_exp_comp_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Theta.html#Asymptotics.IsTheta\">=Θ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Theta.html#Asymptotics.IsTheta\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">1</span></span>) <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span></span></div></div>","info":{"doc":"`Real.exp (f x)` is bounded away from zero and infinity along a filter `l` if and only if\n`|f x|` is bounded from above along this filter. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isTheta_exp_comp_one","kind":"theorem","line":409,"name":"Real.isTheta_exp_comp_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L409-L414"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBigO_exp_comp_one\"><span class=\"name\">Real</span>.<span class=\"name\">isBigO_exp_comp_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">1</span></span>) <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"`Real.exp (f x)` is bounded away from zero along a filter if and only if this filter is bounded\nfrom below under `f`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBigO_exp_comp_one","kind":"theorem","line":403,"name":"Real.isBigO_exp_comp_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L403-L407"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBigO_one_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isBigO_one_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"`Real.exp (f x)` is bounded away from zero along a filter if and only if this filter is bounded\nfrom below under `f`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBigO_one_exp_comp","kind":"theorem","line":396,"name":"Real.isBigO_one_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L396-L401"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isLittleO_one_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isLittleO_one_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isLittleO_one_exp_comp","kind":"theorem","line":392,"name":"Real.isLittleO_one_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L392-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isLittleO_exp_comp_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isLittleO_exp_comp_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isLittleO_exp_comp_exp_comp","kind":"theorem","line":386,"name":"Real.isLittleO_exp_comp_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L386-L390"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isTheta_exp_comp_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isTheta_exp_comp_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Theta.html#Asymptotics.IsTheta\">=Θ[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Theta.html#Asymptotics.IsTheta\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isTheta_exp_comp_exp_comp","kind":"theorem","line":379,"name":"Real.isTheta_exp_comp_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L379-L384"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBigO_exp_comp_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isBigO_exp_comp_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBigO_exp_comp_exp_comp","kind":"theorem","line":373,"name":"Real.isBigO_exp_comp_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L373-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isLittleO_pow_exp_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">isLittleO_pow_exp_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isLittleO_pow_exp_atTop","kind":"theorem","line":369,"name":"Real.isLittleO_pow_exp_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L369-L371"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_nhds_exp\"><span class=\"name\">Real</span>.<span class=\"name\">comap_exp_nhds_exp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_nhds_exp","kind":"theorem","line":365,"name":"Real.comap_exp_nhds_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L365-L367"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.map_exp_nhds\"><span class=\"name\">Real</span>.<span class=\"name\">map_exp_nhds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.map_exp_nhds","kind":"theorem","line":361,"name":"Real.map_exp_nhds","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L361-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isOpenEmbedding_exp\"><span class=\"name\">Real</span>.<span class=\"name\">isOpenEmbedding_exp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsOpenEmbedding\">Topology.IsOpenEmbedding</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isOpenEmbedding_exp","kind":"theorem","line":358,"name":"Real.isOpenEmbedding_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L358-L359"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_comp_nhds_zero\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_comp_nhds_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_comp_nhds_zero","kind":"theorem","line":353,"name":"Real.tendsto_exp_comp_nhds_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L353-L356"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_nhds_zero\"><span class=\"name\">Real</span>.<span class=\"name\">comap_exp_nhds_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_nhds_zero","kind":"theorem","line":349,"name":"Real.comap_exp_nhds_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L349-L351"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_comp_exp_atBot\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_comp_exp_atBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span>)</span> <span class=\"fn\">l</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_comp_exp_atBot","kind":"theorem","line":344,"name":"Real.tendsto_comp_exp_atBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L344-L347"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_nhdsGT_zero\"><span class=\"name\">Real</span>.<span class=\"name\">comap_exp_nhdsGT_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_nhdsGT_zero","kind":"theorem","line":340,"name":"Real.comap_exp_nhdsGT_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L340-L342"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.map_exp_atBot\"><span class=\"name\">Real</span>.<span class=\"name\">map_exp_atBot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.map_exp_atBot","kind":"theorem","line":336,"name":"Real.map_exp_atBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L336-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_comp_exp_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_comp_exp_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span>)</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">l</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_comp_exp_atTop","kind":"theorem","line":332,"name":"Real.tendsto_comp_exp_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L332-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_comp_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_comp_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_comp_atTop","kind":"theorem","line":327,"name":"Real.tendsto_exp_comp_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L327-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">comap_exp_atTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.comap_exp_atTop","kind":"theorem","line":323,"name":"Real.comap_exp_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L323-L325"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.map_exp_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">map_exp_atTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.map_exp_atTop","kind":"theorem","line":319,"name":"Real.map_exp_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L319-L321"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.range_exp\"><span class=\"name\">Real</span>.<span class=\"name\">range_exp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.range_exp","kind":"theorem","line":315,"name":"Real.range_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L315-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.coe_comp_expOrderIso\"><span class=\"name\">Real</span>.<span class=\"name\">coe_comp_expOrderIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.expOrderIso\">expOrderIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.coe_comp_expOrderIso","kind":"theorem","line":311,"name":"Real.coe_comp_expOrderIso","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L311-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.coe_expOrderIso_apply\"><span class=\"name\">Real</span>.<span class=\"name\">coe_expOrderIso_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.expOrderIso\">expOrderIso</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.coe_expOrderIso_apply","kind":"theorem","line":307,"name":"Real.coe_expOrderIso_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L307-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.expOrderIso\"><span class=\"name\">Real</span>.<span class=\"name\">expOrderIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"`Real.exp` as an order isomorphism between `ℝ` and `(0, +∞)`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.expOrderIso","kind":"def","line":300,"name":"Real.expOrderIso","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L300-L305"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_div_pow_mul_exp_add_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_div_pow_mul_exp_add_atTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>))</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"The function `(x ^ n) / (b * exp x + c)` tends to `0` at `+∞`, for any natural number\n`n` and any real numbers `b` and `c` such that `b` is nonzero. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_div_pow_mul_exp_add_atTop","kind":"theorem","line":283,"name":"Real.tendsto_div_pow_mul_exp_add_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L283-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_mul_exp_add_div_pow_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_mul_exp_add_div_pow_atTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"The function `(b * exp x + c) / (x ^ n)` tends to `+∞` at `+∞`, for any natural number\n`n` and any real numbers `b` and `c` such that `b` is positive. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_mul_exp_add_div_pow_atTop","kind":"theorem","line":271,"name":"Real.tendsto_mul_exp_add_div_pow_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L271-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_pow_mul_exp_neg_atTop_nhds_zero\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_pow_mul_exp_neg_atTop_nhds_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"The function `x^n * exp(-x)` tends to `0` at `+∞`, for any natural number `n`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_pow_mul_exp_neg_atTop_nhds_zero","kind":"theorem","line":265,"name":"Real.tendsto_pow_mul_exp_neg_atTop_nhds_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L265-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_div_pow_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_div_pow_atTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"The function `exp(x)/x^n` tends to `+∞` at `+∞`, for any natural number `n` ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_div_pow_atTop","kind":"theorem","line":245,"name":"Real.tendsto_exp_div_pow_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L245-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBoundedUnder_le_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isBoundedUnder_le_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBoundedUnder_le_exp_comp","kind":"theorem","line":240,"name":"Real.isBoundedUnder_le_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L240-L243"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBoundedUnder_ge_exp_comp\"><span class=\"name\">Real</span>.<span class=\"name\">isBoundedUnder_ge_exp_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.isBoundedUnder_ge_exp_comp","kind":"theorem","line":235,"name":"Real.isBoundedUnder_ge_exp_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L235-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_atBot_nhdsGT\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_atBot_nhdsGT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_atBot_nhdsGT","kind":"theorem","line":232,"name":"Real.tendsto_exp_atBot_nhdsGT","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L232-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_atBot\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_atBot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atBot\">Filter.atBot</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_atBot","kind":"theorem","line":228,"name":"Real.tendsto_exp_atBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L228-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_nhds_zero_nhds_one\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_nhds_zero_nhds_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span>)</span></span></div></div>","info":{"doc":"The real exponential function tends to `1` at `0`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_nhds_zero_nhds_one","kind":"theorem","line":223,"name":"Real.tendsto_exp_nhds_zero_nhds_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L223-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_neg_atTop_nhds_zero\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_neg_atTop_nhds_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"The real exponential function tends to `0` at `-∞` or, equivalently, `exp(-x)` tends to `0`\nat `+∞` ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_neg_atTop_nhds_zero","kind":"theorem","line":218,"name":"Real.tendsto_exp_neg_atTop_nhds_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L218-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_atTop\"><span class=\"name\">Real</span>.<span class=\"name\">tendsto_exp_atTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>","info":{"doc":"The real exponential function tends to `+∞` at `+∞`. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.tendsto_exp_atTop","kind":"theorem","line":211,"name":"Real.tendsto_exp_atTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L211-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.exp_half\"><span class=\"name\">Real</span>.<span class=\"name\">exp_half</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">√</a><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.exp_half","kind":"theorem","line":208,"name":"Real.exp_half","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L208-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Continuous.rexp\"><span class=\"name\">Continuous</span>.<span class=\"name\">rexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Continuous.rexp","kind":"theorem","line":199,"name":"Continuous.rexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L199-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousOn.rexp\"><span class=\"name\">ContinuousOn</span>.<span class=\"name\">rexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span>)</span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousOn.rexp","kind":"theorem","line":195,"name":"ContinuousOn.rexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L195-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousAt.rexp\"><span class=\"name\">ContinuousAt</span>.<span class=\"name\">rexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span>)</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousAt.rexp","kind":"theorem","line":191,"name":"ContinuousAt.rexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L191-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousWithinAt.rexp\"><span class=\"name\">ContinuousWithinAt</span>.<span class=\"name\">rexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousWithinAt.rexp","kind":"theorem","line":187,"name":"ContinuousWithinAt.rexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L187-L190"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Filter.Tendsto.rexp\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">rexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">z</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">z</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Filter.Tendsto.rexp","kind":"theorem","line":181,"name":"Filter.Tendsto.rexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L181-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.exp_sub_sum_range_succ_isLittleO_pow\"><span class=\"name\">Real</span>.<span class=\"name\">exp_sub_sum_range_succ_isLittleO_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.exp_sub_sum_range_succ_isLittleO_pow","kind":"theorem","line":169,"name":"Real.exp_sub_sum_range_succ_isLittleO_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L169-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.exp_sub_sum_range_isBigO_pow\"><span class=\"name\">Real</span>.<span class=\"name\">exp_sub_sum_range_isBigO_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.exp_sub_sum_range_isBigO_pow","kind":"theorem","line":162,"name":"Real.exp_sub_sum_range_isBigO_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L162-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.continuousOn_exp\"><span class=\"name\">Real</span>.<span class=\"name\">continuousOn_exp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.continuousOn_exp","kind":"theorem","line":159,"name":"Real.continuousOn_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L159-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.continuous_exp\"><span class=\"name\">Real</span>.<span class=\"name\">continuous_exp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Real.exp\">exp</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Real.continuous_exp","kind":"theorem","line":155,"name":"Real.continuous_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L155-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#UniformContinuousOn.cexp\"><span class=\"name\">UniformContinuousOn</span>.<span class=\"name\">cexp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuousOn\">UniformContinuousOn</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>","info":{"doc":"The complex exponential function is uniformly continuous on left half planes. ","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#UniformContinuousOn.cexp","kind":"theorem","line":121,"name":"UniformContinuousOn.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L121-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Continuous.cexp\"><span class=\"name\">Continuous</span>.<span class=\"name\">cexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Continuous.cexp","kind":"theorem","line":117,"name":"Continuous.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L117-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousOn.cexp\"><span class=\"name\">ContinuousOn</span>.<span class=\"name\">cexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span>)</span> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousOn.cexp","kind":"theorem","line":113,"name":"ContinuousOn.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L113-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousAt.cexp\"><span class=\"name\">ContinuousAt</span>.<span class=\"name\">cexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span>)</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousAt.cexp","kind":"theorem","line":108,"name":"ContinuousAt.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L108-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousWithinAt.cexp\"><span class=\"name\">ContinuousWithinAt</span>.<span class=\"name\">cexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#ContinuousWithinAt.cexp","kind":"theorem","line":103,"name":"ContinuousWithinAt.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L103-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Filter.Tendsto.cexp\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">cexp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">z</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">Complex.exp</a> <span class=\"fn\">z</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Filter.Tendsto.cexp","kind":"theorem","line":97,"name":"Filter.Tendsto.cexp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L97-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.exp_sub_sum_range_succ_isLittleO_pow\"><span class=\"name\">Complex</span>.<span class=\"name\">exp_sub_sum_range_succ_isLittleO_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.exp_sub_sum_range_succ_isLittleO_pow","kind":"theorem","line":85,"name":"Complex.exp_sub_sum_range_succ_isLittleO_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L85-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.exp_sub_sum_range_isBigO_pow\"><span class=\"name\">Complex</span>.<span class=\"name\">exp_sub_sum_range_isBigO_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.exp_sub_sum_range_isBigO_pow","kind":"theorem","line":75,"name":"Complex.exp_sub_sum_range_isBigO_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L75-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.continuousOn_exp\"><span class=\"name\">Complex</span>.<span class=\"name\">continuousOn_exp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">s</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.continuousOn_exp","kind":"theorem","line":72,"name":"Complex.continuousOn_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L72-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.continuous_exp\"><span class=\"name\">Complex</span>.<span class=\"name\">continuous_exp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.continuous_exp","kind":"theorem","line":63,"name":"Complex.continuous_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L63-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.locally_lipschitz_exp\"><span class=\"name\">Complex</span>.<span class=\"name\">locally_lipschitz_exp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr_nonneg</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr_le</span> : <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyx</span> : <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.locally_lipschitz_exp","kind":"theorem","line":43,"name":"Complex.locally_lipschitz_exp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L43-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.exp_bound_sq\"><span class=\"name\">Complex</span>.<span class=\"name\">exp_bound_sq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Exponential.html#Complex.exp\">exp</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">z</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Analysis/SpecialFunctions/Exp.html#Complex.exp_bound_sq","kind":"theorem","line":32,"name":"Complex.exp_bound_sq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Analysis/SpecialFunctions/Exp.lean#L32-L41"}}],"imports":["Init","Mathlib.Analysis.Complex.Asymptotics","Mathlib.Analysis.Complex.Trigonometric","Mathlib.Analysis.SpecificLimits.Normed","Mathlib.Topology.Algebra.MetricSpace.Lipschitz"],"instances":[],"name":"Mathlib.Analysis.SpecialFunctions.Exp"}