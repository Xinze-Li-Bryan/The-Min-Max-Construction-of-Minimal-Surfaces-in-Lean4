{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_add\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_add","kind":"theorem","line":140,"name":"FreeAbelianGroup.support_add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L140-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_nsmul\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_nsmul","kind":"theorem","line":133,"name":"FreeAbelianGroup.support_nsmul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L133-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zsmul\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zsmul","kind":"theorem","line":126,"name":"FreeAbelianGroup.support_zsmul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L126-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_neg\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_neg","kind":"theorem","line":122,"name":"FreeAbelianGroup.support_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L122-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_of\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">of</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_of","kind":"theorem","line":118,"name":"FreeAbelianGroup.support_of","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L118-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zero\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zero","kind":"theorem","line":114,"name":"FreeAbelianGroup.support_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L114-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.not_mem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">not_mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\">coeff</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"**Alias** of `FreeAbelianGroup.notMem_support_iff`.","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.not_mem_support_iff","kind":"theorem","line":112,"name":"FreeAbelianGroup.not_mem_support_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.notMem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">notMem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\">coeff</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.notMem_support_iff","kind":"theorem","line":108,"name":"FreeAbelianGroup.notMem_support_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L108-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.mem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\">coeff</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.mem_support_iff","kind":"theorem","line":104,"name":"FreeAbelianGroup.mem_support_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L104-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"`support a` for `a : FreeAbelianGroup X` is the finite set of `x : X`\nthat occur in the formal sum `a`. ","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support","kind":"def","line":99,"name":"FreeAbelianGroup.support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L99-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>","info":{"doc":"`coeff x` is the additive group homomorphism `FreeAbelianGroup X →+ ℤ`\nthat sends `a` to the multiplicity of `x : X` in `a`. ","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff","kind":"def","line":94,"name":"FreeAbelianGroup.coeff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L94-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_apply\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp\">equivFinsupp</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_apply","kind":"theorem","line":84,"name":"FreeAbelianGroup.equivFinsupp_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_symm_apply\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp\">equivFinsupp</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">Finsupp.toFreeAbelianGroup</a> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_symm_apply","kind":"theorem","line":84,"name":"FreeAbelianGroup.equivFinsupp_symm_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</div></div>","info":{"doc":"The additive equivalence between `FreeAbelianGroup X` and `(X →₀ ℤ)`. ","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp","kind":"def","line":83,"name":"FreeAbelianGroup.equivFinsupp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L83-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_toFreeAbelianGroup\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">Finsupp.toFreeAbelianGroup</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_toFreeAbelianGroup","kind":"theorem","line":76,"name":"FreeAbelianGroup.toFinsupp_toFreeAbelianGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L76-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_toFinsupp\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">FreeAbelianGroup.toFinsupp</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_toFinsupp","kind":"theorem","line":67,"name":"Finsupp.toFreeAbelianGroup_toFinsupp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L67-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_toFinsupp\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_comp_toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">FreeAbelianGroup.toFinsupp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_toFinsupp","kind":"theorem","line":59,"name":"Finsupp.toFreeAbelianGroup_comp_toFinsupp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L59-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_comp_toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">Finsupp.toFreeAbelianGroup</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup","kind":"theorem","line":51,"name":"FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L51-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_singleAddHom\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_comp_singleAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Finsupp.html#Finsupp.singleAddHom\">singleAddHom</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/End.html#smulAddHom\">smulAddHom</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Instances.html#AddMonoidHom.flip\">flip</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">FreeAbelianGroup.of</a> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_singleAddHom","kind":"theorem","line":45,"name":"Finsupp.toFreeAbelianGroup_comp_singleAddHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L45-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_single\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">single</a> <span class=\"fn\">x</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">FreeAbelianGroup.of</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_single","kind":"theorem","line":40,"name":"Finsupp.toFreeAbelianGroup_single","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_of\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">of</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_of","kind":"theorem","line":37,"name":"FreeAbelianGroup.toFinsupp_of","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"The group homomorphism `(X →₀ ℤ) →+ FreeAbelianGroup X`. ","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup","kind":"def","line":33,"name":"Finsupp.toFreeAbelianGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L33-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>","info":{"doc":"The group homomorphism `FreeAbelianGroup X →+ (X →₀ ℤ)`. ","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp","kind":"def","line":29,"name":"FreeAbelianGroup.toFinsupp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L29-L31"}}],"imports":["Init","Mathlib.Algebra.BigOperators.Finsupp.Basic","Mathlib.Algebra.Module.End","Mathlib.GroupTheory.FreeAbelianGroup"],"instances":[],"name":"Mathlib.Algebra.FreeAbelianGroup.Finsupp"}