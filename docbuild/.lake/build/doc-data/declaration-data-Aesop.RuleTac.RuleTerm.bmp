{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.ofElaboratedTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">ofElaboratedTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tm</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.ofElaboratedTerm","kind":"def","line":45,"name":"Aesop.ElabRuleTerm.ofElaboratedTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L45-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.toRuleTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">toRuleTerm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a> → <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.toRuleTerm","kind":"def","line":41,"name":"Aesop.ElabRuleTerm.toRuleTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L41-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.name\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.name","kind":"def","line":37,"name":"Aesop.ElabRuleTerm.name","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.scope\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">scope</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a> → <a href=\"./Aesop/Rule/Name.html#Aesop.ScopeName\">ScopeName</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.scope","kind":"def","line":33,"name":"Aesop.ElabRuleTerm.scope","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L33-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.expr\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.expr","kind":"def","line":29,"name":"Aesop.ElabRuleTerm.expr","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L29-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.instToMessageData\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">instToMessageData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.instToMessageData","kind":"instance","line":24,"name":"Aesop.ElabRuleTerm.instToMessageData","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L24-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedElabRuleTerm.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedElabRuleTerm</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedElabRuleTerm.default","kind":"def","line":20,"name":"Aesop.instInhabitedElabRuleTerm.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedElabRuleTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedElabRuleTerm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedElabRuleTerm","kind":"instance","line":20,"name":"Aesop.instInhabitedElabRuleTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.term\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">term</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">term</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.term","kind":"ctor","line":19,"name":"Aesop.ElabRuleTerm.term","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.const\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm.const","kind":"ctor","line":18,"name":"Aesop.ElabRuleTerm.const","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">ElabRuleTerm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm","kind":"inductive","line":17,"name":"Aesop.ElabRuleTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L17-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.instToMessageDataRuleTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToMessageDataRuleTerm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.instToMessageDataRuleTerm","kind":"instance","line":12,"name":"Aesop.instToMessageDataRuleTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L12-L15"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedRuleTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTerm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedRuleTerm","kind":"instance","line":10,"name":"Aesop.instInhabitedRuleTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L10-L10"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedRuleTerm.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTerm</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.instInhabitedRuleTerm.default","kind":"def","line":10,"name":"Aesop.instInhabitedRuleTerm.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L10-L10"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm.term\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTerm</span>.<span class=\"name\">term</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">term</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm.term","kind":"ctor","line":9,"name":"Aesop.RuleTerm.term","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L9-L9"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm.const\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTerm</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm.const","kind":"ctor","line":8,"name":"Aesop.RuleTerm.const","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L8-L8"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTerm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm","kind":"inductive","line":7,"name":"Aesop.RuleTerm","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/RuleTerm.lean#L7-L10"}}],"imports":["Init","Aesop.Rule.Name"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedRuleTerm","typeNames":["Aesop.RuleTerm"]},{"className":"Lean.ToMessageData","name":"Aesop.instToMessageDataRuleTerm","typeNames":["Aesop.RuleTerm"]},{"className":"Inhabited","name":"Aesop.instInhabitedElabRuleTerm","typeNames":["Aesop.ElabRuleTerm"]},{"className":"Lean.ToMessageData","name":"Aesop.ElabRuleTerm.instToMessageData","typeNames":["Aesop.ElabRuleTerm"]}],"name":"Aesop.RuleTac.RuleTerm"}