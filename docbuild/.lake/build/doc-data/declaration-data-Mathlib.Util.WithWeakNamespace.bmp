{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/WithWeakNamespace.html#Lean.Elab.Command.commandWith_weak_namespace__\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">commandWith_weak_namespace__</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Changes the current namespace without causing scoped things to go out of scope ","docLink":"./Mathlib/Util/WithWeakNamespace.html#Lean.Elab.Command.commandWith_weak_namespace__","kind":"def","line":37,"name":"Lean.Elab.Command.commandWith_weak_namespace__","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/WithWeakNamespace.lean#L37-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/WithWeakNamespace.html#Lean.Elab.Command.withWeakNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">withWeakNamespace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ns</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">CommandElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">CommandElabM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Changes the current namespace without causing scoped things to go out of scope ","docLink":"./Mathlib/Util/WithWeakNamespace.html#Lean.Elab.Command.withWeakNamespace","kind":"def","line":29,"name":"Lean.Elab.Command.withWeakNamespace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/WithWeakNamespace.lean#L29-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/WithWeakNamespace.html#Lean.Elab.Command.resolveNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">resolveNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ns</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>","info":{"doc":"Adds the name to the namespace, `_root_`-aware.\n```\nresolveNamespace `A `B.b == `A.B.b\nresolveNamespace `A `_root_.B.c == `B.c\n```\n","docLink":"./Mathlib/Util/WithWeakNamespace.html#Lean.Elab.Command.resolveNamespace","kind":"def","line":17,"name":"Lean.Elab.Command.resolveNamespace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Util/WithWeakNamespace.lean#L17-L27"}}],"imports":["Init","Mathlib.Init"],"instances":[],"name":"Mathlib.Util.WithWeakNamespace"}