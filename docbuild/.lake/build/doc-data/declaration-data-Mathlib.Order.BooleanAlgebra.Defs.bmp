{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#DistribLattice.booleanAlgebraOfComplemented\"><span class=\"name\">DistribLattice</span>.<span class=\"name\">booleanAlgebraOfComplemented</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#ComplementedLattice\">ComplementedLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"An alternative constructor for Boolean algebras:\na distributive lattice that is complemented is a Boolean algebra.\n\nThis is not an instance, because it creates data using choice.\n","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#DistribLattice.booleanAlgebraOfComplemented","kind":"def","line":153,"name":"DistribLattice.booleanAlgebraOfComplemented","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L153-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#PUnit.instBooleanAlgebra\"><span class=\"name\">PUnit</span>.<span class=\"name\">instBooleanAlgebra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_2 + 1}</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#PUnit.instBooleanAlgebra","kind":"instance","line":143,"name":"PUnit.instBooleanAlgebra","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L143-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.compl_eq_bnot\"><span class=\"name\">Bool</span>.<span class=\"name\">compl_eq_bnot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">compl</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.not\">not</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.compl_eq_bnot","kind":"theorem","line":139,"name":"Bool.compl_eq_bnot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L139-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.inf_eq_band\"><span class=\"name\">Bool</span>.<span class=\"name\">inf_eq_band</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.and\">and</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.inf_eq_band","kind":"theorem","line":137,"name":"Bool.inf_eq_band","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L137-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.sup_eq_bor\"><span class=\"name\">Bool</span>.<span class=\"name\">sup_eq_bor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.or\">or</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.sup_eq_bor","kind":"theorem","line":135,"name":"Bool.sup_eq_bor","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L135-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.instBooleanAlgebra\"><span class=\"name\">Bool</span>.<span class=\"name\">instBooleanAlgebra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#Bool.instBooleanAlgebra","kind":"instance","line":129,"name":"Bool.instBooleanAlgebra","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L129-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#Prop.instBooleanAlgebra\"><span class=\"name\">Prop</span>.<span class=\"name\">instBooleanAlgebra</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <a href=\"./foundational_types.html\">Prop</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#Prop.instBooleanAlgebra","kind":"instance","line":121,"name":"Prop.instBooleanAlgebra","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L121-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toBoundedOrder\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toBoundedOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toBoundedOrder","kind":"instance","line":118,"name":"BooleanAlgebra.toBoundedOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L118-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.himp_eq\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">himp_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#HImp.himp\">⇨</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> ⊔ <span class=\"fn\">x</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>","info":{"doc":"`x ⇨ y` is equal to `y ⊔ xᶜ` ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.himp_eq","kind":"theorem","line":115,"name":"BooleanAlgebra.himp_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L115-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.sdiff_eq\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">sdiff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>","info":{"doc":"`x \\ y` is equal to `x ⊓ yᶜ` ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.sdiff_eq","kind":"theorem","line":113,"name":"BooleanAlgebra.sdiff_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L113-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.bot_le\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">bot_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"`⊥` is the least element ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.bot_le","kind":"theorem","line":107,"name":"BooleanAlgebra.bot_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L107-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.le_top\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">le_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"`⊤` is the greatest element ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.le_top","kind":"theorem","line":105,"name":"BooleanAlgebra.le_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L105-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.top_le_sup_compl\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">top_le_sup_compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">x</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></div></div>","info":{"doc":"The supremum of `x` and `xᶜ` is at least `⊤` ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.top_le_sup_compl","kind":"theorem","line":103,"name":"BooleanAlgebra.top_le_sup_compl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L103-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.inf_compl_le_bot\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">inf_compl_le_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">x</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"The infimum of `x` and `xᶜ` is at most `⊥` ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.inf_compl_le_bot","kind":"theorem","line":101,"name":"BooleanAlgebra.inf_compl_le_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.mk\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toDistribLattice</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toHasCompl</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#HasCompl\">HasCompl</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toSDiff</span> : <span class=\"fn\"><a href=\"./Init/Core.html#SDiff\">SDiff</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toHImp</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#HImp\">HImp</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toTop</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toBot</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inf_compl_le_bot</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">x</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_le_sup_compl</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> ⊔ <span class=\"fn\">x</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">le_top</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_le</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sdiff_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>), <span class=\"fn\">x</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> ⊓ <span class=\"fn\">y</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span> := by aesop)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">himp_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>), <span class=\"fn\">x</span> <a href=\"./Mathlib/Order/Notation.html#HImp.himp\">⇨</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> ⊔ <span class=\"fn\">x</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span> := by aesop)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.mk","kind":"ctor","line":98,"name":"BooleanAlgebra.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toTop\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toTop","kind":"def","line":98,"name":"BooleanAlgebra.toTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toHImp\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toHImp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#HImp\">HImp</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toHImp","kind":"def","line":98,"name":"BooleanAlgebra.toHImp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toDistribLattice\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toDistribLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toDistribLattice","kind":"def","line":98,"name":"BooleanAlgebra.toDistribLattice","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toBot\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toBot","kind":"def","line":98,"name":"BooleanAlgebra.toBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toHasCompl\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toHasCompl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#HasCompl\">HasCompl</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toHasCompl","kind":"def","line":98,"name":"BooleanAlgebra.toHasCompl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toSDiff\"><span class=\"name\">BooleanAlgebra</span>.<span class=\"name\">toSDiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\">BooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#SDiff\">SDiff</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra.toSDiff","kind":"def","line":98,"name":"BooleanAlgebra.toSDiff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L98-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra\"><span class=\"name\">BooleanAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#HasCompl\">HasCompl</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Init/Core.html#SDiff\">SDiff</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#HImp\">HImp</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A Boolean algebra is a bounded distributive lattice with a complement operator `ᶜ` such that\n`x ⊓ xᶜ = ⊥` and `x ⊔ xᶜ = ⊤`. For convenience, it must also provide a set difference operation `\\`\nand a Heyting implication `⇨` satisfying `x \\ y = x ⊓ yᶜ` and `x ⇨ y = y ⊔ xᶜ`.\n\nThis is a generalization of (classical) logic of propositions, or the powerset lattice.\n\nSince `BoundedOrder`, `OrderBot`, and `OrderTop` are mixins that require `LE`\nto be present at define-time, the `extends` mechanism does not work with them.\nInstead, we extend using the underlying `Bot` and `Top` data typeclasses, and replicate the\norder axioms of those classes here. A \"forgetful\" instance back to `BoundedOrder` is provided.\n","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#BooleanAlgebra","kind":"class","line":87,"name":"BooleanAlgebra","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L87-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.inf_inf_sdiff\"><span class=\"name\">GeneralizedBooleanAlgebra</span>.<span class=\"name\">inf_inf_sdiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\">GeneralizedBooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> ⊓ <span class=\"fn\">b</span></span> ⊓ <span class=\"fn\">a</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"For any `a`, `b`, `(a ⊓ b) ⊓ (a / b) = ⊥` ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.inf_inf_sdiff","kind":"theorem","line":80,"name":"GeneralizedBooleanAlgebra.inf_inf_sdiff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.sup_inf_sdiff\"><span class=\"name\">GeneralizedBooleanAlgebra</span>.<span class=\"name\">sup_inf_sdiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\">GeneralizedBooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> ⊓ <span class=\"fn\">b</span></span> ⊔ <span class=\"fn\">a</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"For any `a`, `b`, `(a ⊓ b) ⊔ (a / b) = a` ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.sup_inf_sdiff","kind":"theorem","line":78,"name":"GeneralizedBooleanAlgebra.sup_inf_sdiff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.mk\"><span class=\"name\">GeneralizedBooleanAlgebra</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toDistribLattice</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toSDiff</span> : <span class=\"fn\"><a href=\"./Init/Core.html#SDiff\">SDiff</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toBot</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sup_inf_sdiff</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> ⊓ <span class=\"fn\">b</span></span> ⊔ <span class=\"fn\">a</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inf_inf_sdiff</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> ⊓ <span class=\"fn\">b</span></span> ⊓ <span class=\"fn\">a</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\">GeneralizedBooleanAlgebra</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.mk","kind":"ctor","line":76,"name":"GeneralizedBooleanAlgebra.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L76-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.toBot\"><span class=\"name\">GeneralizedBooleanAlgebra</span>.<span class=\"name\">toBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\">GeneralizedBooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.toBot","kind":"def","line":76,"name":"GeneralizedBooleanAlgebra.toBot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L76-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.toDistribLattice\"><span class=\"name\">GeneralizedBooleanAlgebra</span>.<span class=\"name\">toDistribLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\">GeneralizedBooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.toDistribLattice","kind":"def","line":76,"name":"GeneralizedBooleanAlgebra.toDistribLattice","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L76-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.toSDiff\"><span class=\"name\">GeneralizedBooleanAlgebra</span>.<span class=\"name\">toSDiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\">GeneralizedBooleanAlgebra</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#SDiff\">SDiff</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra.toSDiff","kind":"def","line":76,"name":"GeneralizedBooleanAlgebra.toSDiff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L76-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra\"><span class=\"name\">GeneralizedBooleanAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#DistribLattice\">DistribLattice</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Init/Core.html#SDiff\">SDiff</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A generalized Boolean algebra is a distributive lattice with `⊥` and a relative complement\noperation `\\` (called `sdiff`, after \"set difference\") satisfying `(a ⊓ b) ⊔ (a \\ b) = a` and\n`(a ⊓ b) ⊓ (a \\ b) = ⊥`, i.e. `a \\ b` is the complement of `b` in `a`.\n\nThis is a generalization of Boolean algebras which applies to `Finset α` for arbitrary\n(not-necessarily-`Fintype`) `α`. ","docLink":"./Mathlib/Order/BooleanAlgebra/Defs.html#GeneralizedBooleanAlgebra","kind":"class","line":70,"name":"GeneralizedBooleanAlgebra","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Order/BooleanAlgebra/Defs.lean#L70-L80"}}],"imports":["Init","Mathlib.Order.Heyting.Basic"],"instances":[{"className":"BoundedOrder","name":"BooleanAlgebra.toBoundedOrder","typeNames":[]},{"className":"BooleanAlgebra","name":"Prop.instBooleanAlgebra","typeNames":["_builtin_prop"]},{"className":"BooleanAlgebra","name":"Bool.instBooleanAlgebra","typeNames":["Bool"]},{"className":"BooleanAlgebra","name":"PUnit.instBooleanAlgebra","typeNames":["PUnit"]}],"name":"Mathlib.Order.BooleanAlgebra.Defs"}