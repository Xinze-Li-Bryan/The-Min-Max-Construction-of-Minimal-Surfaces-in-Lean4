{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.forward\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">forward</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDestruct</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder\">RuleBuilder</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.forward","kind":"def","line":140,"name":"Aesop.RuleBuilder.forward","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L140-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.forwardCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">forwardCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.PhaseSpec\">PhaseSpec</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDestruct</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/RuleSet/Member.html#Aesop.LocalRuleSetMember\">LocalRuleSetMember</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.forwardCore","kind":"def","line":116,"name":"Aesop.RuleBuilder.forwardCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L116-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.forwardCore₂\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">forwardCore₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.ElabRuleTerm\">ElabRuleTerm</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.PhaseSpec\">PhaseSpec</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDestruct</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Rule/Forward.html#Aesop.ForwardRule\">ForwardRule</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.forwardCore₂","kind":"def","line":87,"name":"Aesop.RuleBuilder.forwardCore₂","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L87-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getImmediatePremises.errPrefix\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">getImmediatePremises</span>.<span class=\"name\">errPrefix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getImmediatePremises.errPrefix","kind":"def","line":84,"name":"Aesop.RuleBuilder.getImmediatePremises.errPrefix","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L84-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getImmediatePremises.isPatternInstantiated\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">getImmediatePremises</span>.<span class=\"name\">isPatternInstantiated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getImmediatePremises.isPatternInstantiated","kind":"def","line":80,"name":"Aesop.RuleBuilder.getImmediatePremises.isPatternInstantiated","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getImmediatePremises\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">getImmediatePremises</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getImmediatePremises","kind":"def","line":42,"name":"Aesop.RuleBuilder.getImmediatePremises","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L42-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getForwardIndexingMode\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">getForwardIndexingMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilder.getForwardIndexingMode","kind":"def","line":26,"name":"Aesop.RuleBuilder.getForwardIndexingMode","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L26-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilderOptions.forwardIndexTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOptions</span>.<span class=\"name\">forwardIndexTransparency</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOptions\">RuleBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilderOptions.forwardIndexTransparency","kind":"def","line":19,"name":"Aesop.RuleBuilderOptions.forwardIndexTransparency","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L19-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Forward.html#Aesop.RuleBuilderOptions.forwardTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOptions</span>.<span class=\"name\">forwardTransparency</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">opts</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOptions\">RuleBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a></div></div>","info":{"doc":"","docLink":"./Aesop/Builder/Forward.html#Aesop.RuleBuilderOptions.forwardTransparency","kind":"def","line":16,"name":"Aesop.RuleBuilderOptions.forwardTransparency","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Builder/Forward.lean#L16-L17"}}],"imports":["Init","Aesop.Builder.Basic"],"instances":[],"name":"Aesop.Builder.Forward"}