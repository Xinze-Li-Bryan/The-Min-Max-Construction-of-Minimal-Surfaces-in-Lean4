{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Lemma.html#expandLemma\"><span class=\"name\">expandLemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>","info":{"doc":"Implementation of the `lemma` command, by macro expansion to `theorem`. ","docLink":"./Mathlib/Tactic/Lemma.html#expandLemma","kind":"def","line":20,"name":"expandLemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Lemma.lean#L20-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Lemma.html#lemma\"><span class=\"name\">lemma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"`lemma` means the same as `theorem`. It is used to denote \"less important\" theorems ","docLink":"./Mathlib/Tactic/Lemma.html#lemma","kind":"def","line":16,"name":"lemma","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Lemma.lean#L16-L18"}}],"imports":["Init","Mathlib.Init","Lean.Parser.Command"],"instances":[],"name":"Mathlib.Tactic.Lemma"}