{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.unusedTacticLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">unusedTacticLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>","info":{"doc":"The main entry point to the unused tactic linter. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.unusedTacticLinter","kind":"def","line":177,"name":"Mathlib.Linter.UnusedTactic.unusedTacticLinter","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L177-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.eraseUsedTactics\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">eraseUsedTactics</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exceptions</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Lean.Elab.InfoTree</a> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"Search for tactic executions in the info tree and remove the syntax of the tactics that\nchanged something. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.eraseUsedTactics","kind":"opaque","line":150,"name":"Mathlib.Linter.UnusedTactic.eraseUsedTactics","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L150-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.eraseUsedTacticsList\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">eraseUsedTacticsList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exceptions</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">trees</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">Lean.PersistentArray</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Lean.Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Search for tactic executions in the info tree and remove the syntax of the tactics that\nchanged something. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.eraseUsedTacticsList","kind":"opaque","line":144,"name":"Mathlib.Linter.UnusedTactic.eraseUsedTacticsList","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L144-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.getNames\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">getNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mctx</span> : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>","info":{"doc":"`getNames mctx` extracts the names of all the local declarations implied by the\n`MetavarContext` `mctx`. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.getNames","kind":"def","line":136,"name":"Mathlib.Linter.UnusedTactic.getNames","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L136-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.getTactics\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">getTactics</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ignoreTacticKinds</span> : <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameHashSet\">Lean.NameHashSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isTacKind</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Accumulates the set of tactic syntaxes that should be evaluated at least once. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.getTactics","kind":"opaque","line":127,"name":"Mathlib.Linter.UnusedTactic.getTactics","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L127-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.addIgnoreTacticKind\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">addIgnoreTacticKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Adds a new syntax kind whose children will be ignored by the `unusedTactic` linter.\nThis should be called from an `initialize` block.\n","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.addIgnoreTacticKind","kind":"def","line":119,"name":"Mathlib.Linter.UnusedTactic.addIgnoreTacticKind","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L119-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.isIgnoreTacticKind\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">isIgnoreTacticKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ignoreTacticKinds</span> : <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameHashSet\">Lean.NameHashSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Is this a syntax kind that contains intentionally unused tactic subterms? ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.isIgnoreTacticKind","kind":"def","line":112,"name":"Mathlib.Linter.UnusedTactic.isIgnoreTacticKind","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L112-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.ignoreTacticKindsRef\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">ignoreTacticKindsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameHashSet\">Lean.NameHashSet</a></span></div></div>","info":{"doc":"A list of blacklisted syntax kinds, which are expected to have subterms that contain\nunevaluated tactics.\n","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.ignoreTacticKindsRef","kind":"opaque","line":84,"name":"Mathlib.Linter.UnusedTactic.ignoreTacticKindsRef","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L84-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.M\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">UnusedTactic</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The monad for collecting the ranges of the syntaxes that do not modify any goal. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.UnusedTactic.M","kind":"def","line":69,"name":"Mathlib.Linter.UnusedTactic.M","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.linter.unusedTactic\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">unusedTactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"The unused tactic linter makes sure that every tactic call actually changes *something*. ","docLink":"./Mathlib/Tactic/Linter/UnusedTactic.html#Mathlib.Linter.linter.unusedTactic","kind":"opaque","line":61,"name":"Mathlib.Linter.linter.unusedTactic","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Linter/UnusedTactic.lean#L61-L65"}}],"imports":["Init","Lean.Parser.Syntax","Batteries.Tactic.Unreachable","Mathlib.Tactic.Linter.Header","Mathlib.Tactic.Linter.UnusedTacticExtension"],"instances":[],"name":"Mathlib.Tactic.Linter.UnusedTactic"}