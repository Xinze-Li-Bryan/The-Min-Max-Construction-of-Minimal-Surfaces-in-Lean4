{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#CompleteSpace.iInf\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">‚àÉ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">u</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace.toTopologicalSpace\">toTopologicalSpace</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">t</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#CompleteSpace.iInf","kind":"theorem","line":116,"name":"CompleteSpace.iInf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L116-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_restrict_sUnion\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformSpace_comap_restrict_sUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œπ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">‚Üë(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>)</span>) =&gt; <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">‚Üë<span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">‚®Ö <span class=\"fn\">S</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">‚Üë<span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">‚Üë<span class=\"fn\">i</span></span></span></span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_restrict_sUnion","kind":"theorem","line":109,"name":"Pi.uniformSpace_comap_restrict_sUnion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L109-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.complete\"><span class=\"name\">Pi</span>.<span class=\"name\">complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.complete","kind":"instance","line":101,"name":"Pi.complete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L101-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Cauchy.pi\"><span class=\"name\">Cauchy</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\">l</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.pi\">Filter.pi</a> <span class=\"fn\">l</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Cauchy.pi","kind":"theorem","line":96,"name":"Cauchy.pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L96-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#cauchy_pi_iff'\"><span class=\"name\">cauchy_pi_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">l</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#cauchy_pi_iff'","kind":"theorem","line":92,"name":"cauchy_pi_iff'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L92-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#cauchy_pi_iff\"><span class=\"name\">cauchy_pi_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">l</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#cauchy_pi_iff","kind":"theorem","line":88,"name":"cauchy_pi_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L88-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_restrict\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformSpace_comap_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">‚Üë<span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">‚Üë<span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚®Ö <span class=\"fn\">i</span> ‚àà <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">U</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_restrict","kind":"theorem","line":82,"name":"Pi.uniformSpace_comap_restrict","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L82-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_restrict\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformContinuous_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_restrict","kind":"theorem","line":78,"name":"Pi.uniformContinuous_restrict","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_precomp\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformSpace_comap_precomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">Œπ'</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ≤</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">œÜ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œπ'</span>) =&gt; <span class=\"fn\">Œ≤</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">‚®Ö (<span class=\"fn\">i'</span> : <span class=\"fn\">Œπ'</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">i'</span>)</span>)</span> <span class=\"fn\">inst‚úù</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_precomp","kind":"theorem","line":73,"name":"Pi.uniformSpace_comap_precomp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L73-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_precomp'\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformSpace_comap_precomp'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">Œπ'</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">x</span></span></span>) (<span class=\"fn\">i'</span> : <span class=\"fn\">Œπ'</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">i'</span>)</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i'</span> : <span class=\"fn\">Œπ'</span>) =&gt; <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">i'</span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">‚®Ö (<span class=\"fn\">i'</span> : <span class=\"fn\">Œπ'</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">i'</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">U</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">i'</span>)</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_comap_precomp'","kind":"theorem","line":68,"name":"Pi.uniformSpace_comap_precomp'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L68-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_postcomp\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformContinuous_postcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_postcomp","kind":"theorem","line":64,"name":"Pi.uniformContinuous_postcomp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L64-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_postcomp'\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformContinuous_postcomp'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ≤</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> <span class=\"fn\">i</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_postcomp'","kind":"theorem","line":59,"name":"Pi.uniformContinuous_postcomp'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L59-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_precomp\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformContinuous_precomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">Œπ'</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ≤</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">œÜ</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_precomp","kind":"theorem","line":55,"name":"Pi.uniformContinuous_precomp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L55-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_precomp'\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformContinuous_precomp'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\"><span class=\"fn\">Œπ'</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span></span>) (<span class=\"fn\">j</span> : <span class=\"fn\">Œπ'</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">œÜ</span> <span class=\"fn\">j</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_precomp'","kind":"theorem","line":51,"name":"Pi.uniformContinuous_precomp'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L51-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_proj\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformContinuous_proj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <span class=\"fn\">i</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformContinuous_proj","kind":"theorem","line":48,"name":"Pi.uniformContinuous_proj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#uniformContinuous_pi\"><span class=\"name\">uniformContinuous_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≤</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">i</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#uniformContinuous_pi","kind":"theorem","line":42,"name":"uniformContinuous_pi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L42-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#instIsCountablyGeneratedProdForallUniformityOfCountable\"><span class=\"name\">instIsCountablyGeneratedProdForallUniformityOfCountable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span>)</span>.<a href=\"./Mathlib/Order/Filter/CountablyGenerated.html#Filter.IsCountablyGenerated\">IsCountablyGenerated</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#instIsCountablyGeneratedProdForallUniformityOfCountable","kind":"instance","line":37,"name":"instIsCountablyGeneratedProdForallUniformityOfCountable","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L37-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformity\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">_root_.uniformity</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">‚®Ö (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.1</span> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">_root_.uniformity</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformity","kind":"theorem","line":31,"name":"Pi.uniformity","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L31-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_eq\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformSpace_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">uniformSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚®Ö (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">U</span> <span class=\"fn\">i</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace_eq","kind":"theorem","line":27,"name":"Pi.uniformSpace_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L27-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\"><span class=\"name\">Pi</span>.<span class=\"name\">uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ±</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">U</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<span class=\"fn\">Œ±</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">Œ±</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace","kind":"instance","line":22,"name":"Pi.uniformSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/Pi.lean#L22-L25"}}],"imports":["Init","Mathlib.Topology.UniformSpace.UniformEmbedding"],"instances":[{"className":"UniformSpace","name":"Pi.uniformSpace","typeNames":[]},{"className":"Filter.IsCountablyGenerated","name":"instIsCountablyGeneratedProdForallUniformityOfCountable","typeNames":["uniformity"]},{"className":"CompleteSpace","name":"Pi.complete","typeNames":[]}],"name":"Mathlib.Topology.UniformSpace.Pi"}