{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatHPow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n' </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h1</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>) (<span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow","kind":"instance","line":41,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L41-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatHMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h1</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">k</span> <span class=\"fn\">k'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>) (<span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k'</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul","kind":"instance","line":38,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L38-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatHAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h1</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">n</span> <span class=\"fn\">n'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">k</span> <span class=\"fn\">k'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>) (<span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k'</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd","kind":"instance","line":35,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L35-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatDivExactHAddDivOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#PNat.divExact\">divExact</a></span> <span class=\"fn\">k</span>)</span> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">div</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat","kind":"instance","line":33,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatToPNat'HAddPredOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#Nat.toPNat'\">toPNat'</a></span> (<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.pred\">pred</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat","kind":"instance","line":31,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatSuccPNatHAddOfNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">succPNat</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat","kind":"instance","line":29,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatToPNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/PNat/Defs.html#Nat.toPNat\">toPNat</a></span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat","kind":"instance","line":26,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftValPNatNatOfNatHAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLiftVal\">CSLiftVal</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd","kind":"instance","line":24,"name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftPNatNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Ring</span>.<span class=\"name\">instCSLiftPNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Ring/Basic.html#Mathlib.Tactic.Ring.CSLift\">CSLift</a> <a href=\"./Mathlib/Data/PNat/Notation.html#PNat\">ℕ+</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Ring/PNat.html#Mathlib.Tactic.Ring.instCSLiftPNatNat","kind":"instance","line":18,"name":"Mathlib.Tactic.Ring.instCSLiftPNatNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Ring/PNat.lean#L18-L20"}}],"imports":["Init","Mathlib.Tactic.Ring.Basic","Mathlib.Data.PNat.Basic"],"instances":[{"className":"Mathlib.Tactic.Ring.CSLift","name":"Mathlib.Tactic.Ring.instCSLiftPNatNat","typeNames":["PNat","Nat"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatOfNatHAdd","typeNames":["HAdd.hAdd"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat","typeNames":["Nat.toPNat"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatSuccPNatHAddOfNat","typeNames":["Nat.succPNat","HAdd.hAdd"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatToPNat'HAddPredOfNat","typeNames":["Nat.toPNat'","HAdd.hAdd"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatDivExactHAddDivOfNat","typeNames":["PNat.divExact","HAdd.hAdd"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHAdd","typeNames":["HAdd.hAdd","HAdd.hAdd"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHMul","typeNames":["HMul.hMul","HMul.hMul"]},{"className":"Mathlib.Tactic.Ring.CSLiftVal","name":"Mathlib.Tactic.Ring.instCSLiftValPNatNatHPow","typeNames":["HPow.hPow","HPow.hPow"]}],"name":"Mathlib.Tactic.Ring.PNat"}