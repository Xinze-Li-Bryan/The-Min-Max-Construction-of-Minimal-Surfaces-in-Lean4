{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divCasesOn\"><span class=\"name\">Rat</span>.<span class=\"name\">divCasesOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">div</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) → <span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"A version of `Rat.casesOn` that uses `/` instead of `Rat.mk'`. Use as\n```lean\ncases r with\n| div p q nonzero coprime =>\n```\n","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divCasesOn","kind":"def","line":293,"name":"Rat.divCasesOn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L293-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_inj\"><span class=\"name\">Rat</span>.<span class=\"name\">coe_int_inj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_inj","kind":"theorem","line":288,"name":"Rat.coe_int_inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L288-L289"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.canLift\"><span class=\"name\">Rat</span>.<span class=\"name\">canLift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Data/Int/Basic.html#Int.cast\">Int.cast</a> <span class=\"fn\">fun (<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.canLift","kind":"instance","line":283,"name":"Rat.canLift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L283-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_eq_one_iff\"><span class=\"name\">Rat</span>.<span class=\"name\">den_eq_one_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_eq_one_iff","kind":"theorem","line":280,"name":"Rat.den_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L280-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.eq_num_of_isInt\"><span class=\"name\">Rat</span>.<span class=\"name\">eq_num_of_isInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.isInt\">isInt</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.eq_num_of_isInt","kind":"theorem","line":276,"name":"Rat.eq_num_of_isInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L276-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_num_of_den_eq_one\"><span class=\"name\">Rat</span>.<span class=\"name\">coe_int_num_of_den_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.coe_int_num_of_den_eq_one","kind":"theorem","line":271,"name":"Rat.coe_int_num_of_den_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L271-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_mul_divInt_cancel\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_mul_divInt_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">x</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_mul_divInt_cancel","kind":"theorem","line":265,"name":"Rat.divInt_mul_divInt_cancel","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L265-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_div_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_div_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_div_eq_divInt","kind":"theorem","line":263,"name":"Rat.natCast_div_eq_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L263-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_div_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_div_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_div_eq_divInt","kind":"theorem","line":261,"name":"Rat.intCast_div_eq_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L261-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.add_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">add_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.add_divInt","kind":"theorem","line":255,"name":"Rat.add_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L255-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero_of_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_ne_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero_of_ne_zero","kind":"theorem","line":250,"name":"Rat.divInt_ne_zero_of_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk_denom_ne_zero_of_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">mk_denom_ne_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hqnd</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk_denom_ne_zero_of_ne_zero","kind":"theorem","line":247,"name":"Rat.mk_denom_ne_zero_of_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L247-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk_num_ne_zero_of_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">mk_num_ne_zero_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hqnd</span> : <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk_num_ne_zero_of_ne_zero","kind":"theorem","line":244,"name":"Rat.mk_num_ne_zero_of_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L244-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_one\"><span class=\"name\">Rat</span>.<span class=\"name\">den_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_one","kind":"theorem","line":240,"name":"Rat.den_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L240-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_one\"><span class=\"name\">Rat</span>.<span class=\"name\">num_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_one","kind":"theorem","line":237,"name":"Rat.num_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L237-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_iff_num_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_iff_num_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_iff_num_zero","kind":"theorem","line":233,"name":"Rat.zero_iff_num_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L233-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_of_num_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_of_num_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_of_num_zero","kind":"theorem","line":231,"name":"Rat.zero_of_num_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L231-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">den_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_zero","kind":"theorem","line":228,"name":"Rat.den_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L228-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">num_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_zero","kind":"theorem","line":224,"name":"Rat.num_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L224-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_neg_eq_neg_num\"><span class=\"name\">Rat</span>.<span class=\"name\">num_neg_eq_neg_num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span>).<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_neg_eq_neg_num","kind":"theorem","line":219,"name":"Rat.num_neg_eq_neg_num","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L219-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_neg_eq_den\"><span class=\"name\">Rat</span>.<span class=\"name\">den_neg_eq_den</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span>).<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_neg_eq_den","kind":"theorem","line":215,"name":"Rat.den_neg_eq_den","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L215-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.eq_iff_mul_eq_mul\"><span class=\"name\">Rat</span>.<span class=\"name\">eq_iff_mul_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.eq_iff_mul_eq_mul","kind":"theorem","line":207,"name":"Rat.eq_iff_mul_eq_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L207-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.semigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">semigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.semigroup","kind":"instance","line":205,"name":"Rat.semigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L205-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.commSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">commSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.commSemigroup","kind":"instance","line":203,"name":"Rat.commSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L203-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.monoid\"><span class=\"name\">Rat</span>.<span class=\"name\">monoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.monoid","kind":"instance","line":201,"name":"Rat.monoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L201-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.commMonoid\"><span class=\"name\">Rat</span>.<span class=\"name\">commMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.commMonoid","kind":"instance","line":190,"name":"Rat.commMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L190-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addSemigroup","kind":"instance","line":188,"name":"Rat.addSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L188-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addCommSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addCommSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addCommSemigroup","kind":"instance","line":186,"name":"Rat.addCommSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L186-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addRightCancelSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addRightCancelSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddRightCancelSemigroup\">AddRightCancelSemigroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addRightCancelSemigroup","kind":"instance","line":184,"name":"Rat.addRightCancelSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L184-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addLeftCancelSemigroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addLeftCancelSemigroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelSemigroup\">AddLeftCancelSemigroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addLeftCancelSemigroup","kind":"instance","line":182,"name":"Rat.addLeftCancelSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addMonoid\"><span class=\"name\">Rat</span>.<span class=\"name\">addMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addMonoid","kind":"instance","line":180,"name":"Rat.addMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L180-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addCommMonoid\"><span class=\"name\">Rat</span>.<span class=\"name\">addCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addCommMonoid","kind":"instance","line":178,"name":"Rat.addCommMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L178-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addGroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addGroup","kind":"instance","line":176,"name":"Rat.addGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L176-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.addCommGroup\"><span class=\"name\">Rat</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.addCommGroup","kind":"instance","line":155,"name":"Rat.addCommGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L155-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.nontrivial\"><span class=\"name\">Rat</span>.<span class=\"name\">nontrivial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.nontrivial","kind":"instance","line":151,"name":"Rat.nontrivial","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L151-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.zero_ne_one\"><span class=\"name\">Rat</span>.<span class=\"name\">zero_ne_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.zero_ne_one","kind":"theorem","line":144,"name":"Rat.zero_ne_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L144-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one_one\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_one_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one_one","kind":"theorem","line":142,"name":"Rat.divInt_one_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L142-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_one","kind":"theorem","line":140,"name":"Rat.divInt_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L140-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.div_def'\"><span class=\"name\">Rat</span>.<span class=\"name\">div_def'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">r</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span>) (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.div_def'","kind":"theorem","line":135,"name":"Rat.div_def'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L135-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_div_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_div_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span>) (<span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n₂</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_div_divInt","kind":"theorem","line":131,"name":"Rat.divInt_div_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L131-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_def'\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_def'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span>)</span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span></span></div></div>","info":{"doc":"**Alias** of `Rat.inv_def`.","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_def'","kind":"theorem","line":129,"name":"Rat.inv_def'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_mkRat\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_mkRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(↑<span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_mkRat","kind":"theorem","line":126,"name":"Rat.inv_mkRat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L126-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.inv_divInt'\"><span class=\"name\">Rat</span>.<span class=\"name\">inv_divInt'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span>)</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">d</span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"**Alias** of `Rat.inv_divInt`.","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.inv_divInt'","kind":"theorem","line":124,"name":"Rat.inv_divInt'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L124-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_pow\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">num</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">den</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">den</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdn</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">num</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">den</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">num</span>, <span class=\"fn\">den</span> := <span class=\"fn\">den</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">hd</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">hdn</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">num</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>, <span class=\"fn\">den</span> := <span class=\"fn\">den</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_pow","kind":"theorem","line":120,"name":"Rat.mk'_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L120-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">pow_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_divInt","kind":"theorem","line":117,"name":"Rat.pow_eq_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L117-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_mkRat\"><span class=\"name\">Rat</span>.<span class=\"name\">pow_eq_mkRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#mkRat\">mkRat</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pow_eq_mkRat","kind":"theorem","line":114,"name":"Rat.pow_eq_mkRat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L114-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_eq_divInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d₁ </span><span class=\"fn\">d₂ </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₁</span> : <span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₂</span> : <span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₁</span></div></div>","info":{"doc":"**Alias** of `Rat.divInt_eq_divInt_iff`.","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_divInt","kind":"theorem","line":112,"name":"Rat.divInt_eq_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L112-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mul_eq_mkRat\"><span class=\"name\">Rat</span>.<span class=\"name\">mul_eq_mkRat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">r</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#mkRat\">mkRat</a> (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span>) (<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mul_eq_mkRat","kind":"theorem","line":109,"name":"Rat.mul_eq_mkRat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L109-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_mul_mk'\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_mul_mk'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d₁ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd₁</span> : <span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd₂</span> : <span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnd₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₁</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnd₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₂</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₁</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₂</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₁</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₁</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">hd₁</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">hnd₁</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₂</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₂</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">hd₂</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">hnd₂</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n₂</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_mul_mk'","kind":"theorem","line":103,"name":"Rat.mk'_mul_mk'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L103-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_neg\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">d</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">n</span>) <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_neg","kind":"theorem","line":101,"name":"Rat.divInt_neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.neg_def\"><span class=\"name\">Rat</span>.<span class=\"name\">neg_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span>) <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.neg_def","kind":"theorem","line":99,"name":"Rat.neg_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.lift_binop_eq\"><span class=\"name\">Rat</span>.<span class=\"name\">lift_binop_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a> → <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fv</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">n₁</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>} {<span class=\"fn\">d₁</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} {<span class=\"fn\">h₁</span> : <span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>} {<span class=\"fn\">c₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₁</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₁</span></span>} {<span class=\"fn\">n₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>} {<span class=\"fn\">d₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>} {<span class=\"fn\">h₂</span> : <span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>}\n    {<span class=\"fn\">c₂</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n₂</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d₂</span></span>},\n    <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₁</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₁</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h₁</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">c₁</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">n₂</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d₂</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h₂</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">c₂</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">n₁</span> <span class=\"fn\">(↑<span class=\"fn\">d₁</span>)</span> <span class=\"fn\">n₂</span> <span class=\"fn\">↑<span class=\"fn\">d₂</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">n₁</span> <span class=\"fn\">(↑<span class=\"fn\">d₁</span>)</span> <span class=\"fn\">n₂</span> <span class=\"fn\">↑<span class=\"fn\">d₂</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f0</span> : <span class=\"fn\">∀ {<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}, <span class=\"fn\"><span class=\"fn\">d₁</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">d₂</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d0</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ {<span class=\"fn\">n₁ </span><span class=\"fn\">d₁ </span><span class=\"fn\">n₂ </span><span class=\"fn\">d₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}, <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">n₁</span> <span class=\"fn\">d₁</span> <span class=\"fn\">n₂</span> <span class=\"fn\">d₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">f₂</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">d</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.lift_binop_eq","kind":"theorem","line":77,"name":"Rat.lift_binop_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L77-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">z</span> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_divInt","kind":"theorem","line":75,"name":"Rat.intCast_eq_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_num_den'\"><span class=\"name\">Rat</span>.<span class=\"name\">mkRat_num_den'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"**Alias** of `Rat.mkRat_self`.","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_num_den'","kind":"theorem","line":73,"name":"Rat.mkRat_num_den'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_ne_zero","kind":"theorem","line":69,"name":"Rat.divInt_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">divInt_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.divInt_eq_zero","kind":"theorem","line":65,"name":"Rat.divInt_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L65-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.den_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">den_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.den_ne_zero","kind":"theorem","line":63,"name":"Rat.den_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.num_ne_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">num_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">q</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.num_ne_zero","kind":"theorem","line":61,"name":"Rat.num_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">Int.natAbs</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Init/Data/Nat/Coprime.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\">0</span>, <span class=\"fn\">den</span> := <span class=\"fn\">d</span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">h</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">w</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_zero","kind":"theorem","line":59,"name":"Rat.mk'_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_eq_divInt\"><span class=\"name\">Rat</span>.<span class=\"name\">mkRat_eq_divInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#mkRat\">mkRat</a> <span class=\"fn\">n</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.divInt\">divInt</a> <span class=\"fn\">n</span> <span class=\"fn\">↑<span class=\"fn\">d</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mkRat_eq_divInt","kind":"theorem","line":57,"name":"Rat.mkRat_eq_divInt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_one\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_one","kind":"theorem","line":55,"name":"Rat.natCast_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_one\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_one","kind":"theorem","line":54,"name":"Rat.intCast_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_eq_zero","kind":"theorem","line":53,"name":"Rat.natCast_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_zero\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_eq_zero","kind":"theorem","line":52,"name":"Rat.intCast_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.natCast_injective\"><span class=\"name\">Rat</span>.<span class=\"name\">natCast_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Init/Data/Cast.html#Nat.cast\">Nat.cast</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.natCast_injective","kind":"theorem","line":49,"name":"Rat.natCast_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.intCast_injective\"><span class=\"name\">Rat</span>.<span class=\"name\">intCast_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Init/Data/Int/Basic.html#Int.cast\">Int.cast</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.intCast_injective","kind":"theorem","line":48,"name":"Rat.intCast_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.ofInt_eq_cast\"><span class=\"name\">Rat</span>.<span class=\"name\">ofInt_eq_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Rat/Basic.html#Rat.ofInt\">ofInt</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.ofInt_eq_cast","kind":"theorem","line":44,"name":"Rat.ofInt_eq_cast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L44-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.mk'_num_den\"><span class=\"name\">Rat</span>.<span class=\"name\">mk'_num_den</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">{</a> <span class=\"fn\">num</span> := <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.num\">num</a></span>, <span class=\"fn\">den</span> := <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span>, <span class=\"fn\">den_nz</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">reduced</span> := <span class=\"fn\">⋯</span> <a href=\"./Init/Data/Rat/Basic.html#Rat.mk'\">}</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.mk'_num_den","kind":"theorem","line":42,"name":"Rat.mk'_num_den","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Rat/Defs.html#Rat.pos\"><span class=\"name\">Rat</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Rat/Basic.html#Rat.den\">den</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Rat/Defs.html#Rat.pos","kind":"theorem","line":40,"name":"Rat.pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Data/Rat/Defs.lean#L40-L40"}}],"imports":["Init","Mathlib.Algebra.Group.Defs","Mathlib.Data.Rat.Init","Mathlib.Order.Basic","Mathlib.Tactic.Common","Mathlib.Data.Nat.Basic"],"instances":[{"className":"Nontrivial","name":"Rat.nontrivial","typeNames":["Rat"]},{"className":"AddCommGroup","name":"Rat.addCommGroup","typeNames":["Rat"]},{"className":"AddGroup","name":"Rat.addGroup","typeNames":["Rat"]},{"className":"AddCommMonoid","name":"Rat.addCommMonoid","typeNames":["Rat"]},{"className":"AddMonoid","name":"Rat.addMonoid","typeNames":["Rat"]},{"className":"AddLeftCancelSemigroup","name":"Rat.addLeftCancelSemigroup","typeNames":["Rat"]},{"className":"AddRightCancelSemigroup","name":"Rat.addRightCancelSemigroup","typeNames":["Rat"]},{"className":"AddCommSemigroup","name":"Rat.addCommSemigroup","typeNames":["Rat"]},{"className":"AddSemigroup","name":"Rat.addSemigroup","typeNames":["Rat"]},{"className":"CommMonoid","name":"Rat.commMonoid","typeNames":["Rat"]},{"className":"Monoid","name":"Rat.monoid","typeNames":["Rat"]},{"className":"CommSemigroup","name":"Rat.commSemigroup","typeNames":["Rat"]},{"className":"Semigroup","name":"Rat.semigroup","typeNames":["Rat"]},{"className":"CanLift","name":"Rat.canLift","typeNames":["Rat","Int","Int.cast"]}],"name":"Mathlib.Data.Rat.Defs"}