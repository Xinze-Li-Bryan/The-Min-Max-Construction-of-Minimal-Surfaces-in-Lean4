{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#mkSelectionPanelRPC\"><span class=\"name\">mkSelectionPanelRPC</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Params</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Tactic/Widget/SelectInsertParamsClass.html#SelectInsertParamsClass\">SelectInsertParamsClass</a> <span class=\"fn\">Params</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mkCmdStr</span> :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span> →\n    <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><span class=\"fn\">Params</span> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">helpMsg </span><span class=\"fn\">title</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onlyGoal</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onlyOne</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <span class=\"fn\">Params</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">Lean.Server.RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">Lean.Server.RequestTask</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a>)</span></span></div></div>","info":{"doc":"Helper function to create a widget allowing to select parts of the main goal\nand then display a link that will insert some tactic call.\n\nThe main argument is `mkCmdStr` which is a function creating the link text and the tactic call text.\nThe `helpMsg` argument is displayed when nothing is selected and `title` is used as a panel title.\nThe `onlyGoal` argument says whether the selected has to be in the goal. Otherwise it\ncan be in the local context.\nThe `onlyOne` argument says whether one should select only one sub-expression.\nIn every cases, all selected subexpressions should be in the main goal or its local context.\n\nThe last arguments `params` should not be provided so that the output\nhas type `Params → RequestM (RequestTask Html)` and can be fed to the `mk_rpc_widget%`\nelaborator.\n\nNote that the `pos` and `goalType` arguments to `mkCmdStr` could be extracted for the `Params`\nargument but that extraction would happen in every example, hence it is factored out here.\nWe also make sure `mkCmdStr` is executed in the right context.\n","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#mkSelectionPanelRPC","kind":"def","line":57,"name":"mkSelectionPanelRPC","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L57-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#instRpcEncodableSelectInsertParams\"><span class=\"name\">instRpcEncodableSelectInsertParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#instRpcEncodableSelectInsertParams","kind":"instance","line":54,"name":"instRpcEncodableSelectInsertParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#instSelectInsertParamsClassSelectInsertParams\"><span class=\"name\">instSelectInsertParamsClassSelectInsertParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Widget/SelectInsertParamsClass.html#SelectInsertParamsClass\">SelectInsertParamsClass</a> <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#instSelectInsertParamsClassSelectInsertParams","kind":"instance","line":54,"name":"instSelectInsertParamsClassSelectInsertParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.replaceRange\"><span class=\"name\">SelectInsertParams</span>.<span class=\"name\">replaceRange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></div></div>","info":{"doc":"The range in the source document where the command will be inserted. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.replaceRange","kind":"def","line":53,"name":"SelectInsertParams.replaceRange","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.selectedLocations\"><span class=\"name\">SelectInsertParams</span>.<span class=\"name\">selectedLocations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span></div></div>","info":{"doc":"Locations currently selected in the goal state. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.selectedLocations","kind":"def","line":51,"name":"SelectInsertParams.selectedLocations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.goals\"><span class=\"name\">SelectInsertParams</span>.<span class=\"name\">goals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal\">Lean.Widget.InteractiveGoal</a></span></div></div>","info":{"doc":"The current tactic-mode goals. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.goals","kind":"def","line":49,"name":"SelectInsertParams.goals","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.pos\"><span class=\"name\">SelectInsertParams</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Lean.Lsp.Position</a></div></div>","info":{"doc":"Cursor position in the file at which the widget is being displayed. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.pos","kind":"def","line":47,"name":"SelectInsertParams.pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.mk\"><span class=\"name\">SelectInsertParams</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal\">Lean.Widget.InteractiveGoal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selectedLocations</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">replaceRange</span> : <a href=\"./Lean/Data/Lsp/BasicAux.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams.mk","kind":"ctor","line":45,"name":"SelectInsertParams.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\"><span class=\"name\">SelectInsertParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Structures providing parameters for a Select and insert widget. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams","kind":"structure","line":44,"name":"SelectInsertParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L44-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#String.renameMetaVar\"><span class=\"name\">String</span>.<span class=\"name\">renameMetaVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"Replace all meta-variable names by \"?_\". ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#String.renameMetaVar","kind":"def","line":35,"name":"String.renameMetaVar","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L35-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#insertMetaVar\"><span class=\"name\">insertMetaVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>","info":{"doc":"Replace the sub-expression at the given position by a fresh meta-variable. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#insertMetaVar","kind":"def","line":31,"name":"insertMetaVar","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L31-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#getGoalLocations\"><span class=\"name\">getGoalLocations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">locations</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.Pos\">Lean.SubExpr.Pos</a></span></div></div>","info":{"doc":"Given a `Array GoalsLocation` return the array of `SubExpr.Pos` for all locations\nin the targets of the relevant goals. ","docLink":"./Mathlib/Tactic/Widget/SelectPanelUtils.html#getGoalLocations","kind":"def","line":22,"name":"getGoalLocations","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Widget/SelectPanelUtils.lean#L22-L29"}}],"imports":["Init","Lean.Meta.ExprLens","ProofWidgets.Component.MakeEditLink","ProofWidgets.Component.OfRpcMethod","Mathlib.Tactic.Widget.SelectInsertParamsClass"],"instances":[{"className":"SelectInsertParamsClass","name":"instSelectInsertParamsClassSelectInsertParams","typeNames":["SelectInsertParams"]},{"className":"Lean.Server.RpcEncodable","name":"instRpcEncodableSelectInsertParams","typeNames":["SelectInsertParams"]}],"name":"Mathlib.Tactic.Widget.SelectPanelUtils"}