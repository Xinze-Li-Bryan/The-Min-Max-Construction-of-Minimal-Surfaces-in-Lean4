{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.inhabited\"><span class=\"name\">ZMod</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.inhabited","kind":"instance","line":230,"name":"ZMod.inhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L230-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.commRing\"><span class=\"name\">ZMod</span>.<span class=\"name\">commRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.commRing","kind":"instance","line":173,"name":"ZMod.commRing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L173-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.card\"><span class=\"name\">ZMod</span>.<span class=\"name\">card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.card","kind":"theorem","line":163,"name":"ZMod.card","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L163-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.infinite\"><span class=\"name\">ZMod</span>.<span class=\"name\">infinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.infinite","kind":"instance","line":160,"name":"ZMod.infinite","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L160-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.fintype\"><span class=\"name\">ZMod</span>.<span class=\"name\">fintype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.fintype","kind":"instance","line":156,"name":"ZMod.fintype","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L156-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.instUnique\"><span class=\"name\">ZMod</span>.<span class=\"name\">instUnique</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">1</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.instUnique","kind":"instance","line":154,"name":"ZMod.instUnique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.repr\"><span class=\"name\">ZMod</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.repr","kind":"instance","line":148,"name":"ZMod.repr","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L148-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod.decidableEq\"><span class=\"name\">ZMod</span>.<span class=\"name\">decidableEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod.decidableEq","kind":"instance","line":144,"name":"ZMod.decidableEq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L144-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\"><span class=\"name\">ZMod</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>","info":{"doc":"The integers modulo `n : ℕ`. ","docLink":"./Mathlib/Data/ZMod/Defs.html#ZMod","kind":"def","line":138,"name":"ZMod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L138-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instNeZeroHAddNatOfNat_mathlib_1\"><span class=\"name\">Fin</span>.<span class=\"name\">instNeZeroHAddNatOfNat_mathlib_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instNeZeroHAddNatOfNat_mathlib_1","kind":"instance","line":133,"name":"Fin.instNeZeroHAddNatOfNat_mathlib_1","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L133-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instCommRing\"><span class=\"name\">Fin</span>.<span class=\"name\">instCommRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"Commutative ring structure on `Fin n`.\n\nThis is not a global instance, but can introduced locally using `open Fin.CommRing in ...`.\n\nThis is not an instance because the `binop%` elaborator assumes that\nthere are no non-trivial coercion loops,\nbut this instance  would introduce a coercion from `Nat` to `Fin n` and back.\nNon-trivial loops lead to undesirable and counterintuitive elaboration behavior.\n\nFor example, for `x : Fin k` and `n : Nat`,\nit causes `x < n` to be elaborated as `x < ↑n` rather than `↑x < n`,\nsilently introducing wraparound arithmetic.\n","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instCommRing","kind":"def","line":105,"name":"Fin.instCommRing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L105-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instHasDistribNeg\"><span class=\"name\">Fin</span>.<span class=\"name\">instHasDistribNeg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#HasDistribNeg\">HasDistribNeg</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"Note this is more general than `Fin.instCommRing` as it applies (vacuously) to `Fin 0` too. ","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instHasDistribNeg","kind":"instance","line":99,"name":"Fin.instHasDistribNeg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L99-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instCommMonoid\"><span class=\"name\">Fin</span>.<span class=\"name\">instCommMonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instCommMonoid","kind":"instance","line":95,"name":"Fin.instCommMonoid","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L95-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instNonUnitalCommRing\"><span class=\"name\">Fin</span>.<span class=\"name\">instNonUnitalCommRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instNonUnitalCommRing","kind":"instance","line":88,"name":"Fin.instNonUnitalCommRing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L88-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instDistrib\"><span class=\"name\">Fin</span>.<span class=\"name\">instDistrib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"Distributive structure on `Fin n`. ","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instDistrib","kind":"instance","line":81,"name":"Fin.instDistrib","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L81-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.instCommSemigroup\"><span class=\"name\">Fin</span>.<span class=\"name\">instCommSemigroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"Multiplicative commutative semigroup structure on `Fin n`. ","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.instCommSemigroup","kind":"instance","line":62,"name":"Fin.instCommSemigroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L62-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/Defs.html#Fin.val_intCast\"><span class=\"name\">Fin</span>.<span class=\"name\">val_intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>).<a href=\"./Init/Data/Int/Basic.html#Int.toNat\">toNat</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/ZMod/Defs.html#Fin.val_intCast","kind":"theorem","line":48,"name":"Fin.val_intCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/ZMod/Defs.lean#L48-L60"}}],"imports":["Init","Mathlib.Algebra.Group.Fin.Basic","Mathlib.Algebra.NeZero","Mathlib.Algebra.Ring.Int.Defs","Mathlib.Algebra.Ring.GrindInstances","Mathlib.Data.Nat.ModEq","Mathlib.Data.Fintype.EquivFin"],"instances":[{"className":"CommSemigroup","name":"Fin.instCommSemigroup","typeNames":["Fin"]},{"className":"Distrib","name":"Fin.instDistrib","typeNames":["Fin"]},{"className":"NonUnitalCommRing","name":"Fin.instNonUnitalCommRing","typeNames":["Fin"]},{"className":"CommMonoid","name":"Fin.instCommMonoid","typeNames":["Fin"]},{"className":"HasDistribNeg","name":"Fin.instHasDistribNeg","typeNames":["Fin"]},{"className":"NeZero","name":"Fin.instNeZeroHAddNatOfNat_mathlib_1","typeNames":["OfNat.ofNat"]},{"className":"Decidable","name":"ZMod.decidableEq","typeNames":["Eq"]},{"className":"Repr","name":"ZMod.repr","typeNames":["ZMod"]},{"className":"Unique","name":"ZMod.instUnique","typeNames":["ZMod"]},{"className":"Fintype","name":"ZMod.fintype","typeNames":["ZMod"]},{"className":"Infinite","name":"ZMod.infinite","typeNames":["ZMod"]},{"className":"CommRing","name":"ZMod.commRing","typeNames":["ZMod"]},{"className":"Inhabited","name":"ZMod.inhabited","typeNames":["ZMod"]}],"name":"Mathlib.Data.ZMod.Defs"}