{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂_coe_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map₂_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{u_1, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg''</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vγ, uγ}</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous₂\">UniformContinuous₂</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂\">map₂</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">pkg''</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg''</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂_coe_coe","kind":"theorem","line":387,"name":"AbstractCompletion.map₂_coe_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L387-L389"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_map₂\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">continuous_map₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{u_2, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg''</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vγ, uγ}</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">δ</span> → <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">δ</span> → <span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">d</span> : <span class=\"fn\">δ</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂\">map₂</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">pkg''</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">a</span> <span class=\"fn\">d</span>)</span> <span class=\"fn\">(<span class=\"fn\">b</span> <span class=\"fn\">d</span>)</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_map₂","kind":"theorem","line":382,"name":"AbstractCompletion.continuous_map₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L382-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_map₂\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_map₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{u_1, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg''</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vγ, uγ}</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous₂\">UniformContinuous₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂\">map₂</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">pkg''</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_map₂","kind":"theorem","line":379,"name":"AbstractCompletion.uniformContinuous_map₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L379-L380"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{u_1, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg''</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vγ, uγ}</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\"><span class=\"fn\">pkg''</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></span></div></div>","info":{"doc":"Lift two variable maps to completions. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map₂","kind":"def","line":375,"name":"AbstractCompletion.map₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L375-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_extension₂\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_extension₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous₂\">UniformContinuous₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend₂\">extend₂</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_extension₂","kind":"theorem","line":353,"name":"AbstractCompletion.uniformContinuous_extension₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L353-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extension₂_coe_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extension₂_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<a href=\"./Init/Data/Function.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">f</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend₂\">extend₂</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extension₂_coe_coe","kind":"theorem","line":343,"name":"AbstractCompletion.extension₂_coe_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L343-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend₂\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\">γ</span></span></span></div></div>","info":{"doc":"Extend two variable map to completions. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend₂","kind":"def","line":335,"name":"AbstractCompletion.extend₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L335-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.prod\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{max vβ vα, max uβ uα}</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"Products of completions ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.prod","kind":"def","line":311,"name":"AbstractCompletion.prod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L311-L319"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare_comp_eq_compare\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">compare_comp_eq_compare</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Regular.html#T3Space\">T3Space</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cont_f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseInducing.extend\">extend</a></span> <span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span>)</span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseInducing.extend\">extend</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <span class=\"fn\">pkg</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseInducing.extend\">extend</a></span> <span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare_comp_eq_compare","kind":"theorem","line":284,"name":"AbstractCompletion.compare_comp_eq_compare","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L284-L299"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_compareEquiv_symm\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_compareEquiv_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compareEquiv\">compareEquiv</a></span> <span class=\"fn\">pkg'</span>)</span>.<a href=\"./Mathlib/Topology/UniformSpace/Equiv.html#UniformEquiv.symm\">symm</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_compareEquiv_symm","kind":"theorem","line":260,"name":"AbstractCompletion.uniformContinuous_compareEquiv_symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L260-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_compareEquiv\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_compareEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compareEquiv\">compareEquiv</a></span> <span class=\"fn\">pkg'</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_compareEquiv","kind":"theorem","line":257,"name":"AbstractCompletion.uniformContinuous_compareEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L257-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compareEquiv\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">compareEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> <a href=\"./Mathlib/Topology/UniformSpace/Equiv.html#UniformEquiv\">≃ᵤ</a> <span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></div></div>","info":{"doc":"The uniform bijection between two completions of the same uniform space. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compareEquiv","kind":"def","line":248,"name":"AbstractCompletion.compareEquiv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L248-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.inverse_compare\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">inverse_compare</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <span class=\"fn\">pkg'</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <span class=\"fn\">pkg</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.inverse_compare","kind":"theorem","line":240,"name":"AbstractCompletion.inverse_compare","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L240-L246"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">compare_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare_coe","kind":"theorem","line":237,"name":"AbstractCompletion.compare_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L237-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_compare\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_compare</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <span class=\"fn\">pkg'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_compare","kind":"theorem","line":234,"name":"AbstractCompletion.uniformContinuous_compare","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L234-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">compare</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα', uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>","info":{"doc":"The comparison map between two completions of the same uniform space. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare","kind":"def","line":230,"name":"AbstractCompletion.compare","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L230-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_comp\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg''</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vγ, uγ}</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg''</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg''</span> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_comp","kind":"theorem","line":219,"name":"AbstractCompletion.map_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L219-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_map\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> uγ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_map","kind":"theorem","line":209,"name":"AbstractCompletion.extend_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L209-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_id\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg</span> <a href=\"./Init/Prelude.html#id\">id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_id","kind":"theorem","line":203,"name":"AbstractCompletion.map_id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L203-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_unique\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_unique","kind":"theorem","line":195,"name":"AbstractCompletion.map_unique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L195-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map_coe","kind":"theorem","line":191,"name":"AbstractCompletion.map_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L191-L193"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_map\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">continuous_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_map","kind":"theorem","line":185,"name":"AbstractCompletion.continuous_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L185-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_map\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\">map</a></span> <span class=\"fn\">pkg'</span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_map","kind":"theorem","line":182,"name":"AbstractCompletion.uniformContinuous_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L182-L183"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vβ, uβ}</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\"><span class=\"fn\">pkg'</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>","info":{"doc":"Lifting maps to completions ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.map","kind":"def","line":174,"name":"AbstractCompletion.map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L174-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_comp_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend_comp_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_comp_coe","kind":"theorem","line":158,"name":"AbstractCompletion.extend_comp_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L158-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_unique\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_unique","kind":"theorem","line":153,"name":"AbstractCompletion.extend_unique","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L153-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.isUniformInducing_extend\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">isUniformInducing_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.isUniformInducing_extend","kind":"theorem","line":146,"name":"AbstractCompletion.isUniformInducing_extend","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L146-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_extend\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">continuous_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_extend","kind":"theorem","line":143,"name":"AbstractCompletion.continuous_extend","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L143-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_extend\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_extend","kind":"theorem","line":135,"name":"AbstractCompletion.uniformContinuous_extend","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L135-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_coe","kind":"theorem","line":129,"name":"AbstractCompletion.extend_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L129-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.inseparable_extend_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">inseparable_extend_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#Inseparable\">Inseparable</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.inseparable_extend_coe","kind":"theorem","line":124,"name":"AbstractCompletion.inseparable_extend_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L124-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_def\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\">extend</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseInducing.extend\">extend</a></span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend_def","kind":"theorem","line":121,"name":"AbstractCompletion.extend_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L121-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\">β</span></span></div></div>","info":{"doc":"Extension of maps to completions ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.extend","kind":"def","line":114,"name":"AbstractCompletion.extend","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L114-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.funext\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">funext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> uβ}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.funext","kind":"theorem","line":106,"name":"AbstractCompletion.funext","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L106-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.induction_on\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">induction_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ih</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.induction_on","kind":"theorem","line":99,"name":"AbstractCompletion.induction_on","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L99-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">continuous_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.continuous_coe","kind":"theorem","line":96,"name":"AbstractCompletion.continuous_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L96-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformContinuous_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformContinuous_coe","kind":"theorem","line":93,"name":"AbstractCompletion.uniformContinuous_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L93-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.isDenseInducing\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">isDenseInducing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseInducing\">IsDenseInducing</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.isDenseInducing","kind":"theorem","line":90,"name":"AbstractCompletion.isDenseInducing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L90-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.closure_range\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">closure_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pkg</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{vα, uα}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">pkg</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.closure_range","kind":"theorem","line":87,"name":"AbstractCompletion.closure_range","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L87-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.ofComplete\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">ofComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> uα}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{uα, uα}</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"If `α` is complete, then it is an abstract completion of itself. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.ofComplete","kind":"def","line":83,"name":"AbstractCompletion.ofComplete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L83-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.dense\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">dense</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span></span></div></div>","info":{"doc":"The map into the completion has dense range. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.dense","kind":"theorem","line":68,"name":"AbstractCompletion.dense","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.isUniformInducing\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">isUniformInducing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span></span></div></div>","info":{"doc":"The map into the completion is uniform-inducing. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.isUniformInducing","kind":"theorem","line":66,"name":"AbstractCompletion.isUniformInducing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.separation\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">separation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>","info":{"doc":"The completion is a T₀ space. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.separation","kind":"theorem","line":64,"name":"AbstractCompletion.separation","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.complete\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>","info":{"doc":"The completion is complete. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.complete","kind":"theorem","line":62,"name":"AbstractCompletion.complete","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformStruct\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">uniformStruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>","info":{"doc":"The completion carries a uniform structure. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.uniformStruct","kind":"def","line":60,"name":"AbstractCompletion.uniformStruct","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>","info":{"doc":"A map from a space to its completion. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe","kind":"def","line":58,"name":"AbstractCompletion.coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">space</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>","info":{"doc":"The underlying space of the completion. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space","kind":"def","line":56,"name":"AbstractCompletion.space","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.mk\"><span class=\"name\">AbstractCompletion</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">space</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coe</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">space</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uniformStruct</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">space</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">complete</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">space</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">separation</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">space</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isUniformInducing</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">coe</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">dense</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\">coe</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion.{v, u}</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.mk","kind":"ctor","line":54,"name":"AbstractCompletion.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\"><span class=\"name\">AbstractCompletion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u (v + 1))</div></div>","info":{"doc":"A completion of `α` is the data of a complete separated uniform space\nand a map from `α` with dense range and inducing the original uniform structure on `α`. ","docLink":"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion","kind":"structure","line":51,"name":"AbstractCompletion","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/UniformSpace/AbstractCompletion.lean#L51-L68"}}],"imports":["Init","Mathlib.Topology.UniformSpace.UniformEmbedding","Mathlib.Topology.UniformSpace.Equiv"],"instances":[],"name":"Mathlib.Topology.UniformSpace.AbstractCompletion"}