{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.commute_iff_of_mem_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">commute_iff_of_mem_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">k </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">hc'</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">k</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypePerm\">subtypePerm</a></span> <span class=\"fn\">hc'</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypePerm\">subtypePerm</a></span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.commute_iff_of_mem_cycleFactorsFinset","kind":"theorem","line":883,"name":"Equiv.Perm.commute_iff_of_mem_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L883-L895"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.subtypePerm_on_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subtypePerm_on_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypePerm\">subtypePerm</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.subtypePermOfSupport\">subtypePermOfSupport</a></span></div></div>","info":{"doc":"A permutation restricted to the support of a cycle factor is that cycle factor ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.subtypePerm_on_cycleFactorsFinset","kind":"theorem","line":875,"name":"Equiv.Perm.subtypePerm_on_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L875-L881"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.forall_commute_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsCycle</span>.<span class=\"name\">forall_commute_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g </span><span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ <span class=\"fn\">c</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ <span class=\"fn\">c</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">hc</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">z</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.ofSubtype\">ofSubtype</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypePerm\">subtypePerm</a></span> <span class=\"fn\">hc</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">c</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.forall_commute_iff","kind":"theorem","line":864,"name":"Equiv.Perm.IsCycle.forall_commute_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L864-L873"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_mul_inv_mem_eq_sdiff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_mul_inv_mem_eq_sdiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_mul_inv_mem_eq_sdiff","kind":"theorem","line":818,"name":"Equiv.Perm.cycleFactorsFinset_mul_inv_mem_eq_sdiff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L818-L862"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycle_induction_on\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycle_induction_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">β</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base_one</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base_cycles</span> : <span class=\"fn\">∀ (<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">β</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">σ</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">induction_disjoint</span> : <span class=\"fn\">∀ (<span class=\"fn\">σ </span><span class=\"fn\">τ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">β</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">τ</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">τ</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> (<span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">τ</span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycle_induction_on","kind":"theorem","line":796,"name":"Equiv.Perm.cycle_induction_on","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L796-L816"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_support\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_cycleFactorsFinset_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"If a permutation is a cycle of `g`, then its support is invariant under `g`. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_support","kind":"theorem","line":789,"name":"Equiv.Perm.mem_cycleFactorsFinset_support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L789-L792"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_cycle_of_cycle\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_support_cycle_of_cycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">d </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">d</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"If `c` and `d` are cycles of `g`, then `d` stabilizes the support of `c` ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_cycle_of_cycle","kind":"theorem","line":777,"name":"Equiv.Perm.mem_support_cycle_of_cycle","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L777-L787"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.self_mem_cycle_factors_commute\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">self_mem_cycle_factors_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">c</span> <span class=\"fn\">g</span></span></div></div>","info":{"doc":"The cycles of a permutation commute with it ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.self_mem_cycle_factors_commute","kind":"theorem","line":768,"name":"Equiv.Perm.self_mem_cycle_factors_commute","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L768-L775"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.commute_of_mem_cycleFactorsFinset_commute\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">commute_of_mem_cycleFactorsFinset_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">∀ <span class=\"fn\">c</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">k</span> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">k</span> <span class=\"fn\">g</span></span></div></div>","info":{"doc":"If a permutation commutes with every cycle of `g`, then it commutes with `g`\n\nNB. The converse is false. Commuting with every cycle of `g` means that we belong\nto the kernel of the action of `Equiv.Perm α` on `g.cycleFactorsFinset` ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.commute_of_mem_cycleFactorsFinset_commute","kind":"theorem","line":757,"name":"Equiv.Perm.commute_of_mem_cycleFactorsFinset_commute","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L757-L766"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_conj\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_cycleFactorsFinset_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g </span><span class=\"fn\">k </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span></div></div>","info":{"doc":"A permutation `c` is a cycle of `g` iff `k * c * k⁻¹` is a cycle of `k * g * k⁻¹` ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_conj","kind":"theorem","line":736,"name":"Equiv.Perm.mem_cycleFactorsFinset_conj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L736-L755"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.zpow_apply_mem_support_of_mem_cycleFactorsFinset_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">zpow_apply_mem_support_of_mem_cycleFactorsFinset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.zpow_apply_mem_support_of_mem_cycleFactorsFinset_iff","kind":"theorem","line":730,"name":"Equiv.Perm.zpow_apply_mem_support_of_mem_cycleFactorsFinset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L730-L734"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.eq_cycleOf_of_mem_cycleFactorsFinset_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">eq_cycleOf_of_mem_cycleFactorsFinset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.eq_cycleOf_of_mem_cycleFactorsFinset_iff","kind":"theorem","line":722,"name":"Equiv.Perm.eq_cycleOf_of_mem_cycleFactorsFinset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L722-L728"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycleOn_support_of_mem_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isCycleOn_support_of_mem_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycleOn\">IsCycleOn</a></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycleOn_support_of_mem_cycleFactorsFinset","kind":"theorem","line":715,"name":"Equiv.Perm.isCycleOn_support_of_mem_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L715-L720"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycle_is_cycleOf\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycle_is_cycleOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"If c is a cycle, a ∈ c.support and c is a cycle of f, then `c = f.cycleOf a` ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycle_is_cycleOf","kind":"theorem","line":697,"name":"Equiv.Perm.cycle_is_cycleOf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L697-L713"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.disjoint_mul_inv_of_mem_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">disjoint_mul_inv_of_mem_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>).<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.disjoint_mul_inv_of_mem_cycleFactorsFinset","kind":"theorem","line":687,"name":"Equiv.Perm.disjoint_mul_inv_of_mem_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L687-L695"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.Disjoint.cycleFactorsFinset_mul_eq_union\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">Disjoint</span>.<span class=\"name\">cycleFactorsFinset_mul_eq_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.Disjoint.cycleFactorsFinset_mul_eq_union","kind":"theorem","line":674,"name":"Equiv.Perm.Disjoint.cycleFactorsFinset_mul_eq_union","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L674-L685"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.Disjoint.disjoint_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">Disjoint</span>.<span class=\"name\">disjoint_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">_root_.Disjoint</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.Disjoint.disjoint_cycleFactorsFinset","kind":"theorem","line":664,"name":"Equiv.Perm.Disjoint.disjoint_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L664-L672"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_injective\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span></div></div>","info":{"doc":"Two permutations `f g : Perm α` have the same cycle factors iff they are the same. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_injective","kind":"theorem","line":658,"name":"Equiv.Perm.cycleFactorsFinset_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L658-L662"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_singleton_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_eq_singleton_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">g</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_singleton_iff","kind":"theorem","line":650,"name":"Equiv.Perm.cycleFactorsFinset_eq_singleton_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L650-L656"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.cycleFactorsFinset_eq_singleton\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsCycle</span>.<span class=\"name\">cycleFactorsFinset_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.cycleFactorsFinset_eq_singleton","kind":"theorem","line":646,"name":"Equiv.Perm.IsCycle.cycleFactorsFinset_eq_singleton","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L646-L648"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_singleton_self_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_eq_singleton_self_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_singleton_self_iff","kind":"theorem","line":642,"name":"Equiv.Perm.cycleFactorsFinset_eq_singleton_self_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L642-L644"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_one\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_one","kind":"theorem","line":638,"name":"Equiv.Perm.cycleFactorsFinset_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L638-L640"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_empty_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_eq_empty_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_empty_iff","kind":"theorem","line":635,"name":"Equiv.Perm.cycleFactorsFinset_eq_empty_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L635-L636"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_iff_mem_support_of_mem_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_support_iff_mem_support_of_mem_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">c</span> ∈ <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_iff_mem_support_of_mem_cycleFactorsFinset","kind":"theorem","line":625,"name":"Equiv.Perm.mem_support_iff_mem_support_of_mem_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L625-L633"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.commute_ofSubtype_noncommPiCoprod\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">commute_ofSubtype_noncommPiCoprod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.ofSubtype\">ofSubtype</a> <span class=\"fn\">u</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/NoncommPiCoprod.html#Subgroup.noncommPiCoprod\">Subgroup.noncommPiCoprod</a> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">v</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.commute_ofSubtype_noncommPiCoprod","kind":"theorem","line":620,"name":"Equiv.Perm.commute_ofSubtype_noncommPiCoprod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L620-L623"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.disjoint_ofSubtype_noncommPiCoprod\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">disjoint_ofSubtype_noncommPiCoprod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) → <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.ofSubtype\">ofSubtype</a> <span class=\"fn\">u</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/NoncommPiCoprod.html#Subgroup.noncommPiCoprod\">Subgroup.noncommPiCoprod</a> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">v</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.disjoint_ofSubtype_noncommPiCoprod","kind":"theorem","line":606,"name":"Equiv.Perm.disjoint_ofSubtype_noncommPiCoprod","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L606-L618"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pairwise_commute_of_mem_zpowers\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">pairwise_commute_of_mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> <span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt;\n  <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> → <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pairwise_commute_of_mem_zpowers","kind":"theorem","line":600,"name":"Equiv.Perm.pairwise_commute_of_mem_zpowers","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L600-L604"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pairwise_disjoint_of_mem_zpowers\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">pairwise_disjoint_of_mem_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> <span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt;\n  <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> → <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">j</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">y</span></span></span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pairwise_disjoint_of_mem_zpowers","kind":"theorem","line":591,"name":"Equiv.Perm.pairwise_disjoint_of_mem_zpowers","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L591-L598"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_zpowers_of_mem_cycleFactorsFinset_le\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">support_zpowers_of_mem_cycleFactorsFinset_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_zpowers_of_mem_cycleFactorsFinset_le","kind":"theorem","line":584,"name":"Equiv.Perm.support_zpowers_of_mem_cycleFactorsFinset_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L584-L589"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_support_le\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_cycleFactorsFinset_support_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_support_le","kind":"theorem","line":578,"name":"Equiv.Perm.mem_cycleFactorsFinset_support_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L578-L582"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_ne_one_iff_mem_cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_ne_one_iff_mem_cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_ne_one_iff_mem_cycleFactorsFinset","kind":"theorem","line":574,"name":"Equiv.Perm.cycleOf_ne_one_iff_mem_cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L574-L576"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_mem_cycleFactorsFinset_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_mem_cycleFactorsFinset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_mem_cycleFactorsFinset_iff","kind":"theorem","line":556,"name":"Equiv.Perm.cycleOf_mem_cycleFactorsFinset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L556-L572"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_cycleFactorsFinset_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">a</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_cycleFactorsFinset_iff","kind":"theorem","line":548,"name":"Equiv.Perm.mem_cycleFactorsFinset_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L548-L554"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_noncommProd\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_noncommProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comm</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span>.<a href=\"./Mathlib/Logic/Pairwise.html#Set.Pairwise\">Pairwise</a></span> <a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a></span> := <span class=\"fn\">⋯</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>.<a href=\"./Mathlib/Data/Finset/NoncommProd.html#Finset.noncommProd\">noncommProd</a></span> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">comm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"The product of cycle factors is equal to the original `f : perm α`. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_noncommProd","kind":"theorem","line":541,"name":"Equiv.Perm.cycleFactorsFinset_noncommProd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L541-L546"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_mem_commute'\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_mem_commute'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g1 </span><span class=\"fn\">g2</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">g1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">g2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">g1</span> <span class=\"fn\">g2</span></span></div></div>","info":{"doc":"Two cycles of a permutation commute. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_mem_commute'","kind":"theorem","line":533,"name":"Equiv.Perm.cycleFactorsFinset_mem_commute'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L533-L539"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_mem_commute\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_mem_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span>.<a href=\"./Mathlib/Logic/Pairwise.html#Set.Pairwise\">Pairwise</a></span> <a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a></span></div></div>","info":{"doc":"Two cycles of a permutation commute. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_mem_commute","kind":"theorem","line":529,"name":"Equiv.Perm.cycleFactorsFinset_mem_commute","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L529-L531"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_pairwise_disjoint\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_pairwise_disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span>)</span>.<a href=\"./Mathlib/Logic/Pairwise.html#Set.Pairwise\">Pairwise</a></span> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_pairwise_disjoint","kind":"theorem","line":525,"name":"Equiv.Perm.cycleFactorsFinset_pairwise_disjoint","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L525-L527"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_finset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_eq_finset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ <span class=\"fn\">f</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Logic/Pairwise.html#Set.Pairwise\">Pairwise</a></span> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Finset/NoncommProd.html#Finset.noncommProd\">noncommProd</a></span> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">σ</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_finset","kind":"theorem","line":517,"name":"Equiv.Perm.cycleFactorsFinset_eq_finset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L517-L523"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_list_toFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset_eq_list_toFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\">cycleFactorsFinset</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Data/Finset/Dedup.html#List.toFinset\">toFinset</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ <span class=\"fn\">f</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">σ</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset_eq_list_toFinset","kind":"theorem","line":494,"name":"Equiv.Perm.cycleFactorsFinset_eq_list_toFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L494-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"Factors a permutation `f` into a `Finset` of disjoint cyclic permutations that multiply to `f`.\n","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsFinset","kind":"def","line":482,"name":"Equiv.Perm.cycleFactorsFinset","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L482-L491"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.truncCycleFactors\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">truncCycleFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Trunc\">Trunc</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>","info":{"doc":"Factors a permutation `f` into a list of disjoint cyclic permutations that multiply to `f`,\nwithout a linear order. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.truncCycleFactors","kind":"def","line":471,"name":"Equiv.Perm.truncCycleFactors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L471-L476"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactors\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"Factors a permutation `f` into a list of disjoint cyclic permutations that multiply to `f`. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactors","kind":"def","line":466,"name":"Equiv.Perm.cycleFactors","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L466-L469"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.list_cycles_perm_list_cycles\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">list_cycles_perm_list_cycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁l₁</span> : <span class=\"fn\">∀ <span class=\"fn\">σ</span> ∈ <span class=\"fn\">l₁</span>, <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁l₂</span> : <span class=\"fn\">∀ <span class=\"fn\">σ</span> ∈ <span class=\"fn\">l₂</span>, <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂l₁</span> : <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">l₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂l₂</span> : <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">l₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">l₂</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.list_cycles_perm_list_cycles","kind":"theorem","line":452,"name":"Equiv.Perm.list_cycles_perm_list_cycles","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L452-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_list_cycles_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_list_cycles_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">∀ <span class=\"fn\">σ</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">σ</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">σ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">a</span> → <span class=\"fn\"><span class=\"fn\">σ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <span class=\"fn\">a</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_list_cycles_iff","kind":"theorem","line":424,"name":"Equiv.Perm.mem_list_cycles_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L424-L449"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsAux.go\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsAux</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfg</span> : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">pl</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">pl</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">g'</span> ∈ <span class=\"fn\">pl</span>, <span class=\"fn\"><span class=\"fn\">g'</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">pl</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"The auxiliary of `cycleFactorsAux`. This functions separates cycles from `f` instead of `g`\nto prevent the process of a cycle gets complex. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsAux.go","kind":"def","line":360,"name":"Equiv.Perm.cycleFactorsAux.go","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L360-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsAux\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleFactorsAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">pl</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">pl</span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/List/Defs.html#List.prod\">prod</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\">pl</span>, <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.Pairwise\">List.Pairwise</a> <a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a> <span class=\"fn\">pl</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"Given a list `l : List α` and a permutation `f : Perm α` whose nonfixed points are all in `l`,\nrecursively factors `f` into cycles. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleFactorsAux","kind":"def","line":351,"name":"Equiv.Perm.cycleFactorsAux","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L351-L422"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.zpow_eq_zpow_on_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">zpow_eq_zpow_on_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.zpow_eq_zpow_on_iff","kind":"theorem","line":329,"name":"Equiv.Perm.zpow_eq_zpow_on_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L329-L339"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.exists_pow_eq\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">SameCycle</span>.<span class=\"name\">exists_pow_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.exists_pow_eq","kind":"theorem","line":313,"name":"Equiv.Perm.SameCycle.exists_pow_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L313-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pow_mod_card_support_cycleOf_self_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">pow_mod_card_support_cycleOf_self_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span>)) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pow_mod_card_support_cycleOf_self_apply","kind":"theorem","line":306,"name":"Equiv.Perm.pow_mod_card_support_cycleOf_self_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L306-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.mem_support_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">SameCycle</span>.<span class=\"name\">mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.mem_support_iff","kind":"theorem","line":301,"name":"Equiv.Perm.SameCycle.mem_support_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L301-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_cycleOf_le\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">support_cycleOf_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_cycleOf_le","kind":"theorem","line":293,"name":"Equiv.Perm.support_cycleOf_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L293-L299"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.exists_pow_eq_of_mem_support\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">SameCycle</span>.<span class=\"name\">exists_pow_eq_of_mem_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">i</span> &lt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span>, <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.exists_pow_eq_of_mem_support","kind":"theorem","line":289,"name":"Equiv.Perm.SameCycle.exists_pow_eq_of_mem_support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L289-L291"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycleOn_support_cycleOf\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isCycleOn_support_cycleOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycleOn\">IsCycleOn</a></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycleOn_support_cycleOf","kind":"theorem","line":285,"name":"Equiv.Perm.isCycleOn_support_cycleOf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L285-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_cycleOf_eq_nil_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">support_cycleOf_eq_nil_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_cycleOf_eq_nil_iff","kind":"theorem","line":282,"name":"Equiv.Perm.support_cycleOf_eq_nil_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L282-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.sameCycle_iff_cycleOf_eq_of_mem_support\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">sameCycle_iff_cycleOf_eq_of_mem_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.sameCycle_iff_cycleOf_eq_of_mem_support","kind":"theorem","line":275,"name":"Equiv.Perm.sameCycle_iff_cycleOf_eq_of_mem_support","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L275-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_cycleOf_iff'\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_support_cycleOf_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_cycleOf_iff'","kind":"theorem","line":271,"name":"Equiv.Perm.mem_support_cycleOf_iff'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L271-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_cycleOf_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_support_cycleOf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.mem_support_cycleOf_iff","kind":"theorem","line":267,"name":"Equiv.Perm.mem_support_cycleOf_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L267-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_cycleOf_nonempty\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">support_cycleOf_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.support_cycleOf_nonempty","kind":"theorem","line":262,"name":"Equiv.Perm.support_cycleOf_nonempty","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L262-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.two_le_card_support_cycleOf_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">two_le_card_support_cycleOf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">support</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.two_le_card_support_cycleOf_iff","kind":"theorem","line":254,"name":"Equiv.Perm.two_le_card_support_cycleOf_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L254-L260"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.instDecidableRelSameCycle\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">instDecidableRelSameCycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.instDecidableRelSameCycle","kind":"instance","line":233,"name":"Equiv.Perm.instDecidableRelSameCycle","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L233-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycle_cycleOf_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isCycle_cycleOf_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"`x` is in the support of `f` iff `Equiv.Perm.cycle_of f x` is a cycle. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycle_cycleOf_iff","kind":"theorem","line":206,"name":"Equiv.Perm.isCycle_cycleOf_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L206-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.Disjoint.cycleOf_mul_distrib\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">Disjoint</span>.<span class=\"name\">cycleOf_mul_distrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.Disjoint\">Disjoint</a></span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.Disjoint.cycleOf_mul_distrib","kind":"theorem","line":181,"name":"Equiv.Perm.Disjoint.cycleOf_mul_distrib","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L181-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_mul_of_apply_right_eq_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_mul_of_apply_right_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>).<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_mul_of_apply_right_eq_self","kind":"theorem","line":167,"name":"Equiv.Perm.cycleOf_mul_of_apply_right_eq_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L167-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pow_mod_orderOf_cycleOf_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">pow_mod_orderOf_cycleOf_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span></span>)) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.pow_mod_orderOf_cycleOf_apply","kind":"theorem","line":163,"name":"Equiv.Perm.pow_mod_orderOf_cycleOf_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L163-L165"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycle_cycleOf\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isCycle_cycleOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.isCycle_cycleOf","kind":"theorem","line":151,"name":"Equiv.Perm.isCycle_cycleOf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L151-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_one\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a> <span class=\"fn\">1</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a> <span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_one","kind":"theorem","line":148,"name":"Equiv.Perm.cycleOf_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L148-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.cycleOf\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsCycle</span>.<span class=\"name\">cycleOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.cycleOf","kind":"theorem","line":142,"name":"Equiv.Perm.IsCycle.cycleOf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L142-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_self_apply_zpow\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_self_apply_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_self_apply_zpow","kind":"theorem","line":137,"name":"Equiv.Perm.cycleOf_self_apply_zpow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L137-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_self_apply_pow\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_self_apply_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_self_apply_pow","kind":"theorem","line":132,"name":"Equiv.Perm.cycleOf_self_apply_pow","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L132-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_self_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_self_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_self_apply","kind":"theorem","line":127,"name":"Equiv.Perm.cycleOf_self_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L127-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_eq_one_iff\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_eq_one_iff","kind":"theorem","line":119,"name":"Equiv.Perm.cycleOf_eq_one_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L119-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.cycleOf_eq\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsCycle</span>.<span class=\"name\">cycleOf_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.IsCycle\">IsCycle</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.IsCycle.cycleOf_eq","kind":"theorem","line":111,"name":"Equiv.Perm.IsCycle.cycleOf_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L111-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_apply_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_self","kind":"theorem","line":107,"name":"Equiv.Perm.cycleOf_apply_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L107-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_apply_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_apply_apply_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_apply_self","kind":"theorem","line":102,"name":"Equiv.Perm.cycleOf_apply_apply_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L102-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_apply_pow_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_apply_apply_pow_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>) <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)) <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_apply_pow_self","kind":"theorem","line":97,"name":"Equiv.Perm.cycleOf_apply_apply_pow_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L97-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_apply_zpow_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_apply_apply_zpow_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">((<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>) <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)) <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_apply_zpow_self","kind":"theorem","line":90,"name":"Equiv.Perm.cycleOf_apply_apply_zpow_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L90-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.cycleOf_eq\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">SameCycle</span>.<span class=\"name\">cycleOf_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.cycleOf_eq","kind":"theorem","line":82,"name":"Equiv.Perm.SameCycle.cycleOf_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L82-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_of_not_sameCycle\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_apply_of_not_sameCycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply_of_not_sameCycle","kind":"theorem","line":78,"name":"Equiv.Perm.cycleOf_apply_of_not_sameCycle","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.cycleOf_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">SameCycle</span>.<span class=\"name\">cycleOf_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.SameCycle.cycleOf_apply","kind":"theorem","line":74,"name":"Equiv.Perm.SameCycle.cycleOf_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L74-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_zpow_apply_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_zpow_apply_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_zpow_apply_self","kind":"theorem","line":65,"name":"Equiv.Perm.cycleOf_zpow_apply_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L65-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_pow_apply_self\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_pow_apply_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>) <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_pow_apply_self","kind":"theorem","line":55,"name":"Equiv.Perm.cycleOf_pow_apply_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L55-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_inv\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_inv","kind":"theorem","line":49,"name":"Equiv.Perm.cycleOf_inv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L49-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\">cycleOf</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf_apply","kind":"theorem","line":40,"name":"Equiv.Perm.cycleOf_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L40-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">cycleOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/GroupTheory/Perm/Cycle/Basic.html#Equiv.Perm.SameCycle\">SameCycle</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"`f.cycleOf x` is the cycle of the permutation `f` to which `x` belongs. ","docLink":"./Mathlib/GroupTheory/Perm/Cycle/Factors.html#Equiv.Perm.cycleOf","kind":"def","line":36,"name":"Equiv.Perm.cycleOf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/GroupTheory/Perm/Cycle/Factors.lean#L36-L38"}}],"imports":["Init","Mathlib.Data.List.Iterate","Mathlib.GroupTheory.Perm.Cycle.Basic","Mathlib.GroupTheory.NoncommPiCoprod","Mathlib.Tactic.Group"],"instances":[{"className":"Decidable","name":"Equiv.Perm.instDecidableRelSameCycle","typeNames":["Equiv.Perm.SameCycle"]}],"name":"Mathlib.GroupTheory.Perm.Cycle.Factors"}