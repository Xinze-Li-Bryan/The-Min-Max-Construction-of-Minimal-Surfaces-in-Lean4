{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_le_fixedPoint\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">ωSup_iterate_le_fixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_a</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_x_le_a</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\">iterateChain</a> <span class=\"fn\">(↑<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"The supremum of iterating a function on x arbitrary often is smaller than any fixed point. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_le_fixedPoint","kind":"theorem","line":812,"name":"OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_le_fixedPoint","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L812-L818"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_le_prefixedPoint\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">ωSup_iterate_le_prefixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_a</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_x_le_a</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\">iterateChain</a> <span class=\"fn\">(↑<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"The supremum of iterating a function on x arbitrary often is smaller than any prefixed point.\n\nA prefixed point is a value `a` with `f a ≤ a`. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_le_prefixedPoint","kind":"theorem","line":796,"name":"OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_le_prefixedPoint","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L796-L810"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_mem_fixedPoint\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">ωSup_iterate_mem_fixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\">iterateChain</a> <span class=\"fn\">(↑<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"The supremum of iterating a function on x arbitrary often is a fixed point ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_mem_fixedPoint","kind":"theorem","line":774,"name":"OmegaCompletePartialOrder.fixedPoints.ωSup_iterate_mem_fixedPoint","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L774-L794"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">fixedPoints</span>.<span class=\"name\">iterateChain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Iteration of a function on an initial element interpreted as a chain. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.fixedPoints.iterateChain","kind":"def","line":768,"name":"OmegaCompletePartialOrder.fixedPoints.iterateChain","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L768-L770"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\">β</span> → <span class=\"fn\">γ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq\">seq</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> &lt;*&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq_apply","kind":"theorem","line":755,"name":"OmegaCompletePartialOrder.ContinuousHom.seq_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L755-L755"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\">β</span> → <span class=\"fn\">γ</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></div></div>","info":{"doc":"`Part.seq` as a continuous function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.seq","kind":"def","line":754,"name":"OmegaCompletePartialOrder.ContinuousHom.seq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L754-L760"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.map\">Part.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_apply","kind":"theorem","line":747,"name":"OmegaCompletePartialOrder.ContinuousHom.map_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L747-L747"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></div></div>","info":{"doc":"`Part.map` as a continuous function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map","kind":"def","line":746,"name":"OmegaCompletePartialOrder.ContinuousHom.map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L746-L752"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind\">bind</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Part.html#Part.bind\">bind</a></span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind_apply","kind":"theorem","line":740,"name":"OmegaCompletePartialOrder.ContinuousHom.bind_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L740-L740"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></div></div>","info":{"doc":"`Part.bind` as a continuous function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.bind","kind":"def","line":739,"name":"OmegaCompletePartialOrder.ContinuousHom.bind","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L739-L744"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">flip_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip\">flip</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip_apply","kind":"theorem","line":733,"name":"OmegaCompletePartialOrder.ContinuousHom.flip_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L733-L733"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">γ</span></span></div></div>","info":{"doc":"A family of continuous functions yields a continuous family of functions. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.flip","kind":"def","line":732,"name":"OmegaCompletePartialOrder.ContinuousHom.flip","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L732-L737"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_apply_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωSup_apply_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c₀</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\">Prod.apply</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c₀</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">c₁</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_apply_ωSup","kind":"theorem","line":729,"name":"OmegaCompletePartialOrder.ContinuousHom.ωSup_apply_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L729-L730"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Prod</span>.<span class=\"name\">apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\">apply</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.1</span> <span class=\"fn\"><span class=\"fn\">f</span>.2</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply","kind":"theorem","line":701,"name":"OmegaCompletePartialOrder.ContinuousHom.Prod.apply_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L701-L701"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Prod</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"The application of continuous functions as a continuous function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Prod.apply","kind":"def","line":700,"name":"OmegaCompletePartialOrder.ContinuousHom.Prod.apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L700-L725"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_def\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωSup_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup\">ContinuousHom.ωSup</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_def","kind":"theorem","line":693,"name":"OmegaCompletePartialOrder.ContinuousHom.ωSup_def","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L693-L693"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.inst\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">inst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.inst","kind":"instance","line":693,"name":"OmegaCompletePartialOrder.ContinuousHom.inst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L693-L696"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωSup_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup\">ContinuousHom.ωSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\">toMono</a>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_apply","kind":"theorem","line":688,"name":"OmegaCompletePartialOrder.ContinuousHom.ωSup_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L688-L688"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"The `ωSup` operator for continuous functions, which takes the pointwise countable supremum\nof the functions in the `ω`-chain. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup","kind":"def","line":686,"name":"OmegaCompletePartialOrder.ContinuousHom.ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L686-L691"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">forall_forall_merge'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">j </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c₀</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c₁</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c₀</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c₁</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'","kind":"theorem","line":681,"name":"OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L681-L684"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">forall_forall_merge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c₀</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c₁</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c₀</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">c₁</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span></span></div></div>","info":{"doc":"When proving that a chain of applications is below a bound `z`, it suffices to consider the\nfunctions and values being selected from the same index in the chains.\n\nThis lemma is more specific than necessary, i.e. `c₀` only needs to be a\nchain of monotone functions, but it is only used with continuous functions. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge","kind":"theorem","line":663,"name":"OmegaCompletePartialOrder.ContinuousHom.forall_forall_merge","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L663-L679"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toMono_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\">toMono</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono_coe","kind":"theorem","line":658,"name":"OmegaCompletePartialOrder.ContinuousHom.toMono_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L658-L658"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>) <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"The map from continuous functions to monotone functions is itself a monotone function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toMono","kind":"def","line":657,"name":"OmegaCompletePartialOrder.ContinuousHom.toMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L657-L661"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instInhabited\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.instInhabited","kind":"instance","line":654,"name":"OmegaCompletePartialOrder.ContinuousHom.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L654-L655"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">const_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const\">const</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const_apply","kind":"theorem","line":651,"name":"OmegaCompletePartialOrder.ContinuousHom.const_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L651-L651"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"`Function.const` is a continuous function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.const","kind":"def","line":650,"name":"OmegaCompletePartialOrder.ContinuousHom.const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L650-L652"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_apply","kind":"theorem","line":646,"name":"OmegaCompletePartialOrder.ContinuousHom.coe_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L646-L648"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_assoc\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">γ</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">δ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">h</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_assoc","kind":"theorem","line":642,"name":"OmegaCompletePartialOrder.ContinuousHom.comp_assoc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L642-L644"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\">id</a>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_comp","kind":"theorem","line":639,"name":"OmegaCompletePartialOrder.ContinuousHom.id_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L639-L640"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\">id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_id","kind":"theorem","line":636,"name":"OmegaCompletePartialOrder.ContinuousHom.comp_id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L636-L637"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_inj\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_inj","kind":"theorem","line":633,"name":"OmegaCompletePartialOrder.ContinuousHom.coe_inj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L633-L634"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext_iff","kind":"theorem","line":630,"name":"OmegaCompletePartialOrder.ContinuousHom.ext_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L630-L630"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ext","kind":"theorem","line":630,"name":"OmegaCompletePartialOrder.ContinuousHom.ext","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L630-L631"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\">comp</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp_apply","kind":"theorem","line":626,"name":"OmegaCompletePartialOrder.ContinuousHom.comp_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L626-L626"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">γ</span></div></div>","info":{"doc":"The composition of continuous functions. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.comp","kind":"def","line":625,"name":"OmegaCompletePartialOrder.ContinuousHom.comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L625-L628"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\">id</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id_apply","kind":"theorem","line":622,"name":"OmegaCompletePartialOrder.ContinuousHom.id_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L622-L622"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">α</span></div></div>","info":{"doc":"The identity as a continuous function. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.id","kind":"def","line":621,"name":"OmegaCompletePartialOrder.ContinuousHom.id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L621-L623"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy_apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">copy_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy\">copy</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy_apply","kind":"theorem","line":616,"name":"OmegaCompletePartialOrder.ContinuousHom.copy_apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L616-L616"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"Construct a continuous function from a bare function, a continuous function, and a proof that\nthey are equal. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.copy","kind":"def","line":614,"name":"OmegaCompletePartialOrder.ContinuousHom.copy","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L614-L619"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.continuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">↑<span class=\"fn\">F</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.continuous","kind":"theorem","line":611,"name":"OmegaCompletePartialOrder.ContinuousHom.continuous","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L611-L612"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.seq\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">(<span class=\"fn\">β</span> → <span class=\"fn\">γ</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> &lt;*&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.seq","kind":"theorem","line":606,"name":"OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.seq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L606-L609"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.map","kind":"theorem","line":602,"name":"OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L602-L604"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.bind","kind":"theorem","line":597,"name":"OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous.bind","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L597-L600"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_bind\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωSup_bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Part.html#OrderHom.partBind\">partBind</a></span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωSup_bind","kind":"theorem","line":570,"name":"OmegaCompletePartialOrder.ContinuousHom.ωSup_bind","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L570-L594"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.apply_mono\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">apply_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.apply_mono","kind":"theorem","line":566,"name":"OmegaCompletePartialOrder.ContinuousHom.apply_mono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L566-L568"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.monotone\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.monotone","kind":"theorem","line":563,"name":"OmegaCompletePartialOrder.ContinuousHom.monotone","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L563-L564"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_arg\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">congr_arg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_arg","kind":"theorem","line":560,"name":"OmegaCompletePartialOrder.ContinuousHom.congr_arg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L560-L561"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_fun\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">congr_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.congr_fun","kind":"theorem","line":557,"name":"OmegaCompletePartialOrder.ContinuousHom.congr_fun","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L557-L558"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Simps.apply\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">Simps</span>.<span class=\"name\">apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span></div></div>","info":{"doc":"See Note [custom simps projection]. We specify this explicitly because we don't have a DFunLike\ninstance.\n","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.Simps.apply","kind":"def","line":549,"name":"OmegaCompletePartialOrder.ContinuousHom.Simps.apply","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L549-L553"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\">toOrderHom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom","kind":"theorem","line":547,"name":"OmegaCompletePartialOrder.ContinuousHom.coe_toOrderHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L547-L547"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\">{</a> <span class=\"fn\">toOrderHom</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_ωSup'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.coe_mk","kind":"theorem","line":545,"name":"OmegaCompletePartialOrder.ContinuousHom.coe_mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L545-L545"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toOrderHom_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\">toOrderHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe","kind":"theorem","line":543,"name":"OmegaCompletePartialOrder.ContinuousHom.toOrderHom_eq_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L543-L543"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">ωScottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous","kind":"theorem","line":539,"name":"OmegaCompletePartialOrder.ContinuousHom.ωScottContinuous","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L539-L540"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instPartialOrderContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instPartialOrderContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instPartialOrderContinuousHom","kind":"instance","line":534,"name":"OmegaCompletePartialOrder.instPartialOrderContinuousHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L534-L535"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instOrderHomClassContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instOrderHomClassContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>) <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instOrderHomClassContinuousHom","kind":"instance","line":531,"name":"OmegaCompletePartialOrder.instOrderHomClassContinuousHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L531-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instFunLikeContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">instFunLikeContinuousHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>) <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.instFunLikeContinuousHom","kind":"instance","line":527,"name":"OmegaCompletePartialOrder.instFunLikeContinuousHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L527-L529"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.«term_→𝒄_»\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">«term_→𝒄_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>","info":{"doc":"A monotone function on `ω`-continuous partial orders is said to be continuous\nif for every chain `c : chain α`, `f (⊔ i, c i) = ⊔ i, f (c i)`.\nThis is just the bundled version of `OrderHom.continuous`. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.«term_→𝒄_»","kind":"def","line":525,"name":"OmegaCompletePartialOrder.«term_→𝒄_»","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L525-L525"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_ωSup'\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">map_ωSup'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\">toOrderHom</a></span>)</span></span></div></div>","info":{"doc":"The underlying function of a `ContinuousHom` is continuous, i.e. it preserves `ωSup` ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.map_ωSup'","kind":"theorem","line":521,"name":"OmegaCompletePartialOrder.ContinuousHom.map_ωSup'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L521-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toOrderHom</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_ωSup'</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toOrderHom</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">toOrderHom</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.mk","kind":"ctor","line":519,"name":"OmegaCompletePartialOrder.ContinuousHom.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L519-L519"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span>.<span class=\"name\">toOrderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\">→𝒄</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom.toOrderHom","kind":"def","line":519,"name":"OmegaCompletePartialOrder.ContinuousHom.toOrderHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L519-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ContinuousHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_2 u_3)</div></div>","info":{"doc":"A monotone function on `ω`-continuous partial orders is said to be continuous\nif for every chain `c : chain α`, `f (⊔ i, c i) = ⊔ i, f (c i)`.\nThis is just the bundled version of `OrderHom.continuous`. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ContinuousHom","kind":"structure","line":516,"name":"OmegaCompletePartialOrder.ContinuousHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L516-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_ωSup_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">omegaCompletePartialOrder_ωSup_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_ωSup_coe","kind":"theorem","line":509,"name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder_ωSup_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L509-L509"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">omegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","kind":"instance","line":509,"name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L509-L511"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.ωSup_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">ωSup_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.ωSup\">OrderHom.ωSup</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.apply\">OrderHom.apply</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.ωSup_coe","kind":"theorem","line":504,"name":"OmegaCompletePartialOrder.OrderHom.ωSup_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L504-L504"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">OrderHom</span>.<span class=\"name\">ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"The `ωSup` operator for monotone functions. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.OrderHom.ωSup","kind":"def","line":503,"name":"OmegaCompletePartialOrder.OrderHom.ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L503-L507"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.inf\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLinearOrder\">CompleteLinearOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">(<span class=\"fn\">f</span> ⊓ <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.inf","kind":"theorem","line":485,"name":"CompleteLattice.ωScottContinuous.inf","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L485-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.bot\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.bot","kind":"theorem","line":470,"name":"CompleteLattice.ωScottContinuous.bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L470-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.top\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.top","kind":"theorem","line":466,"name":"CompleteLattice.ωScottContinuous.top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L466-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.sup\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">(<span class=\"fn\">f</span> ⊔ <span class=\"fn\">g</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.sup","kind":"theorem","line":460,"name":"CompleteLattice.ωScottContinuous.sup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L460-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.sSup\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">∀ <span class=\"fn\">f</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#SupSet.sSup\">SupSet.sSup</a> <span class=\"fn\">s</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.sSup","kind":"theorem","line":456,"name":"CompleteLattice.ωScottContinuous.sSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L456-L458"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.iSup\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">(⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.iSup","kind":"theorem","line":450,"name":"CompleteLattice.ωScottContinuous.iSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L450-L454"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.prodMk\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">prodMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.ωScottContinuous.prodMk","kind":"theorem","line":446,"name":"CompleteLattice.ωScottContinuous.prodMk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L446-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.instOmegaCompletePartialOrder\"><span class=\"name\">CompleteLattice</span>.<span class=\"name\">instOmegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"Any complete lattice has an `ω`-CPO structure where the countable supremum is a special case\nof arbitrary suprema. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#CompleteLattice.instOmegaCompletePartialOrder","kind":"instance","line":434,"name":"CompleteLattice.instOmegaCompletePartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L434-L439"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSup_zip\"><span class=\"name\">Prod</span>.<span class=\"name\">ωSup_zip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c₀</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">c₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">c₀</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">c₁</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSup_zip","kind":"theorem","line":427,"name":"Prod.ωSup_zip","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L427-L427"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSup_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">ωSup_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">c</span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.fst\">OrderHom.fst</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSup_fst","kind":"theorem","line":421,"name":"Prod.ωSup_fst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L421-L421"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSup_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">ωSup_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">c</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.snd\">OrderHom.snd</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSup_snd","kind":"theorem","line":421,"name":"Prod.ωSup_snd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L421-L421"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder\"><span class=\"name\">Prod</span>.<span class=\"name\">instOmegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.instOmegaCompletePartialOrder","kind":"instance","line":421,"name":"Prod.instOmegaCompletePartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L421-L425"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl_fst\"><span class=\"name\">Prod</span>.<span class=\"name\">ωSupImpl_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl\">Prod.ωSupImpl</a> <span class=\"fn\">c</span>)</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.fst\">OrderHom.fst</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl_fst","kind":"theorem","line":417,"name":"Prod.ωSupImpl_fst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L417-L417"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl_snd\"><span class=\"name\">Prod</span>.<span class=\"name\">ωSupImpl_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl\">Prod.ωSupImpl</a> <span class=\"fn\">c</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.snd\">OrderHom.snd</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl_snd","kind":"theorem","line":417,"name":"Prod.ωSupImpl_snd","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L417-L417"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl\"><span class=\"name\">Prod</span>.<span class=\"name\">ωSupImpl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span></div></div>","info":{"doc":"The supremum of a chain in the product `ω`-CPO. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Prod.ωSupImpl","kind":"def","line":416,"name":"Prod.ωSupImpl","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L416-L419"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous_iff_apply₂\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous_iff_apply₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous_iff_apply₂","kind":"theorem","line":403,"name":"OmegaCompletePartialOrder.ωScottContinuous_iff_apply₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L403-L404"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.of_apply₂\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">of_apply₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.of_apply₂","kind":"theorem","line":399,"name":"OmegaCompletePartialOrder.ωScottContinuous.of_apply₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L399-L401"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.apply₂\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">apply₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">γ</span> → <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">γ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.apply₂","kind":"theorem","line":395,"name":"OmegaCompletePartialOrder.ωScottContinuous.apply₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L395-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#instOmegaCompletePartialOrderForall\"><span class=\"name\">instOmegaCompletePartialOrderForall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#instOmegaCompletePartialOrderForall","kind":"instance","line":380,"name":"instOmegaCompletePartialOrderForall","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L380-L387"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_ωSup\"><span class=\"name\">Part</span>.<span class=\"name\">mem_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">OmegaCompletePartialOrder.ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_ωSup","kind":"theorem","line":354,"name":"Part.mem_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L354-L370"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.omegaCompletePartialOrder\"><span class=\"name\">Part</span>.<span class=\"name\">omegaCompletePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.omegaCompletePartialOrder","kind":"instance","line":335,"name":"Part.omegaCompletePartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L335-L350"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_chain_of_mem_ωSup\"><span class=\"name\">Part</span>.<span class=\"name\">mem_chain_of_mem_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup\">Part.ωSup</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.mem_chain_of_mem_ωSup","kind":"theorem","line":327,"name":"Part.mem_chain_of_mem_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L327-L333"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup_eq_none\"><span class=\"name\">Part</span>.<span class=\"name\">ωSup_eq_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup\">Part.ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Part.html#Part.none\">none</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup_eq_none","kind":"theorem","line":324,"name":"Part.ωSup_eq_none","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L324-L325"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup_eq_some\"><span class=\"name\">Part</span>.<span class=\"name\">ωSup_eq_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup\">Part.ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup_eq_some","kind":"theorem","line":317,"name":"Part.ωSup_eq_some","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L317-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup\"><span class=\"name\">Part</span>.<span class=\"name\">ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"The (noncomputable) `ωSup` definition for the `ω`-CPO structure on `Part α`. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.ωSup","kind":"def","line":313,"name":"Part.ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L313-L315"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.eq_of_chain\"><span class=\"name\">Part</span>.<span class=\"name\">eq_of_chain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">OmegaCompletePartialOrder.Chain</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Part.html#Part\">Part</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Part.html#Part.some\">some</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#Part.eq_of_chain","kind":"theorem","line":304,"name":"Part.eq_of_chain","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L304-L310"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.const\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <span class=\"fn\">α</span> <span class=\"fn\">x</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.const","kind":"theorem","line":295,"name":"OmegaCompletePartialOrder.ωScottContinuous.const","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L295-L296"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.comp","kind":"theorem","line":290,"name":"OmegaCompletePartialOrder.ωScottContinuous.comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L290-L293"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.of_map_ωSup_of_orderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">of_map_ωSup_of_orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `OmegaCompletePartialOrder.ωScottContinuous_iff_map_ωSup_of_orderHom`.","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.of_map_ωSup_of_orderHom","kind":"theorem","line":287,"name":"OmegaCompletePartialOrder.ωScottContinuous.of_map_ωSup_of_orderHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L287-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.map_ωSup_of_orderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">map_ωSup_of_orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> → <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span></span></div></div>","info":{"doc":"**Alias** of the forward direction of `OmegaCompletePartialOrder.ωScottContinuous_iff_map_ωSup_of_orderHom`.","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.map_ωSup_of_orderHom","kind":"theorem","line":287,"name":"OmegaCompletePartialOrder.ωScottContinuous.map_ωSup_of_orderHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L287-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous_iff_map_ωSup_of_orderHom\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous_iff_map_ωSup_of_orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous_iff_map_ωSup_of_orderHom","kind":"theorem","line":282,"name":"OmegaCompletePartialOrder.ωScottContinuous_iff_map_ωSup_of_orderHom","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L282-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.of_monotone_map_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">of_monotone_map_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∃ (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>), <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `OmegaCompletePartialOrder.ωScottContinuous_iff_monotone_map_ωSup`.\n\n---\n\n`ωScottContinuous f` asserts that `f` is both monotone and distributes over ωSup. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.of_monotone_map_ωSup","kind":"theorem","line":278,"name":"OmegaCompletePartialOrder.ωScottContinuous.of_monotone_map_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L278-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.monotone_map_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">monotone_map_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>), <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></span></span></span></div></div>","info":{"doc":"**Alias** of the forward direction of `OmegaCompletePartialOrder.ωScottContinuous_iff_monotone_map_ωSup`.\n\n---\n\n`ωScottContinuous f` asserts that `f` is both monotone and distributes over ωSup. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.monotone_map_ωSup","kind":"theorem","line":278,"name":"OmegaCompletePartialOrder.ωScottContinuous.monotone_map_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L278-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous_iff_monotone_map_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous_iff_monotone_map_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span>), <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">hf</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></span></span></div></div>","info":{"doc":"`ωScottContinuous f` asserts that `f` is both monotone and distributes over ωSup. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous_iff_monotone_map_ωSup","kind":"theorem","line":268,"name":"OmegaCompletePartialOrder.ωScottContinuous_iff_monotone_map_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L268-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.map_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">map_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.map_ωSup","kind":"theorem","line":265,"name":"OmegaCompletePartialOrder.ωScottContinuous.map_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L265-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <a href=\"./Init/Prelude.html#id\">_root_.id</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.id","kind":"theorem","line":263,"name":"OmegaCompletePartialOrder.ωScottContinuous.id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L263-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.isLUB\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">isLUB</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">monotone'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.mk\">}</a>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.isLUB","kind":"theorem","line":258,"name":"OmegaCompletePartialOrder.ωScottContinuous.isLUB","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L258-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.monotone\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span>.<span class=\"name\">monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">ωScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous.monotone","kind":"theorem","line":254,"name":"OmegaCompletePartialOrder.ωScottContinuous.monotone","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L254-L256"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#ScottContinuous.ωScottContinuous\"><span class=\"name\">ScottContinuous</span>.<span class=\"name\">ωScottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/ScottContinuity.html#ScottContinuous\">ScottContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\">OmegaCompletePartialOrder.ωScottContinuous</a> <span class=\"fn\">f</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#ScottContinuous.ωScottContinuous","kind":"theorem","line":251,"name":"ScottContinuous.ωScottContinuous","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L251-L252"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωScottContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A function `f` between `ω`-complete partial orders is `ωScottContinuous` if it is\nScott continuous over chains. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωScottContinuous","kind":"def","line":246,"name":"OmegaCompletePartialOrder.ωScottContinuous","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L246-L249"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.subtype\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Subtype\">Subtype</a> <span class=\"fn\">p</span>)</span></span></div></div>","info":{"doc":"A subset `p : α → Prop` of the type closed under `ωSup` induces an\n`OmegaCompletePartialOrder` on the subtype `{a : α // p a}`. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.subtype","kind":"def","line":232,"name":"OmegaCompletePartialOrder.subtype","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L232-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_eq_of_isLUB\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωSup_eq_of_isLUB</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">c</span></span>)</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_eq_of_isLUB","kind":"theorem","line":222,"name":"OmegaCompletePartialOrder.ωSup_eq_of_isLUB","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L222-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_range_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">isLUB_range_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#IsLUB\">IsLUB</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">c</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.isLUB_range_ωSup","kind":"theorem","line":213,"name":"OmegaCompletePartialOrder.isLUB_range_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L213-L220"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_le_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωSup_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_le_iff","kind":"theorem","line":206,"name":"OmegaCompletePartialOrder.ωSup_le_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L206-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_le_ωSup_of_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωSup_le_ωSup_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c₀ </span><span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c₀</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c₀</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c₁</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_le_ωSup_of_le","kind":"theorem","line":200,"name":"OmegaCompletePartialOrder.ωSup_le_ωSup_of_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L200-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_total\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωSup_total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_total","kind":"theorem","line":191,"name":"OmegaCompletePartialOrder.ωSup_total","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L191-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_ωSup_of_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">le_ωSup_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_ωSup_of_le","kind":"theorem","line":188,"name":"OmegaCompletePartialOrder.le_ωSup_of_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L188-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.lift\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ωSup₀</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">β</span></span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span> → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">β</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">ωSup₀</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"Transfer an `OmegaCompletePartialOrder` on `β` to an `OmegaCompletePartialOrder` on `α`\nusing a strictly monotone function `f : β →o α`, a definition of ωSup and a proof that `f` is\ncontinuous with regard to the provided `ωSup` and the ωCPO on `α`. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.lift","kind":"def","line":178,"name":"OmegaCompletePartialOrder.lift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L178-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_le\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωSup_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"`ωSup` is a lower bound of the set of upper bounds of the increasing sequence ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup_le","kind":"theorem","line":173,"name":"OmegaCompletePartialOrder.ωSup_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L173-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">le_ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\">ωSup</a> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"`ωSup` is an upper bound of the increasing sequence ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.le_ωSup","kind":"theorem","line":171,"name":"OmegaCompletePartialOrder.le_ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">ωSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"The supremum of an increasing sequence ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.ωSup","kind":"def","line":169,"name":"OmegaCompletePartialOrder.ωSup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L169-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.mk\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toPartialOrder</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ωSup</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">le_ωSup</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">ωSup</span> <span class=\"fn\">c</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ωSup_le</span> : <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">c</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span> → <span class=\"fn\"><span class=\"fn\">ωSup</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.mk","kind":"ctor","line":167,"name":"OmegaCompletePartialOrder.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L167-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.toPartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">toPartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\">OmegaCompletePartialOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.toPartialOrder","kind":"def","line":167,"name":"OmegaCompletePartialOrder.toPartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L167-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder\"><span class=\"name\">OmegaCompletePartialOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_6</div></div>","info":{"doc":"An omega-complete partial order is a partial order with a supremum\noperation on increasing sequences indexed by natural numbers (which we\ncall `ωSup`). In this sense, it is strictly weaker than join complete\nsemi-lattices as only ω-sized totally ordered sets have a supremum.\n\nSee the definition on page 114 of [gunter1992]. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder","kind":"class","line":161,"name":"OmegaCompletePartialOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L161-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zip_pair\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair_zip_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a₁ </span><span class=\"fn\">a₂</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b₁ </span><span class=\"fn\">b₂</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a₁</span> <span class=\"fn\">a₂</span> <span class=\"fn\">ha</span>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">b₁</span> <span class=\"fn\">b₂</span> <span class=\"fn\">hb</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₁</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a₂</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zip_pair","kind":"theorem","line":151,"name":"OmegaCompletePartialOrder.Chain.pair_zip_pair","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L151-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.range_pair\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">range_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.range_pair","kind":"theorem","line":148,"name":"OmegaCompletePartialOrder.Chain.range_pair","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L148-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_succ\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span>)</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_succ","kind":"theorem","line":146,"name":"OmegaCompletePartialOrder.Chain.pair_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L146-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zero\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\">pair</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">hab</span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair_zero","kind":"theorem","line":145,"name":"OmegaCompletePartialOrder.Chain.pair_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L145-L145"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"An example of a `Chain` constructed from an ordered pair. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.pair","kind":"def","line":138,"name":"OmegaCompletePartialOrder.Chain.pair","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L138-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">zip_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c₀</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\">zip</a></span> <span class=\"fn\">c₁</span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">c₀</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">c₁</span> <span class=\"fn\">n</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip_coe","kind":"theorem","line":136,"name":"OmegaCompletePartialOrder.Chain.zip_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">zip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></div></div>","info":{"doc":"`OmegaCompletePartialOrder.Chain.zip` pairs up the elements of two chains\nthat have the same index. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.zip","kind":"def","line":129,"name":"OmegaCompletePartialOrder.Chain.zip","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L129-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_le_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_le_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_le_map","kind":"theorem","line":125,"name":"OmegaCompletePartialOrder.Chain.map_le_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L125-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_comp\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_comp","kind":"theorem","line":122,"name":"OmegaCompletePartialOrder.Chain.map_comp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L122-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_id\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.id\">OrderHom.id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_id","kind":"theorem","line":118,"name":"OmegaCompletePartialOrder.Chain.map_id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L118-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">mem_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map_iff","kind":"theorem","line":111,"name":"OmegaCompletePartialOrder.Chain.mem_map_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L111-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.exists_of_mem_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">exists_of_mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span> → <span class=\"fn\">∃ <span class=\"fn\">a</span> ∈ <span class=\"fn\">c</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.exists_of_mem_map","kind":"theorem","line":108,"name":"OmegaCompletePartialOrder.Chain.exists_of_mem_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L108-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">c</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.mem_map","kind":"theorem","line":105,"name":"OmegaCompletePartialOrder.Chain.mem_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L105-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_coe\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\">map</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map_coe","kind":"theorem","line":101,"name":"OmegaCompletePartialOrder.Chain.map_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">β</span></span></div></div>","info":{"doc":"`map` function for `Chain` ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.map","kind":"def","line":95,"name":"OmegaCompletePartialOrder.Chain.map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L95-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.directed\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">directed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Directed.html#Directed\">Directed</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">⇑<span class=\"fn\">c</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.directed","kind":"theorem","line":93,"name":"OmegaCompletePartialOrder.Chain.directed","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L93-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.isChain_range\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">isChain_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Preorder/Chain.html#IsChain\">IsChain</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">c</span></span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.isChain_range","kind":"theorem","line":91,"name":"OmegaCompletePartialOrder.Chain.isChain_range","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L91-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instLE\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instLE","kind":"instance","line":89,"name":"OmegaCompletePartialOrder.Chain.instLE","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instMembership\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instMembership</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instMembership","kind":"instance","line":82,"name":"OmegaCompletePartialOrder.Chain.instMembership","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L82-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instInhabited\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instInhabited","kind":"instance","line":79,"name":"OmegaCompletePartialOrder.Chain.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L79-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.ext_iff\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.ext_iff","kind":"theorem","line":77,"name":"OmegaCompletePartialOrder.Chain.ext_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L77-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.ext\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>","info":{"doc":"See note [partially-applied ext lemmas]. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.ext","kind":"theorem","line":76,"name":"OmegaCompletePartialOrder.Chain.ext","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instOrderHomClassNat\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instOrderHomClassNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span>)</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instOrderHomClassNat","kind":"instance","line":74,"name":"OmegaCompletePartialOrder.Chain.instOrderHomClassNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instFunLikeNat\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span>.<span class=\"name\">instFunLikeNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\">Chain</a> <span class=\"fn\">α</span>)</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain.instFunLikeNat","kind":"instance","line":73,"name":"OmegaCompletePartialOrder.Chain.instFunLikeNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain\"><span class=\"name\">OmegaCompletePartialOrder</span>.<span class=\"name\">Chain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A chain is a monotone sequence.\n\nSee the definition on page 114 of [gunter1992]. ","docLink":"./Mathlib/Order/OmegaCompletePartialOrder.html#OmegaCompletePartialOrder.Chain","kind":"def","line":64,"name":"OmegaCompletePartialOrder.Chain","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Order/OmegaCompletePartialOrder.lean#L64-L68"}}],"imports":["Init","Mathlib.Control.Monad.Basic","Mathlib.Dynamics.FixedPoints.Basic","Mathlib.Order.CompleteLattice.Basic","Mathlib.Order.Iterate","Mathlib.Order.Part","Mathlib.Order.Preorder.Chain","Mathlib.Order.ScottContinuity"],"instances":[{"className":"DFunLike","name":"OmegaCompletePartialOrder.Chain.instFunLikeNat","typeNames":["OmegaCompletePartialOrder.Chain","Nat"]},{"className":"RelHomClass","name":"OmegaCompletePartialOrder.Chain.instOrderHomClassNat","typeNames":["OmegaCompletePartialOrder.Chain","Nat"]},{"className":"Inhabited","name":"OmegaCompletePartialOrder.Chain.instInhabited","typeNames":["OmegaCompletePartialOrder.Chain"]},{"className":"Membership","name":"OmegaCompletePartialOrder.Chain.instMembership","typeNames":["OmegaCompletePartialOrder.Chain"]},{"className":"LE","name":"OmegaCompletePartialOrder.Chain.instLE","typeNames":["OmegaCompletePartialOrder.Chain"]},{"className":"OmegaCompletePartialOrder","name":"Part.omegaCompletePartialOrder","typeNames":["Part"]},{"className":"OmegaCompletePartialOrder","name":"instOmegaCompletePartialOrderForall","typeNames":[]},{"className":"OmegaCompletePartialOrder","name":"Prod.instOmegaCompletePartialOrder","typeNames":["Prod"]},{"className":"OmegaCompletePartialOrder","name":"CompleteLattice.instOmegaCompletePartialOrder","typeNames":[]},{"className":"OmegaCompletePartialOrder","name":"OmegaCompletePartialOrder.OrderHom.omegaCompletePartialOrder","typeNames":["OrderHom"]},{"className":"DFunLike","name":"OmegaCompletePartialOrder.instFunLikeContinuousHom","typeNames":["OmegaCompletePartialOrder.ContinuousHom"]},{"className":"RelHomClass","name":"OmegaCompletePartialOrder.instOrderHomClassContinuousHom","typeNames":["OmegaCompletePartialOrder.ContinuousHom"]},{"className":"PartialOrder","name":"OmegaCompletePartialOrder.instPartialOrderContinuousHom","typeNames":["OmegaCompletePartialOrder.ContinuousHom"]},{"className":"Inhabited","name":"OmegaCompletePartialOrder.ContinuousHom.instInhabited","typeNames":["OmegaCompletePartialOrder.ContinuousHom"]},{"className":"OmegaCompletePartialOrder","name":"OmegaCompletePartialOrder.ContinuousHom.inst","typeNames":["OmegaCompletePartialOrder.ContinuousHom"]}],"name":"Mathlib.Order.OmegaCompletePartialOrder"}