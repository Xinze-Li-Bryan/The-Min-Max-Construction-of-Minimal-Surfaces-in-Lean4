{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_isOpen_forall_compactSpace\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">of_isOpen_forall_compactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>),\n    <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">K</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">K</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">K</span> → <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span></span>)</span> →\n      <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"A topological space `X` is compactly coherent if a set `s` is open when `f ⁻¹' s?` is open for\nevery continuous map `f : K → X`, where `K` is compact. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_isOpen_forall_compactSpace","kind":"theorem","line":97,"name":"CompactlyCoherentSpace.of_isOpen_forall_compactSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L97-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isOpen_iff_forall_compactSpace\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">isOpen_iff_forall_compactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">K</span></span>] [<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">K</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">K</span> → <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span></span></span></div></div>","info":{"doc":"In a compactly coherent space `X`, a set `s` is open iff `f ⁻¹' s` is open for every continuous\nmap from a compact space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isOpen_iff_forall_compactSpace","kind":"theorem","line":86,"name":"CompactlyCoherentSpace.isOpen_iff_forall_compactSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L86-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#Topology.IsCoherentWith.isCompact_of_seq\"><span class=\"name\">Topology</span>.<span class=\"name\">IsCoherentWith</span>.<span class=\"name\">isCompact_of_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Sequences.html#SequentialSpace\">SequentialSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"**Alias** of `CompactlyCoherentSpace.of_sequentialSpace`.\n\n---\n\nEvery sequential space is a compactly coherent space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#Topology.IsCoherentWith.isCompact_of_seq","kind":"theorem","line":83,"name":"Topology.IsCoherentWith.isCompact_of_seq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L83-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_sequentialSpace\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">of_sequentialSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Sequences.html#SequentialSpace\">SequentialSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"Every sequential space is a compactly coherent space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_sequentialSpace","kind":"instance","line":79,"name":"CompactlyCoherentSpace.of_sequentialSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L79-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#Topology.IsCoherentWith.isCompact_of_weaklyLocallyCompact\"><span class=\"name\">Topology</span>.<span class=\"name\">IsCoherentWith</span>.<span class=\"name\">isCompact_of_weaklyLocallyCompact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#WeaklyLocallyCompactSpace\">WeaklyLocallyCompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"**Alias** of `CompactlyCoherentSpace.of_weaklyLocallyCompactSpace`.\n\n---\n\nEvery weakly locally compact space is a compactly coherent space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#Topology.IsCoherentWith.isCompact_of_weaklyLocallyCompact","kind":"theorem","line":76,"name":"Topology.IsCoherentWith.isCompact_of_weaklyLocallyCompact","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_weaklyLocallyCompactSpace\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">of_weaklyLocallyCompactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#WeaklyLocallyCompactSpace\">WeaklyLocallyCompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"Every weakly locally compact space is a compactly coherent space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_weaklyLocallyCompactSpace","kind":"instance","line":72,"name":"CompactlyCoherentSpace.of_weaklyLocallyCompactSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L72-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_isClosed\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">of_isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"If every set `A` is closed if for every compact `K` the intersection `K ∩ A` is closed in `K`,\nthen the space is a compactly coherent space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_isClosed","kind":"theorem","line":66,"name":"CompactlyCoherentSpace.of_isClosed","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L66-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_isOpen\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">of_isOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> (<a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"If every set `A` is open if for every compact `K` the intersection `K ∩ A` is open in `K`,\nthen the space is a compactly coherent space. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.of_isOpen","kind":"theorem","line":60,"name":"CompactlyCoherentSpace.of_isOpen","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L60-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isClosed_iff\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">isClosed_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></span></span></div></div>","info":{"doc":"A set `A` in a compactly coherent space is closed iff for every compact set `K`, the\nintersection `K ∩ A` is closed in `K`. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isClosed_iff","kind":"theorem","line":54,"name":"CompactlyCoherentSpace.isClosed_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L54-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isOpen_iff\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">isOpen_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> (<a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span>)</span></span></span></div></div>","info":{"doc":"A set `A` in a compactly coherent space is open iff for every compact set `K`, the intersection\n`K ∩ A` is open in `K`. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isOpen_iff","kind":"theorem","line":48,"name":"CompactlyCoherentSpace.isOpen_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L48-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isCoherentWith\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">isCoherentWith</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsCoherentWith\">Topology.IsCoherentWith</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">K</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>","info":{"doc":"A space is a compactly coherent space if the topology is generated by the compact sets. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.isCoherentWith","kind":"theorem","line":40,"name":"CompactlyCoherentSpace.isCoherentWith","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.mk\"><span class=\"name\">CompactlyCoherentSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isCoherentWith</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsCoherentWith\">Topology.IsCoherentWith</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">K</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\">CompactlyCoherentSpace</a> <span class=\"fn\">X</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace.mk","kind":"ctor","line":38,"name":"CompactlyCoherentSpace.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace\"><span class=\"name\">CompactlyCoherentSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"A space is a compactly coherent space if the topology is generated by the compact sets. ","docLink":"./Mathlib/Topology/Compactness/CompactlyCoherentSpace.html#CompactlyCoherentSpace","kind":"class","line":37,"name":"CompactlyCoherentSpace","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Topology/Compactness/CompactlyCoherentSpace.lean#L37-L40"}}],"imports":["Init","Mathlib.Topology.Coherent","Mathlib.Topology.Compactness.Compact"],"instances":[{"className":"CompactlyCoherentSpace","name":"CompactlyCoherentSpace.of_weaklyLocallyCompactSpace","typeNames":[]},{"className":"CompactlyCoherentSpace","name":"CompactlyCoherentSpace.of_sequentialSpace","typeNames":[]}],"name":"Mathlib.Topology.Compactness.CompactlyCoherentSpace"}