{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">findSCCs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph\">Graph</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"Finds the strongly connected components of the graph `g`. Returns an array where the value at\nindex `v` represents the SCC number containing vertex `v`. The numbering of SCCs is arbitrary. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCs","kind":"def","line":73,"name":"Mathlib.Tactic.Order.Graph.findSCCs","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L73-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCsImp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">findSCCsImp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph\">Graph</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Implementation of `findSCCs` in the `StateM TarjanState` monad. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.findSCCsImp","kind":"def","line":67,"name":"Mathlib.Tactic.Order.Graph.findSCCsImp","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L67-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.tarjanDFS\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">tarjanDFS</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph\">Graph</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"The Tarjan's algorithm.\nSee [Wikipedia](https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm). ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.tarjanDFS","kind":"opaque","line":31,"name":"Mathlib.Tactic.Order.Graph.tarjanDFS","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L31-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.time\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">time</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>","info":{"doc":"A time counter that increments each time the algorithm visits an unvisited vertex. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.time","kind":"def","line":29,"name":"Mathlib.Tactic.Order.Graph.TarjanState.time","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.onStack\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">onStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"`onStack[v] = true` iff `v` is in `stack`. The structure is used to check it efficiently. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.onStack","kind":"def","line":27,"name":"Mathlib.Tactic.Order.Graph.TarjanState.onStack","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.stack\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">stack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"The stack of visited vertices used in Tarjan's algorithm. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.stack","kind":"def","line":25,"name":"Mathlib.Tactic.Order.Graph.TarjanState.stack","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.lowlink\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">lowlink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"`lowlink[v]` is the smallest index of any node on the stack that is reachable from `v`\nthrough `v`'s DFS subtree. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.lowlink","kind":"def","line":23,"name":"Mathlib.Tactic.Order.Graph.TarjanState.lowlink","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.id\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"`id[v]` is the index of the vertex `v` in the DFS traversal. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.id","kind":"def","line":20,"name":"Mathlib.Tactic.Order.Graph.TarjanState.id","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDFSState</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph.DFSState\">DFSState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id </span><span class=\"fn\">lowlink </span><span class=\"fn\">stack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onStack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">time</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.mk","kind":"ctor","line":18,"name":"Mathlib.Tactic.Order.Graph.TarjanState.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.toDFSState\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span>.<span class=\"name\">toDFSState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\">TarjanState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph.DFSState\">DFSState</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState.toDFSState","kind":"def","line":18,"name":"Mathlib.Tactic.Order.Graph.TarjanState.toDFSState","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L18-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Order</span>.<span class=\"name\">Graph</span>.<span class=\"name\">TarjanState</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Tactic/Order/Graph/Basic.html#Mathlib.Tactic.Order.Graph.DFSState\">Mathlib.Tactic.Order.Graph.DFSState</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State for Tarjan's algorithm. ","docLink":"./Mathlib/Tactic/Order/Graph/Tarjan.html#Mathlib.Tactic.Order.Graph.TarjanState","kind":"structure","line":17,"name":"Mathlib.Tactic.Order.Graph.TarjanState","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Tactic/Order/Graph/Tarjan.lean#L17-L29"}}],"imports":["Init","Mathlib.Tactic.Order.Graph.Basic"],"instances":[],"name":"Mathlib.Tactic.Order.Graph.Tarjan"}