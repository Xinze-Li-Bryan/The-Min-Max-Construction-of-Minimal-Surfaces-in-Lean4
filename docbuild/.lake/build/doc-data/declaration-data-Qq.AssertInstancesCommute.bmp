{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.doElemAssumeInstancesCommute\"><span class=\"name\">Qq</span>.<span class=\"name\">doElemAssumeInstancesCommute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.doElemAssumeInstancesCommute","kind":"def","line":81,"name":"Qq.doElemAssumeInstancesCommute","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L81-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.doElemAssertInstancesCommute\"><span class=\"name\">Qq</span>.<span class=\"name\">doElemAssertInstancesCommute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.doElemAssertInstancesCommute","kind":"def","line":78,"name":"Qq.doElemAssertInstancesCommute","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L78-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.Impl.termAssumeInstancesCommuteDummy\"><span class=\"name\">Qq</span>.<span class=\"name\">Impl</span>.<span class=\"name\">termAssumeInstancesCommuteDummy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.Impl.termAssumeInstancesCommuteDummy","kind":"def","line":70,"name":"Qq.Impl.termAssumeInstancesCommuteDummy","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.Impl.termAssertInstancesCommuteDummy\"><span class=\"name\">Qq</span>.<span class=\"name\">Impl</span>.<span class=\"name\">termAssertInstancesCommuteDummy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.Impl.termAssertInstancesCommuteDummy","kind":"def","line":65,"name":"Qq.Impl.termAssertInstancesCommuteDummy","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.Impl.termAssertInstancesCommuteImpl_\"><span class=\"name\">Qq</span>.<span class=\"name\">Impl</span>.<span class=\"name\">termAssertInstancesCommuteImpl_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.Impl.termAssertInstancesCommuteImpl_","kind":"def","line":41,"name":"Qq.Impl.termAssertInstancesCommuteImpl_","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.Impl.findRedundantLocalInstQuoted?\"><span class=\"name\">Qq</span>.<span class=\"name\">Impl</span>.<span class=\"name\">findRedundantLocalInstQuoted?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">Q(<a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span>) × <span class=\"fn\">(<span class=\"fn\">ty</span> : <span class=\"fn\">Q(<span class=\"fn\">Q(<a href=\"./foundational_types.html\">Sort</a> «$u»)</span>)</span>) × <span class=\"fn\">Q(<span class=\"fn\">Q(<span class=\"fn\">«$$ty»</span>)</span>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Q(<span class=\"fn\">Q(<span class=\"fn\">«$$ty»</span>)</span>)</span></span></span>))</span></span></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.Impl.findRedundantLocalInstQuoted?","kind":"def","line":26,"name":"Qq.Impl.findRedundantLocalInstQuoted?","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L26-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.Impl.findRedundantLocalInst?\"><span class=\"name\">Qq</span>.<span class=\"name\">Impl</span>.<span class=\"name\">findRedundantLocalInst?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Qq/Macro.html#Qq.Impl.QuoteM\">QuoteM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>))</span></span></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.Impl.findRedundantLocalInst?","kind":"def","line":18,"name":"Qq.Impl.findRedundantLocalInst?","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L18-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.Impl.isRedundantLocalInst?\"><span class=\"name\">Qq</span>.<span class=\"name\">Impl</span>.<span class=\"name\">isRedundantLocalInst?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inst</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.Impl.isRedundantLocalInst?","kind":"def","line":10,"name":"Qq.Impl.isRedundantLocalInst?","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L10-L16"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Qq/AssertInstancesCommute.html#Qq.termAssumeInstancesCommute'_\"><span class=\"name\">Qq</span>.<span class=\"name\">termAssumeInstancesCommute'_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Qq/AssertInstancesCommute.html#Qq.termAssumeInstancesCommute'_","kind":"def","line":5,"name":"Qq.termAssumeInstancesCommute'_","sourceLink":"https://github.com/leanprover-community/quote4/blob/2e582a44b0150db152bff1c8484eb557fb5340da/Qq/AssertInstancesCommute.lean#L5-L5"}}],"imports":["Init","Qq.MetaM"],"instances":[],"name":"Qq.AssertInstancesCommute"}