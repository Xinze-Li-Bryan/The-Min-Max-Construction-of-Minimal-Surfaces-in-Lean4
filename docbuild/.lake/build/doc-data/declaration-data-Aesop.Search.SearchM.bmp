{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.wasMaxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">wasMaxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.wasMaxRuleApplicationDepthReached","kind":"def","line":134,"name":"Aesop.wasMaxRuleApplicationDepthReached","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L134-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.setMaxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">setMaxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.setMaxRuleApplicationDepthReached","kind":"def","line":131,"name":"Aesop.setMaxRuleApplicationDepthReached","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L131-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.enqueueGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">enqueueGoals</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.enqueueGoals","kind":"def","line":126,"name":"Aesop.enqueueGoals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L126-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.popGoal?\"><span class=\"name\">Aesop</span>.<span class=\"name\">popGoal?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Tree/Data.html#Aesop.GoalRef\">GoalRef</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.popGoal?","kind":"def","line":120,"name":"Aesop.popGoal?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L120-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.incrementIteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">incrementIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.incrementIteration","kind":"def","line":117,"name":"Aesop.incrementIteration","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L117-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.getIteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">getIteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Iteration</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.getIteration","kind":"def","line":114,"name":"Aesop.getIteration","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L114-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.modifyTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">modifyTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a> → <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span> → <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.modifyTree","kind":"def","line":111,"name":"Aesop.modifyTree","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L111-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.setTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">setTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a> → <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.setTree","kind":"def","line":108,"name":"Aesop.setTree","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L108-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.getTree\"><span class=\"name\">Aesop</span>.<span class=\"name\">getTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.getTree","kind":"def","line":105,"name":"Aesop.getTree","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L105-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleSet</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpConfig</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.Simp.Config\">Lean.Meta.Simp.Config</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simpConfigStx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.run","kind":"def","line":81,"name":"Aesop.SearchM.run","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L81-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.run'\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.Tree\">Tree</a>)</span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.run'","kind":"def","line":75,"name":"Aesop.SearchM.run'","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L75-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadLiftTreeM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadLiftTreeM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Aesop/Tree/TreeM.html#Aesop.TreeM\">TreeM</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadLiftTreeM","kind":"instance","line":67,"name":"Aesop.SearchM.instMonadLiftTreeM","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L67-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadReaderContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadReaderContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReader\">MonadReader</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadReaderContext","kind":"instance","line":64,"name":"Aesop.SearchM.instMonadReaderContext","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L64-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadStateState\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadStateState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadState\">MonadState</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span>)</span> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadStateState","kind":"instance","line":61,"name":"Aesop.SearchM.instMonadStateState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L61-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabited\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabited","kind":"instance","line":58,"name":"Aesop.SearchM.instInhabited","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L58-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadRef\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonadRef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonadRef","kind":"instance","line":55,"name":"Aesop.SearchM.instMonadRef","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L55-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonad\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\">SearchM</a> <span class=\"fn\">Q</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instMonad","kind":"instance","line":52,"name":"Aesop.SearchM.instMonad","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L52-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM","kind":"def","line":42,"name":"Aesop.SearchM","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L42-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabitedState</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹</span> : <span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState.default","kind":"def","line":38,"name":"Aesop.SearchM.instInhabitedState.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹</span> : <span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instInhabitedState","kind":"instance","line":38,"name":"Aesop.SearchM.instInhabitedState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.maxRuleApplicationDepthReached\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">maxRuleApplicationDepthReached</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.maxRuleApplicationDepthReached","kind":"def","line":37,"name":"Aesop.SearchM.State.maxRuleApplicationDepthReached","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.queue\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">queue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Q</span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.queue","kind":"def","line":36,"name":"Aesop.SearchM.State.queue","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.iteration\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">iteration</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Iteration</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.iteration","kind":"def","line":35,"name":"Aesop.SearchM.State.iteration","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">iteration</span> : <a href=\"./Aesop/Tree/Data.html#Aesop.Iteration\">Iteration</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">queue</span> : <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxRuleApplicationDepthReached</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\">State</a> <span class=\"fn\">Q</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State.mk","kind":"ctor","line":34,"name":"Aesop.SearchM.State.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.State\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Search/Queue/Class.html#Aesop.Queue\">Queue</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.State","kind":"structure","line":34,"name":"Aesop.SearchM.State","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L34-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.instNonemptyContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">instNonemptyContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.instNonemptyContext","kind":"instance","line":32,"name":"Aesop.SearchM.instNonemptyContext","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.options\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.options","kind":"def","line":31,"name":"Aesop.SearchM.Context.options","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.normSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">normSimpContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.normSimpContext","kind":"def","line":30,"name":"Aesop.SearchM.Context.normSimpContext","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.ruleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">ruleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.ruleSet","kind":"def","line":29,"name":"Aesop.SearchM.Context.ruleSet","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleSet</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">normSimpContext</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context.mk","kind":"ctor","line":28,"name":"Aesop.SearchM.Context.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.SearchM.Context\"><span class=\"name\">Aesop</span>.<span class=\"name\">SearchM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.SearchM.Context","kind":"structure","line":28,"name":"Aesop.SearchM.Context","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L28-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedNormSimpContext</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext.default","kind":"def","line":24,"name":"Aesop.instInhabitedNormSimpContext.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedNormSimpContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.instInhabitedNormSimpContext","kind":"instance","line":24,"name":"Aesop.instInhabitedNormSimpContext","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.simprocs\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">simprocs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.simprocs","kind":"def","line":23,"name":"Aesop.NormSimpContext.simprocs","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L23-L23"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.configStx?\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">configStx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.configStx?","kind":"def","line":22,"name":"Aesop.NormSimpContext.configStx?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L22-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.useHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">useHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.useHyps","kind":"def","line":21,"name":"Aesop.NormSimpContext.useHyps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L21-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.enabled\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">enabled</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.enabled","kind":"def","line":20,"name":"Aesop.NormSimpContext.enabled","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L20-L20"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.toContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">toContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.toContext","kind":"def","line":19,"name":"Aesop.NormSimpContext.toContext","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L19-L19"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toContext</span> : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Context\">Lean.Meta.Simp.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">enabled </span><span class=\"fn\">useHyps</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">configStx?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Lean.Term</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simprocs</span> : <a href=\"./Lean/Meta/Tactic/Simp/Simproc.html#Lean.Meta.Simp.SimprocsArray\">Lean.Meta.Simp.SimprocsArray</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\">NormSimpContext</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext.mk","kind":"ctor","line":18,"name":"Aesop.NormSimpContext.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L18-L18"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Search/SearchM.html#Aesop.NormSimpContext\"><span class=\"name\">Aesop</span>.<span class=\"name\">NormSimpContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/Search/SearchM.html#Aesop.NormSimpContext","kind":"structure","line":18,"name":"Aesop.NormSimpContext","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Search/SearchM.lean#L18-L24"}}],"imports":["Init","Aesop.Options","Aesop.Search.Queue.Class","Aesop.Stats.Basic","Aesop.RuleSet","Aesop.Tree.TreeM"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedNormSimpContext","typeNames":["Aesop.NormSimpContext"]},{"className":"Nonempty","name":"Aesop.SearchM.instNonemptyContext","typeNames":["Aesop.SearchM.Context"]},{"className":"Inhabited","name":"Aesop.SearchM.instInhabitedState","typeNames":["Aesop.SearchM.State"]},{"className":"Monad","name":"Aesop.SearchM.instMonad","typeNames":["Aesop.SearchM"]},{"className":"Lean.MonadRef","name":"Aesop.SearchM.instMonadRef","typeNames":["Aesop.SearchM"]},{"className":"Inhabited","name":"Aesop.SearchM.instInhabited","typeNames":["Aesop.SearchM"]},{"className":"MonadState","name":"Aesop.SearchM.instMonadStateState","typeNames":["Aesop.SearchM.State","Aesop.SearchM"]},{"className":"MonadReader","name":"Aesop.SearchM.instMonadReaderContext","typeNames":["Aesop.SearchM.Context","Aesop.SearchM"]},{"className":"MonadLift","name":"Aesop.SearchM.instMonadLiftTreeM","typeNames":["Aesop.TreeM","Aesop.SearchM"]}],"name":"Aesop.Search.SearchM"}