{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin_symm_apply_coe\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalEquivFin_symm_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin\">antidiagonalEquivFin</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">x✝</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">↑<span class=\"fn\">x✝</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">x✝</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin_symm_apply_coe","kind":"theorem","line":151,"name":"Finset.Nat.antidiagonalEquivFin_symm_apply_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L151-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin_apply_val\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalEquivFin_apply_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin\">antidiagonalEquivFin</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">x✝</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x✝</span>.1</span>.1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin_apply_val","kind":"theorem","line":151,"name":"Finset.Nat.antidiagonalEquivFin_apply_val","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L151-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonalEquivFin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>","info":{"doc":"The set `antidiagonal n` is equivalent to `Fin (n+1)`, via the first projection. ","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonalEquivFin","kind":"def","line":150,"name":"Finset.Nat.antidiagonalEquivFin","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L150-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_le_snd_of_le\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_filter_le_snd_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> | <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.2</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_le_snd_of_le","kind":"theorem","line":138,"name":"Finset.Nat.antidiagonal_filter_le_snd_of_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L138-L148"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_le_fst_of_le\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_filter_le_fst_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> | <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.1</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_le_fst_of_le","kind":"theorem","line":126,"name":"Finset.Nat.antidiagonal_filter_le_fst_of_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L126-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_fst_le_of_le\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_filter_fst_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> | <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>)</span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">k</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_fst_le_of_le","kind":"theorem","line":114,"name":"Finset.Nat.antidiagonal_filter_fst_le_of_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L114-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_snd_le_of_le\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_filter_snd_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> | <span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>)</span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">k</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_filter_snd_le_of_le","kind":"theorem","line":101,"name":"Finset.Nat.antidiagonal_filter_snd_le_of_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L101-L112"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal.snd_lt\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal</span>.<span class=\"name\">snd_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">kl</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlk</span> : <span class=\"fn\">kl</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">kl</span>.2</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal.snd_lt","kind":"theorem","line":98,"name":"Finset.Nat.antidiagonal.snd_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L98-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal.fst_lt\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal</span>.<span class=\"name\">fst_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">kl</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hlk</span> : <span class=\"fn\">kl</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">kl</span>.1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal.fst_lt","kind":"theorem","line":95,"name":"Finset.Nat.antidiagonal.fst_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L95-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_succ_succ'\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_succ_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Insert.html#Finset.cons\">cons</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Insert.html#Finset.cons\">cons</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>\n      <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a>, <span class=\"fn\">inj'</span> := <a href=\"./Mathlib/Data/Nat/Basic.html#Nat.succ_injective\">Nat.succ_injective</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a>, <span class=\"fn\">inj'</span> := <a href=\"./Mathlib/Data/Nat/Basic.html#Nat.succ_injective\">Nat.succ_injective</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>)</span>\n        <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span>)</span>\n      <span class=\"fn\">⋯</span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_succ_succ'","kind":"theorem","line":83,"name":"Finset.Nat.antidiagonal_succ_succ'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L83-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_succ'\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_succ'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Insert.html#Finset.cons\">cons</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a>, <span class=\"fn\">inj'</span> := <a href=\"./Mathlib/Data/Nat/Basic.html#Nat.succ_injective\">Nat.succ_injective</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span>)</span> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_succ'","kind":"theorem","line":73,"name":"Finset.Nat.antidiagonal_succ'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L73-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_succ\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Insert.html#Finset.cons\">cons</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a>, <span class=\"fn\">inj'</span> := <a href=\"./Mathlib/Data/Nat/Basic.html#Nat.succ_injective\">Nat.succ_injective</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span>)</span> <span class=\"fn\">⋯</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_succ","kind":"theorem","line":63,"name":"Finset.Nat.antidiagonal_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L63-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_zero\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>","info":{"doc":"The antidiagonal of `0` is the list `[(0, 0)]` ","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_zero","kind":"theorem","line":59,"name":"Finset.Nat.antidiagonal_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L59-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.card_antidiagonal\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">card_antidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"The cardinality of the antidiagonal of `n` is `n + 1`. ","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.card_antidiagonal","kind":"theorem","line":55,"name":"Finset.Nat.card_antidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L55-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_image'\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_eq_image'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">image</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_image'","kind":"theorem","line":51,"name":"Finset.Nat.antidiagonal_eq_image'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L51-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_image\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_eq_image</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">image</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_image","kind":"theorem","line":47,"name":"Finset.Nat.antidiagonal_eq_image","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L47-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_map'\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_eq_map'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_map'","kind":"theorem","line":42,"name":"Finset.Nat.antidiagonal_eq_map'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L42-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_map\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_eq_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal.antidiagonal\">antidiagonal</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">map</a> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">{</a> <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> <a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.mk\">}</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.antidiagonal_eq_map","kind":"theorem","line":38,"name":"Finset.Nat.antidiagonal_eq_map","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.instHasAntidiagonal\"><span class=\"name\">Finset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instHasAntidiagonal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Antidiag/Prod.html#Finset.HasAntidiagonal\">HasAntidiagonal</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"The antidiagonal of a natural number `n` is\nthe finset of pairs `(i, j)` such that `i + j = n`. ","docLink":"./Mathlib/Data/Finset/NatAntidiagonal.html#Finset.Nat.instHasAntidiagonal","kind":"instance","line":31,"name":"Finset.Nat.instHasAntidiagonal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Finset/NatAntidiagonal.lean#L31-L36"}}],"imports":["Init","Mathlib.Algebra.Order.Antidiag.Prod","Mathlib.Algebra.Order.Group.Nat","Mathlib.Data.Multiset.NatAntidiagonal"],"instances":[{"className":"Finset.HasAntidiagonal","name":"Finset.Nat.instHasAntidiagonal","typeNames":["Nat"]}],"name":"Mathlib.Data.Finset.NatAntidiagonal"}