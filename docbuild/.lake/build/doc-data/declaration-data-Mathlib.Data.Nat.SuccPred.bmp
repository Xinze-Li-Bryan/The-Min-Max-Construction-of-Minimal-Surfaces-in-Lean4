{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#withBotSucc_one\"><span class=\"name\">withBotSucc_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/WithBot.html#WithBot.succ\">WithBot.succ</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#withBotSucc_one","kind":"theorem","line":89,"name":"withBotSucc_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L89-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#withBotSucc_zero\"><span class=\"name\">withBotSucc_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/WithBot.html#WithBot.succ\">WithBot.succ</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#withBotSucc_zero","kind":"theorem","line":86,"name":"withBotSucc_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L86-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#CovBy.coe_fin\"><span class=\"name\">CovBy</span>.<span class=\"name\">coe_fin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Defs/PartialOrder.html#CovBy\">⋖</a> <span class=\"fn\">b</span> → <span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Defs/PartialOrder.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `Fin.coe_covBy_iff`.","docLink":"./Mathlib/Data/Nat/SuccPred.html#CovBy.coe_fin","kind":"theorem","line":84,"name":"CovBy.coe_fin","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Fin.coe_covBy_iff\"><span class=\"name\">Fin</span>.<span class=\"name\">coe_covBy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Defs/PartialOrder.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Defs/PartialOrder.html#CovBy\">⋖</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Fin.coe_covBy_iff","kind":"theorem","line":80,"name":"Fin.coe_covBy_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.forall_ne_zero_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">forall_ne_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">i</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.forall_ne_zero_iff","kind":"theorem","line":74,"name":"Nat.forall_ne_zero_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L74-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsPredArchimedean\"><span class=\"name\">Nat</span>.<span class=\"name\">instIsPredArchimedean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Archimedean.html#IsPredArchimedean\">IsPredArchimedean</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsPredArchimedean","kind":"instance","line":71,"name":"Nat.instIsPredArchimedean","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L71-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsSuccArchimedean\"><span class=\"name\">Nat</span>.<span class=\"name\">instIsSuccArchimedean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Archimedean.html#IsSuccArchimedean\">IsSuccArchimedean</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instIsSuccArchimedean","kind":"instance","line":68,"name":"Nat.instIsSuccArchimedean","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L68-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.le_succ_iff_eq_or_le\"><span class=\"name\">Nat</span>.<span class=\"name\">le_succ_iff_eq_or_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.le_succ_iff_eq_or_le","kind":"theorem","line":66,"name":"Nat.le_succ_iff_eq_or_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_iterate\"><span class=\"name\">Nat</span>.<span class=\"name\">pred_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.pred\">pred</a><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_iterate","kind":"theorem","line":60,"name":"Nat.pred_iterate","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L60-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_iterate\"><span class=\"name\">Nat</span>.<span class=\"name\">succ_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">succ</a><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_iterate","kind":"theorem","line":57,"name":"Nat.succ_iterate","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_eq_pred\"><span class=\"name\">Nat</span>.<span class=\"name\">pred_eq_pred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.pred\">Order.pred</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Nat.pred\">pred</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.pred_eq_pred","kind":"theorem","line":53,"name":"Nat.pred_eq_pred","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L53-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_eq_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">succ_eq_succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Nat.succ\">succ</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.succ_eq_succ","kind":"theorem","line":49,"name":"Nat.succ_eq_succ","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L49-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instPredSubOrder\"><span class=\"name\">Nat</span>.<span class=\"name\">instPredSubOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#PredSubOrder\">PredSubOrder</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instPredSubOrder","kind":"instance","line":47,"name":"Nat.instPredSubOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instPredOrder\"><span class=\"name\">Nat</span>.<span class=\"name\">instPredOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#PredOrder\">PredOrder</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instPredOrder","kind":"instance","line":35,"name":"Nat.instPredOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L35-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instSuccAddOrder\"><span class=\"name\">Nat</span>.<span class=\"name\">instSuccAddOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#SuccAddOrder\">SuccAddOrder</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instSuccAddOrder","kind":"instance","line":32,"name":"Nat.instSuccAddOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/SuccPred.html#Nat.instSuccOrder\"><span class=\"name\">Nat</span>.<span class=\"name\">instSuccOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#SuccOrder\">SuccOrder</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/Nat/SuccPred.html#Nat.instSuccOrder","kind":"instance","line":29,"name":"Nat.instSuccOrder","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/Nat/SuccPred.lean#L29-L30"}}],"imports":["Init","Mathlib.Algebra.Order.Group.Nat","Mathlib.Algebra.Ring.Nat","Mathlib.Algebra.Order.Monoid.Unbundled.WithTop","Mathlib.Algebra.Order.Sub.Unbundled.Basic","Mathlib.Algebra.Order.SuccPred","Mathlib.Data.Fin.Basic","Mathlib.Order.Nat","Mathlib.Order.SuccPred.Archimedean","Mathlib.Order.SuccPred.WithBot"],"instances":[{"className":"SuccOrder","name":"Nat.instSuccOrder","typeNames":["Nat"]},{"className":"SuccAddOrder","name":"Nat.instSuccAddOrder","typeNames":["Nat"]},{"className":"PredOrder","name":"Nat.instPredOrder","typeNames":["Nat"]},{"className":"PredSubOrder","name":"Nat.instPredSubOrder","typeNames":["Nat"]},{"className":"IsSuccArchimedean","name":"Nat.instIsSuccArchimedean","typeNames":["Nat"]},{"className":"IsPredArchimedean","name":"Nat.instIsPredArchimedean","typeNames":["Nat"]}],"name":"Mathlib.Data.Nat.SuccPred"}