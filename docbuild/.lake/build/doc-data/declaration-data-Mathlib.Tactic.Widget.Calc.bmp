{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#Lean.Elab.Tactic.tacticCalc?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">tacticCalc?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Create a `calc` proof. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#Lean.Elab.Tactic.tacticCalc?","kind":"def","line":129,"name":"Lean.Elab.Tactic.tacticCalc?","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L129-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcPanel\"><span class=\"name\">CalcPanel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./ProofWidgets/Component/Basic.html#ProofWidgets.Component\">ProofWidgets.Component</a> <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a></span></div></div>","info":{"doc":"The calc widget. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcPanel","kind":"def","line":121,"name":"CalcPanel","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L121-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcPanel.rpc\"><span class=\"name\">CalcPanel</span>.<span class=\"name\">rpc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">Lean.Server.RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">Lean.Server.RequestTask</a> <a href=\"./ProofWidgets/Data/Html.html#ProofWidgets.Html\">ProofWidgets.Html</a>)</span></span></div></div>","info":{"doc":"Rpc function for the calc widget. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcPanel.rpc","kind":"def","line":115,"name":"CalcPanel.rpc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L115-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#suggestSteps\"><span class=\"name\">suggestSteps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goalType</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span>)</span></div></div>","info":{"doc":"Return the link text and inserted text above and below of the calc widget. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#suggestSteps","kind":"def","line":61,"name":"suggestSteps","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L61-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#instRpcEncodableCalcParams\"><span class=\"name\">instRpcEncodableCalcParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/Calc.html#instRpcEncodableCalcParams","kind":"instance","line":59,"name":"instRpcEncodableCalcParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#instSelectInsertParamsClassCalcParams\"><span class=\"name\">instSelectInsertParamsClassCalcParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Widget/SelectInsertParamsClass.html#SelectInsertParamsClass\">SelectInsertParamsClass</a> <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/Calc.html#instSelectInsertParamsClassCalcParams","kind":"instance","line":59,"name":"instSelectInsertParamsClassCalcParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams.indent\"><span class=\"name\">CalcParams</span>.<span class=\"name\">indent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"indentation level of the calc block. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcParams.indent","kind":"def","line":58,"name":"CalcParams.indent","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams.isFirst\"><span class=\"name\">CalcParams</span>.<span class=\"name\">isFirst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Is this the first calc step? ","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcParams.isFirst","kind":"def","line":56,"name":"CalcParams.isFirst","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams.mk\"><span class=\"name\">CalcParams</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toSelectInsertParams</span> : <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isFirst</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indent</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcParams.mk","kind":"ctor","line":54,"name":"CalcParams.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams.toSelectInsertParams\"><span class=\"name\">CalcParams</span>.<span class=\"name\">toSelectInsertParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\">CalcParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcParams.toSelectInsertParams","kind":"def","line":54,"name":"CalcParams.toSelectInsertParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L54-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#CalcParams\"><span class=\"name\">CalcParams</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Tactic/Widget/SelectPanelUtils.html#SelectInsertParams\">SelectInsertParams</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Parameters for the calc widget. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#CalcParams","kind":"structure","line":53,"name":"CalcParams","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L53-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Widget/Calc.html#createCalc\"><span class=\"name\">createCalc</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Batteries/CodeAction/Attr.html#Batteries.CodeAction.TacticCodeAction\">Batteries.CodeAction.TacticCodeAction</a></div></div>","info":{"doc":"Code action to create a `calc` tactic from the current goal. ","docLink":"./Mathlib/Tactic/Widget/Calc.html#createCalc","kind":"def","line":24,"name":"createCalc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/d3298500e6d853c0856bebdb79d46f430b6a5e5e/Mathlib/Tactic/Widget/Calc.lean#L24-L45"}}],"imports":["Init","Lean.Elab.Tactic.Calc","Lean.Meta.Tactic.TryThis","Mathlib.Data.String.Defs","Mathlib.Tactic.Widget.SelectPanelUtils","Batteries.CodeAction.Attr","Batteries.Lean.Position"],"instances":[{"className":"SelectInsertParamsClass","name":"instSelectInsertParamsClassCalcParams","typeNames":["CalcParams"]},{"className":"Lean.Server.RpcEncodable","name":"instRpcEncodableCalcParams","typeNames":["CalcParams"]}],"name":"Mathlib.Tactic.Widget.Calc"}