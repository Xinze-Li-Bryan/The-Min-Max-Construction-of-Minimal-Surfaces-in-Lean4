{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.ofExpr.sortSlots\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">ofExpr</span>.<span class=\"name\">sortSlots</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">slots</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></span></div></div>","info":{"doc":"Sort slots such that each slot has at least one variable in common with\nthe previous slots. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.ofExpr.sortSlots","kind":"def","line":147,"name":"Aesop.ForwardRuleInfo.ofExpr.sortSlots","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L147-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.ofExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">ofExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rulePattern?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a></span></div></div>","info":{"doc":"Construct a `ForwardRuleInfo` for the theorem `thm`. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.ofExpr","kind":"def","line":79,"name":"Aesop.ForwardRuleInfo.ofExpr","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L79-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.isConstant\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">isConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Is this rule a constant rule (i.e., does it have neither premises nor a rule\npattern)? ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.isConstant","kind":"def","line":74,"name":"Aesop.ForwardRuleInfo.isConstant","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L74-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedForwardRuleInfo\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedForwardRuleInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedForwardRuleInfo","kind":"instance","line":70,"name":"Aesop.instInhabitedForwardRuleInfo","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedForwardRuleInfo.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedForwardRuleInfo</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedForwardRuleInfo.default","kind":"def","line":70,"name":"Aesop.instInhabitedForwardRuleInfo.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.rulePatternInfo?\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">rulePatternInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>)</span></div></div>","info":{"doc":"The rule's rule pattern and the premise index that was assigned to it. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.rulePatternInfo?","kind":"def","line":69,"name":"Aesop.ForwardRuleInfo.rulePatternInfo?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.conclusionDeps\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">conclusionDeps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span></div></div>","info":{"doc":"The premises that appear in the rule's conclusion. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.conclusionDeps","kind":"def","line":67,"name":"Aesop.ForwardRuleInfo.conclusionDeps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.slotClusters\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">slotClusters</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span></div></div>","info":{"doc":"Slots representing the maximal premises of the forward rule, partitioned\ninto metavariable clusters. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.slotClusters","kind":"def","line":65,"name":"Aesop.ForwardRuleInfo.slotClusters","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.numLevelParams\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">numLevelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The number of distinct level parameters and level metavariables occurring\nin the rule's type. We expect that these turn into level metavariables when\nthe rule is elaborated. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.numLevelParams","kind":"def","line":62,"name":"Aesop.ForwardRuleInfo.numLevelParams","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.numPremises\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">numPremises</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"The rule's number of premises. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.numPremises","kind":"def","line":58,"name":"Aesop.ForwardRuleInfo.numPremises","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">numPremises </span><span class=\"fn\">numLevelParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">slotClusters</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">conclusionDeps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rulePatternInfo?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\">ForwardRuleInfo</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo.mk","kind":"ctor","line":56,"name":"Aesop.ForwardRuleInfo.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardRuleInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Information about the decomposed type of a forward rule. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.ForwardRuleInfo","kind":"structure","line":55,"name":"Aesop.ForwardRuleInfo","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L55-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.instHashableSlot\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashableSlot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.instHashableSlot","kind":"def","line":52,"name":"Aesop.instHashableSlot","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L52-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.instBEqSlot\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqSlot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.instBEqSlot","kind":"def","line":49,"name":"Aesop.instBEqSlot","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedSlot.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedSlot</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedSlot.default","kind":"def","line":47,"name":"Aesop.instInhabitedSlot.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedSlot\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedSlot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.instInhabitedSlot","kind":"instance","line":47,"name":"Aesop.instInhabitedSlot","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.forwardDeps\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">forwardDeps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span></div></div>","info":{"doc":"The forward dependencies of this slot. These are all the premises that\nappear in slots *after* this one. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.forwardDeps","kind":"def","line":46,"name":"Aesop.Slot.forwardDeps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.common\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">common</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span></div></div>","info":{"doc":"Common variables shared between this slot and the previous slots. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.common","kind":"def","line":43,"name":"Aesop.Slot.common","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.deps\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">deps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span></div></div>","info":{"doc":"The previous premises that the premise of this slot depends on. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.deps","kind":"def","line":41,"name":"Aesop.Slot.deps","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.premiseIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">premiseIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></div></div>","info":{"doc":"0-based index of the premise represented by this slot in the rule type.\nNote that the slots array may use a different ordering than the original\norder of premises, so we *don't* always have `index â‰¤ premiseIndex`. Rule\npattern slots are assigned an arbitrary premise index. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.premiseIndex","kind":"def","line":39,"name":"Aesop.Slot.premiseIndex","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.index\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">index</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/SlotIndex.html#Aesop.SlotIndex\">SlotIndex</a></div></div>","info":{"doc":"Index of the slot. Slots are always part of a list of slots, and `index`\nis the 0-based index of this slot in that list. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.index","kind":"def","line":34,"name":"Aesop.Slot.index","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.typeDiscrTreeKeys?\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">typeDiscrTreeKeys?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Lean.Meta.DiscrTree.Key</a>)</span></span></div></div>","info":{"doc":"Discrimination tree keys for the type of this slot. If the slot is for the\nrule pattern, it is not associated with a premise, so doesn't have\ndiscrimination tree keys. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.typeDiscrTreeKeys?","kind":"def","line":31,"name":"Aesop.Slot.typeDiscrTreeKeys?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">typeDiscrTreeKeys?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Lean.Meta.DiscrTree.Key</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">index</span> : <a href=\"./Aesop/Forward/SlotIndex.html#Aesop.SlotIndex\">SlotIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">premiseIndex</span> : <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">deps </span><span class=\"fn\">common</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forwardDeps</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\">Slot</a></div></div>","info":{"doc":"","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot.mk","kind":"ctor","line":27,"name":"Aesop.Slot.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/RuleInfo.html#Aesop.Slot\"><span class=\"name\">Aesop</span>.<span class=\"name\">Slot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A slot represents a maximal premise of a forward rule, i.e. a premise with\nno forward dependencies. The goal of forward reasoning is to assign a\nhypothesis to each slot in such a way that the assignments agree on all\nvariables shared between them.\n\nExceptionally, a slot can also represent the rule pattern substitution. Rules\nwith a rule pattern have exactly one such slot, which is assigned an arbitrary\npremise index. ","docLink":"./Aesop/Forward/RuleInfo.html#Aesop.Slot","kind":"structure","line":19,"name":"Aesop.Slot","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/Forward/RuleInfo.lean#L19-L47"}}],"imports":["Init","Aesop.Forward.PremiseIndex","Aesop.Forward.SlotIndex","Aesop.RulePattern","Aesop.Util.Basic","Aesop.Util.UnionFind"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedSlot","typeNames":["Aesop.Slot"]},{"className":"Inhabited","name":"Aesop.instInhabitedForwardRuleInfo","typeNames":["Aesop.ForwardRuleInfo"]}],"name":"Aesop.Forward.RuleInfo"}