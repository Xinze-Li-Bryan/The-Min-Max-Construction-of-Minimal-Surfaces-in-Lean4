{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINF</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An expression in RPINF together with its RPINF hash. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINF","kind":"def","line":142,"name":"Aesop.RPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L142-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToMessageDataPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINF","kind":"instance","line":139,"name":"Aesop.instToMessageDataPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L139-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToFormatPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Std.ToFormat</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINF","kind":"instance","line":136,"name":"Aesop.instToFormatPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L136-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToStringPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToStringPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToStringPINF","kind":"instance","line":133,"name":"Aesop.instToStringPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L133-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instOrdPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instOrdPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instOrdPINF","kind":"instance","line":129,"name":"Aesop.instOrdPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L129-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instHashablePINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashablePINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instHashablePINF","kind":"instance","line":126,"name":"Aesop.instHashablePINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L126-L127"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instBEqPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instBEqPINF","kind":"instance","line":123,"name":"Aesop.instBEqPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L123-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINF.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedPINF</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINF.default","kind":"def","line":121,"name":"Aesop.instInhabitedPINF.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedPINF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINF","kind":"instance","line":121,"name":"Aesop.instInhabitedPINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L121-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF.hash\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span>.<span class=\"name\">hash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF.hash","kind":"def","line":120,"name":"Aesop.PINF.hash","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L120-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF.toExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF.toExpr","kind":"def","line":119,"name":"Aesop.PINF.toExpr","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L119-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hash</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\">PINF</a> <span class=\"fn\">md</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF.mk","kind":"ctor","line":118,"name":"Aesop.PINF.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINF\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An expression in PINF at transparency `md`, together with its PINF hash as\ncomputed by `pinfHash`. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINF","kind":"structure","line":116,"name":"Aesop.PINF","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L116-L121"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instEmptyCollectionRPINFCache\"><span class=\"name\">Aesop</span>.<span class=\"name\">instEmptyCollectionRPINFCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instEmptyCollectionRPINFCache","kind":"instance","line":112,"name":"Aesop.instEmptyCollectionRPINFCache","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L112-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedRPINFCache\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRPINFCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedRPINFCache","kind":"instance","line":110,"name":"Aesop.instInhabitedRPINFCache","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedRPINFCache.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRPINFCache</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedRPINFCache.default","kind":"def","line":110,"name":"Aesop.instInhabitedRPINFCache.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.map\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFCache</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw\">RPINFRaw</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.map","kind":"def","line":109,"name":"Aesop.RPINFCache.map","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L109-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFCache</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw\">RPINFRaw</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\">RPINFCache</a></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFCache.mk","kind":"ctor","line":108,"name":"Aesop.RPINFCache.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFCache\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Cache for `rpinf`. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFCache","kind":"structure","line":107,"name":"Aesop.RPINFCache","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L107-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">RPINFRaw</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An expression in PINF at `reducible` transparency. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.RPINFRaw","kind":"def","line":103,"name":"Aesop.RPINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L103-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToMessageDataPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Message.html#Lean.ToMessageData\">Lean.ToMessageData</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToMessageDataPINFRaw","kind":"instance","line":100,"name":"Aesop.instToMessageDataPINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L100-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToFormatPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Std.ToFormat</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToFormatPINFRaw","kind":"instance","line":97,"name":"Aesop.instToFormatPINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L97-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instToStringPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instToStringPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instToStringPINFRaw","kind":"instance","line":94,"name":"Aesop.instToStringPINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L94-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instHashablePINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instHashablePINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instHashablePINFRaw","kind":"instance","line":91,"name":"Aesop.instHashablePINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L91-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instBEqPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instBEqPINFRaw","kind":"instance","line":88,"name":"Aesop.instBEqPINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L88-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedPINFRaw</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINFRaw","kind":"instance","line":86,"name":"Aesop.instInhabitedPINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINFRaw.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedPINFRaw</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.instInhabitedPINFRaw.default","kind":"def","line":86,"name":"Aesop.instInhabitedPINFRaw.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.toExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINFRaw</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.toExpr","kind":"def","line":85,"name":"Aesop.PINFRaw.toExpr","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINFRaw</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toExpr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\">PINFRaw</a> <span class=\"fn\">md</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINFRaw.mk","kind":"ctor","line":84,"name":"Aesop.PINFRaw.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.PINFRaw\"><span class=\"name\">Aesop</span>.<span class=\"name\">PINFRaw</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">md</span> : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An expression in PINF at transparency `md`. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.PINFRaw","kind":"structure","line":83,"name":"Aesop.PINFRaw","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L83-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfHash\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>","info":{"doc":"Compute the PINF hash of an expression in PINF. The hash ignores binder\nnames, binder info and proofs marked by `mdataPINFIsProofName`. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfHash","kind":"def","line":78,"name":"Aesop.pinfHash","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L78-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfHashCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfHashCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <span class=\"fn\">s</span> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"Compute the PINF hash of an expression in PINF. The hash ignores binder\nnames, binder info and proofs marked by `mdataPINFIsProofName`. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfHashCore","kind":"opaque","line":52,"name":"Aesop.pinfHashCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L52-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfEq\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether two expressions in PINF are equal. We assume that the two\nexpressions are type-correct, in PINF and have defeq types. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfEq","kind":"def","line":47,"name":"Aesop.pinfEq","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L47-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.pinfEqCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">pinfEqCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether two expressions in PINF are equal. We assume that the two\nexpressions are type-correct, in PINF and have defeq types. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.pinfEqCore","kind":"def","line":28,"name":"Aesop.pinfEqCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L28-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.mdataIsProof\"><span class=\"name\">Aesop</span>.<span class=\"name\">mdataIsProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Check whether `d` indicates that the enclosed expression is a proof. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.mdataIsProof","kind":"def","line":23,"name":"Aesop.mdataIsProof","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L23-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.mdataSetIsProof\"><span class=\"name\">Aesop</span>.<span class=\"name\">mdataSetIsProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a></div></div>","info":{"doc":"Modify `d` to indicate that the enclosed expression is a proof. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.mdataSetIsProof","kind":"def","line":19,"name":"Aesop.mdataSetIsProof","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L19-L21"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RPINF/Basic.html#Aesop.mdataPINFIsProofName\"><span class=\"name\">Aesop</span>.<span class=\"name\">mdataPINFIsProofName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>","info":{"doc":"`MData` tag for expressions that are proofs. ","docLink":"./Aesop/RPINF/Basic.html#Aesop.mdataPINFIsProofName","kind":"def","line":15,"name":"Aesop.mdataPINFIsProofName","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RPINF/Basic.lean#L15-L17"}}],"imports":["Init","Lean"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedPINFRaw","typeNames":["Aesop.PINFRaw"]},{"className":"BEq","name":"Aesop.instBEqPINFRaw","typeNames":["Aesop.PINFRaw"]},{"className":"Hashable","name":"Aesop.instHashablePINFRaw","typeNames":["Aesop.PINFRaw"]},{"className":"ToString","name":"Aesop.instToStringPINFRaw","typeNames":["Aesop.PINFRaw"]},{"className":"Std.ToFormat","name":"Aesop.instToFormatPINFRaw","typeNames":["Aesop.PINFRaw"]},{"className":"Lean.ToMessageData","name":"Aesop.instToMessageDataPINFRaw","typeNames":["Aesop.PINFRaw"]},{"className":"Inhabited","name":"Aesop.instInhabitedRPINFCache","typeNames":["Aesop.RPINFCache"]},{"className":"EmptyCollection","name":"Aesop.instEmptyCollectionRPINFCache","typeNames":["Aesop.RPINFCache"]},{"className":"Inhabited","name":"Aesop.instInhabitedPINF","typeNames":["Aesop.PINF"]},{"className":"BEq","name":"Aesop.instBEqPINF","typeNames":["Aesop.PINF"]},{"className":"Hashable","name":"Aesop.instHashablePINF","typeNames":["Aesop.PINF"]},{"className":"Ord","name":"Aesop.instOrdPINF","typeNames":["Aesop.PINF"]},{"className":"ToString","name":"Aesop.instToStringPINF","typeNames":["Aesop.PINF"]},{"className":"Std.ToFormat","name":"Aesop.instToFormatPINF","typeNames":["Aesop.PINF"]},{"className":"Lean.ToMessageData","name":"Aesop.instToMessageDataPINF","typeNames":["Aesop.PINF"]}],"name":"Aesop.RPINF.Basic"}