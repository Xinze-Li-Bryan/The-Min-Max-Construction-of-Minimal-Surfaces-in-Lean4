{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.check\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">old </span><span class=\"fn\">new</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.check","kind":"def","line":210,"name":"Aesop.GoalDiff.check","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L210-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.checkCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">checkCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">old </span><span class=\"fn\">new</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.checkCore","kind":"def","line":142,"name":"Aesop.GoalDiff.checkCore","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L142-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.comp\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff₁ </span><span class=\"fn\">diff₂</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></div></div>","info":{"doc":"If `diff₁` is the difference between goals `g₁` and `g₂` and `diff₂` is the\ndifference between `g₂` and `g₃`, then `diff₁.comp diff₂` is the difference\nbetween `g₁` and `g₃`.\n\nWe assume that a hypothesis whose RPINF changed between `g₁` and `g₂` does not\nchange back, i.e. the hypothesis' RPINF is still different between `g₁` and `g₃`.\n","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.comp","kind":"def","line":117,"name":"Aesop.GoalDiff.comp","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L117-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.targetChanged'\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">targetChanged'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.targetChanged'","kind":"def","line":107,"name":"Aesop.GoalDiff.targetChanged'","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L107-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.diffGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">diffGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">old </span><span class=\"fn\">new</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></span></div></div>","info":{"doc":"Diff two goals.\n","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.diffGoals","kind":"def","line":90,"name":"Aesop.diffGoals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L90-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.getNewFVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">getNewFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldGoal </span><span class=\"fn\">newGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldLCtx </span><span class=\"fn\">newLCtx</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.getNewFVars","kind":"def","line":77,"name":"Aesop.getNewFVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L77-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.isRPINFEqualLDecl\"><span class=\"name\">Aesop</span>.<span class=\"name\">isRPINFEqualLDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal₁ </span><span class=\"fn\">goal₂</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ldecl₁ </span><span class=\"fn\">ldecl₂</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.isRPINFEqualLDecl","kind":"def","line":68,"name":"Aesop.isRPINFEqualLDecl","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L68-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.isRPINFEqual\"><span class=\"name\">Aesop</span>.<span class=\"name\">isRPINFEqual</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal₁ </span><span class=\"fn\">goal₂</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e₁ </span><span class=\"fn\">e₂</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.isRPINFEqual","kind":"def","line":65,"name":"Aesop.isRPINFEqual","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L65-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldGoal </span><span class=\"fn\">newGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.empty","kind":"def","line":58,"name":"Aesop.GoalDiff.empty","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L58-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.instInhabitedGoalDiff\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedGoalDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.instInhabitedGoalDiff","kind":"instance","line":56,"name":"Aesop.instInhabitedGoalDiff","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.instInhabitedGoalDiff.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedGoalDiff</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.instInhabitedGoalDiff.default","kind":"def","line":56,"name":"Aesop.instInhabitedGoalDiff.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.targetChanged\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">targetChanged</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/LBool.html#Lean.LBool\">Lean.LBool</a></div></div>","info":{"doc":"Is the old goal's target RPINF equal to the new goal's target RPINF? ","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.targetChanged","kind":"def","line":55,"name":"Aesop.GoalDiff.targetChanged","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.removedFVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">removedFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>","info":{"doc":"`FVarId`s that appear in the old goal, but not (or with a different type)\nin the new goal. ","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.removedFVars","kind":"def","line":53,"name":"Aesop.GoalDiff.removedFVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.addedFVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">addedFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>","info":{"doc":"`FVarId`s that appear in the new goal, but not (or with a different type)\nin the old goal. ","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.addedFVars","kind":"def","line":50,"name":"Aesop.GoalDiff.addedFVars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.newGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">newGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>","info":{"doc":"The new goal. ","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.newGoal","kind":"def","line":47,"name":"Aesop.GoalDiff.newGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.oldGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">oldGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>","info":{"doc":"The old goal. ","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.oldGoal","kind":"def","line":45,"name":"Aesop.GoalDiff.oldGoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oldGoal </span><span class=\"fn\">newGoal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addedFVars </span><span class=\"fn\">removedFVars</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targetChanged</span> : <a href=\"./Lean/Data/LBool.html#Lean.LBool\">Lean.LBool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff.mk","kind":"ctor","line":43,"name":"Aesop.GoalDiff.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalDiff</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A representation of the differences between two goals. Each Aesop rule produces\na `GoalDiff` between the goal on which the rule was run (the 'old goal') and\neach of the subgoals produced by the rule (the 'new goals').\n\nWe use the produced `GoalDiff`s to update stateful data structures which cache\ninformation about Aesop goals and for which it is more efficient to update the\ncached information than to recompute it for each goal.\n\nHypotheses are identified by their `FVarId` *and* the RPINF of their type and\nvalue (if any). This means that when a hypothesis `h : T` with `FVarId` `i`\nappears in the old goal and `h : T'` with `FVarId` `i` appears in the new goal,\nbut the RPINF of `T` is not equal to the RPINF of `T'`, then `h` is treated as\nboth added (with the new type) and removed (with the old type). This can happen\nwhen the type of a hyp changes to another type that is definitionally equal at\n`default`, but not at `reducible` transparency.\n\nThe target is identified by RPINF.\n","docLink":"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff","kind":"structure","line":15,"name":"Aesop.GoalDiff","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/GoalDiff.lean#L15-L56"}}],"imports":["Init","Aesop.RPINF","Aesop.RuleTac.FVarIdSubst","Aesop.Util.Basic"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedGoalDiff","typeNames":["Aesop.GoalDiff"]}],"name":"Aesop.RuleTac.GoalDiff"}