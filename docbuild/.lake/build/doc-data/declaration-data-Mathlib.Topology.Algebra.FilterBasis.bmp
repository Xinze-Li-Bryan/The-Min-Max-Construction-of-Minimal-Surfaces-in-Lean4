{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.ofBases\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">ofBases</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">BR</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">BM</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">BM</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">BR</span>, <span class=\"fn\">∃ <span class=\"fn\">W</span> ∈ <span class=\"fn\">BM</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">W</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul_left</span> : <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">BM</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">BM</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul_right</span> : <span class=\"fn\">∀ (<span class=\"fn\">m₀</span> : <span class=\"fn\">M</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">BM</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">BR</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"Build a module filter basis from compatible ring and additive group filter bases. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.ofBases","kind":"def","line":371,"name":"ModuleFilterBasis.ofBases","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L371-L387"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.continuousSMul\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">continuousSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#IsTopologicalRing\">IsTopologicalRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/MulAction.html#ContinuousSMul\">ContinuousSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"If a module is endowed with a topological structure coming from\na module filter basis then it's a topological module. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.continuousSMul","kind":"instance","line":360,"name":"ModuleFilterBasis.continuousSMul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L360-L369"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ContinuousSMul.of_basis_zero\"><span class=\"name\">ContinuousSMul</span>.<span class=\"name\">of_basis_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#IsTopologicalRing\">IsTopologicalRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">p</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsmul</span> : <span class=\"fn\">∀ {<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">i</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsmul_left</span> : <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">b</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">b</span> <span class=\"fn\">i</span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsmul_right</span> : <span class=\"fn\">∀ (<span class=\"fn\">m₀</span> : <span class=\"fn\">M</span>) {<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">b</span> <span class=\"fn\">i</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/MulAction.html#ContinuousSMul\">ContinuousSMul</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"A topological additive group with a basis of `𝓝 0` satisfying the axioms of `ModuleFilterBasis`\nis a topological module.\n\nThis lemma is mathematically useless because one could obtain such a result by applying\n`ModuleFilterBasis.continuousSMul` and use the fact that group topologies are characterized\nby their neighborhoods of 0 to obtain the `ContinuousSMul` on the pre-existing topology.\n\nBut it turns out it's just easier to get it as a byproduct of the proof, so this is just a free\nquality-of-life improvement. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ContinuousSMul.of_basis_zero","kind":"theorem","line":329,"name":"ContinuousSMul.of_basis_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L329-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">topology'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"The topology associated to a module filter basis on a module over a topological ring.\nIt has the given basis as a basis of neighborhoods of zero. This version gets the ring\ntopology by unification instead of type class inference. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology'","kind":"def","line":322,"name":"ModuleFilterBasis.topology'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L322-L327"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"The topology associated to a module filter basis on a module over a topological ring.\nIt has the given basis as a basis of neighborhoods of zero. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.topology","kind":"def","line":317,"name":"ModuleFilterBasis.topology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L317-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.instInhabitedOfDiscreteTopology\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">instInhabitedOfDiscreteTopology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span>)</span></span></div></div>","info":{"doc":"If `R` is discrete then the trivial additive group filter basis on any `R`-module is a\nmodule filter basis. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.instInhabitedOfDiscreteTopology","kind":"instance","line":296,"name":"ModuleFilterBasis.instInhabitedOfDiscreteTopology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L296-L315"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₀</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right","kind":"theorem","line":293,"name":"ModuleFilterBasis.smul_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L293-L294"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left","kind":"theorem","line":290,"name":"ModuleFilterBasis.smul_left","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L290-L291"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">∃ <span class=\"fn\">W</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">W</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul","kind":"theorem","line":287,"name":"ModuleFilterBasis.smul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L287-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.GroupFilterBasis.hasMem\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">hasMem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.GroupFilterBasis.hasMem","kind":"instance","line":284,"name":"ModuleFilterBasis.GroupFilterBasis.hasMem","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L284-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₀</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_right'","kind":"theorem","line":277,"name":"ModuleFilterBasis.smul_right'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L277-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul_left'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul_left'","kind":"theorem","line":276,"name":"ModuleFilterBasis.smul_left'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L276-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul'\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">smul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">∃ <span class=\"fn\">W</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">W</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.smul'","kind":"theorem","line":275,"name":"ModuleFilterBasis.smul'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L275-L275"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.mk\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toAddGroupFilterBasis</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">∃ <span class=\"fn\">W</span> ∈ <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">W</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul_left'</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>},\n    <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">smul_right'</span> : <span class=\"fn\">∀ (<span class=\"fn\">m₀</span> : <span class=\"fn\">M</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">m₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.mk","kind":"ctor","line":273,"name":"ModuleFilterBasis.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L273-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.toAddGroupFilterBasis\"><span class=\"name\">ModuleFilterBasis</span>.<span class=\"name\">toAddGroupFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\">ModuleFilterBasis</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">M</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis.toAddGroupFilterBasis","kind":"def","line":273,"name":"ModuleFilterBasis.toAddGroupFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L273-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis\"><span class=\"name\">ModuleFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">M</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>","info":{"doc":"A `ModuleFilterBasis` on a module is a `FilterBasis` satisfying some additional axioms.\nExample : if `M` is a topological module then the neighbourhoods of zero are a\n`ModuleFilterBasis`. Conversely given a `ModuleFilterBasis` one can define a topology\ncompatible with the module structure on `M`. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#ModuleFilterBasis","kind":"structure","line":269,"name":"ModuleFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L269-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.isTopologicalRing\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">isTopologicalRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#IsTopologicalRing\">IsTopologicalRing</a> <span class=\"fn\">R</span></span></div></div>","info":{"doc":"If a ring is endowed with a topological structure coming from\na ring filter basis then it's a topological ring. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.isTopologicalRing","kind":"instance","line":241,"name":"RingFilterBasis.isTopologicalRing","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L241-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.topology\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span></div></div>","info":{"doc":"The topology associated to a ring filter basis.\nIt has the given basis as a basis of neighborhoods of zero. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.topology","kind":"def","line":236,"name":"RingFilterBasis.topology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L236-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right","kind":"theorem","line":233,"name":"RingFilterBasis.mul_right","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L233-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left","kind":"theorem","line":230,"name":"RingFilterBasis.mul_left","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L230-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul","kind":"theorem","line":227,"name":"RingFilterBasis.mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L227-L228"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.instMembershipSet\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">instMembershipSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.instMembershipSet","kind":"instance","line":224,"name":"RingFilterBasis.instMembershipSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L224-L225"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right'\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_right'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_right'","kind":"theorem","line":218,"name":"RingFilterBasis.mul_right'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L218-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left'\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul_left'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul_left'","kind":"theorem","line":217,"name":"RingFilterBasis.mul_left'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul'\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mul'","kind":"theorem","line":216,"name":"RingFilterBasis.mul'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L216-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mk\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toAddGroupFilterBasis</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul_left'</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>},\n    <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul_right'</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">R</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>},\n    <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toAddGroupFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.mk","kind":"ctor","line":215,"name":"RingFilterBasis.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L215-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.toAddGroupFilterBasis\"><span class=\"name\">RingFilterBasis</span>.<span class=\"name\">toAddGroupFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">R</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis.toAddGroupFilterBasis","kind":"def","line":215,"name":"RingFilterBasis.toAddGroupFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L215-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\"><span class=\"name\">RingFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">R</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A `RingFilterBasis` on a ring is a `FilterBasis` satisfying some additional axioms.\nExample : if `R` is a topological ring then the neighbourhoods of the identity are a\n`RingFilterBasis`. Conversely given a `RingFilterBasis` on a ring `R`, one can define a\ntopology on `R` which is compatible with the ring structure. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis","kind":"class","line":211,"name":"RingFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L211-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.isTopologicalAddGroup\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">isTopologicalAddGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"If an additive group is endowed with a topological structure coming from an\nadditive group filter basis, then it's an additive topological group. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.isTopologicalAddGroup","kind":"instance","line":183,"name":"AddGroupFilterBasis.isTopologicalAddGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L183-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.isTopologicalGroup\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">isTopologicalGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"If a group is endowed with a topological structure coming from a group filter basis then, it's a\ntopological group. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.isTopologicalGroup","kind":"instance","line":181,"name":"GroupFilterBasis.isTopologicalGroup","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L181-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mem_nhds_zero\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">mem_nhds_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mem_nhds_zero","kind":"theorem","line":174,"name":"AddGroupFilterBasis.mem_nhds_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L174-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mem_nhds_one\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mem_nhds_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mem_nhds_one","kind":"theorem","line":174,"name":"GroupFilterBasis.mem_nhds_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L174-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_hasBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_zero_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span> <a href=\"./Init/Prelude.html#id\">id</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_hasBasis","kind":"theorem","line":168,"name":"AddGroupFilterBasis.nhds_zero_hasBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L168-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_hasBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_one_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span> <a href=\"./Init/Prelude.html#id\">id</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_hasBasis","kind":"theorem","line":168,"name":"GroupFilterBasis.nhds_one_hasBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L168-L172"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_hasBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x₀</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_hasBasis","kind":"theorem","line":162,"name":"AddGroupFilterBasis.nhds_hasBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L162-L162"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_hasBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x₀</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_hasBasis","kind":"theorem","line":162,"name":"GroupFilterBasis.nhds_hasBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L162-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_eq\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_zero_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.filter\">filter</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_zero_eq","kind":"theorem","line":155,"name":"AddGroupFilterBasis.nhds_zero_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_eq\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_one_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.filter\">filter</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_one_eq","kind":"theorem","line":155,"name":"GroupFilterBasis.nhds_one_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L155-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_eq\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">nhds_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\">N</a></span> <span class=\"fn\">x₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.nhds_eq","kind":"theorem","line":140,"name":"AddGroupFilterBasis.nhds_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L140-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_eq\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">nhds_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\">N</a></span> <span class=\"fn\">x₀</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.nhds_eq","kind":"theorem","line":140,"name":"GroupFilterBasis.nhds_eq","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L140-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.topology\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"The topological space structure coming from an additive group filter basis. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.topology","kind":"def","line":136,"name":"AddGroupFilterBasis.topology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.topology\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">topology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"The topological space structure coming from a group filter basis. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.topology","kind":"def","line":135,"name":"GroupFilterBasis.topology","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L135-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.hasBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\">N</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.hasBasis","kind":"theorem","line":130,"name":"AddGroupFilterBasis.hasBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L130-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.hasBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">hasBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\">N</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>) =&gt; <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">V</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.hasBasis","kind":"theorem","line":130,"name":"GroupFilterBasis.hasBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L130-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N_zero\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">N_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\">N</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.filter\">filter</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N_zero","kind":"theorem","line":126,"name":"AddGroupFilterBasis.N_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L126-L126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N_one\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">N_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\">N</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.filter\">filter</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N_one","kind":"theorem","line":126,"name":"GroupFilterBasis.N_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L126-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">N</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">G</span></span></span></div></div>","info":{"doc":"The neighborhood function of an `AddGroupFilterBasis`. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.N","kind":"def","line":122,"name":"AddGroupFilterBasis.N","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L122-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">N</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">G</span></span></span></div></div>","info":{"doc":"The neighborhood function of a `GroupFilterBasis`. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.N","kind":"def","line":121,"name":"GroupFilterBasis.N","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L121-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.subset_add_self\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">subset_add_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">U</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">U</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.subset_add_self","kind":"theorem","line":117,"name":"AddGroupFilterBasis.subset_add_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L117-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.subset_mul_self\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">subset_mul_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">U</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">U</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.subset_mul_self","kind":"theorem","line":117,"name":"GroupFilterBasis.subset_mul_self","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L117-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabited\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span>)</span></span></div></div>","info":{"doc":"The trivial additive group filter basis consists of `{0}` only. The associated\ntopology is discrete. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instInhabited","kind":"instance","line":105,"name":"AddGroupFilterBasis.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L105-L106"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instInhabited\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span>)</span></span></div></div>","info":{"doc":"The trivial group filter basis consists of `{1}` only. The associated topology\nis discrete. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instInhabited","kind":"instance","line":103,"name":"GroupFilterBasis.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L103-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj","kind":"theorem","line":99,"name":"AddGroupFilterBasis.conj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L99-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₀</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj","kind":"theorem","line":99,"name":"GroupFilterBasis.conj","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L99-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg","kind":"theorem","line":95,"name":"AddGroupFilterBasis.neg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L95-L95"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv","kind":"theorem","line":95,"name":"GroupFilterBasis.inv","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L95-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add","kind":"theorem","line":91,"name":"AddGroupFilterBasis.add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L91-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">B</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul","kind":"theorem","line":91,"name":"GroupFilterBasis.mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L91-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero","kind":"theorem","line":87,"name":"AddGroupFilterBasis.zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">B</span> → <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one","kind":"theorem","line":87,"name":"GroupFilterBasis.one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L87-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instMembershipSet\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">instMembershipSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.instMembershipSet","kind":"instance","line":83,"name":"AddGroupFilterBasis.instMembershipSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instMembershipSet\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">instMembershipSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.instMembershipSet","kind":"instance","line":83,"name":"GroupFilterBasis.instMembershipSet","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L83-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#addGroupFilterBasisOfComm\"><span class=\"name\">addGroupFilterBasisOfComm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sets</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonempty</span> : <span class=\"fn\"><span class=\"fn\">sets</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inter_sets</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">sets</span> → <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">sets</span> → <span class=\"fn\">∃ <span class=\"fn\">z</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">z</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">y</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero</span> : <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">add</span> : <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">neg</span> : <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"`AddGroupFilterBasis` constructor in the additive commutative group case. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#addGroupFilterBasisOfComm","kind":"def","line":66,"name":"addGroupFilterBasisOfComm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#groupFilterBasisOfComm\"><span class=\"name\">groupFilterBasisOfComm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sets</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonempty</span> : <span class=\"fn\"><span class=\"fn\">sets</span>.<a href=\"./Mathlib/Data/Set/Defs.html#Set.Nonempty\">Nonempty</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inter_sets</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>), <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">sets</span> → <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">sets</span> → <span class=\"fn\">∃ <span class=\"fn\">z</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">z</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">y</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one</span> : <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul</span> : <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv</span> : <span class=\"fn\">∀ <span class=\"fn\">U</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\">sets</span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"`GroupFilterBasis` constructor in the commutative group case. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#groupFilterBasisOfComm","kind":"def","line":65,"name":"groupFilterBasisOfComm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L65-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">conj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.conj'","kind":"theorem","line":61,"name":"AddGroupFilterBasis.conj'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">neg'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.neg'","kind":"theorem","line":60,"name":"AddGroupFilterBasis.neg'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.add'","kind":"theorem","line":59,"name":"AddGroupFilterBasis.add'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero'\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.zero'","kind":"theorem","line":58,"name":"AddGroupFilterBasis.zero'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mk\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFilterBasis</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">add'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">neg'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">conj'</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">A</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">A</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">A</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x₀</span>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.mk","kind":"ctor","line":57,"name":"AddGroupFilterBasis.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.toFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span>.<span class=\"name\">toFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\">AddGroupFilterBasis</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">A</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis.toFilterBasis","kind":"def","line":57,"name":"AddGroupFilterBasis.toFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L57-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis\"><span class=\"name\">AddGroupFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">A</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"An `AddGroupFilterBasis` on an additive group is a `FilterBasis` satisfying some additional\naxioms. Example : if `G` is a topological group then the neighbourhoods of the identity are an\n`AddGroupFilterBasis`. Conversely given an `AddGroupFilterBasis` one can define a topology\ncompatible with the group structure on `G`. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#AddGroupFilterBasis","kind":"class","line":53,"name":"AddGroupFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L53-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">conj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₀</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.conj'","kind":"theorem","line":51,"name":"GroupFilterBasis.conj'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">inv'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.inv'","kind":"theorem","line":50,"name":"GroupFilterBasis.inv'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mul'","kind":"theorem","line":49,"name":"GroupFilterBasis.mul'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one'\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.one'","kind":"theorem","line":48,"name":"GroupFilterBasis.one'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mk\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFilterBasis</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv'</span> : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">conj'</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">x₀</span> : <span class=\"fn\">G</span>) {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span>}, <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span> → <span class=\"fn\">∃ <span class=\"fn\">V</span> ∈ <span class=\"fn\"><span class=\"fn\">toFilterBasis</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis.sets\">sets</a></span>, <span class=\"fn\">V</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span>) =&gt; <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x₀</span><a href=\"./Init/Prelude.html#Inv.inv\">⁻¹</a>)</span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">U</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.mk","kind":"ctor","line":47,"name":"GroupFilterBasis.mk","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.toFilterBasis\"><span class=\"name\">GroupFilterBasis</span>.<span class=\"name\">toFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\">GroupFilterBasis</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">G</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis.toFilterBasis","kind":"def","line":47,"name":"GroupFilterBasis.toFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L47-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis\"><span class=\"name\">GroupFilterBasis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases/Basic.html#FilterBasis\">FilterBasis</a> <span class=\"fn\">G</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"A `GroupFilterBasis` on a group is a `FilterBasis` satisfying some additional axioms.\nExample : if `G` is a topological group then the neighbourhoods of the identity are a\n`GroupFilterBasis`. Conversely given a `GroupFilterBasis` one can define a topology\ncompatible with the group structure on `G`. ","docLink":"./Mathlib/Topology/Algebra/FilterBasis.html#GroupFilterBasis","kind":"class","line":43,"name":"GroupFilterBasis","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Topology/Algebra/FilterBasis.lean#L43-L51"}}],"imports":["Init","Mathlib.Topology.Algebra.Module.Basic"],"instances":[{"className":"Membership","name":"GroupFilterBasis.instMembershipSet","typeNames":["Set","GroupFilterBasis"]},{"className":"Membership","name":"AddGroupFilterBasis.instMembershipSet","typeNames":["Set","AddGroupFilterBasis"]},{"className":"Inhabited","name":"GroupFilterBasis.instInhabited","typeNames":["GroupFilterBasis"]},{"className":"Inhabited","name":"AddGroupFilterBasis.instInhabited","typeNames":["AddGroupFilterBasis"]},{"className":"IsTopologicalGroup","name":"GroupFilterBasis.isTopologicalGroup","typeNames":[]},{"className":"IsTopologicalAddGroup","name":"AddGroupFilterBasis.isTopologicalAddGroup","typeNames":[]},{"className":"Membership","name":"RingFilterBasis.instMembershipSet","typeNames":["Set","RingFilterBasis"]},{"className":"IsTopologicalRing","name":"RingFilterBasis.isTopologicalRing","typeNames":[]},{"className":"Membership","name":"ModuleFilterBasis.GroupFilterBasis.hasMem","typeNames":["Set","ModuleFilterBasis"]},{"className":"Inhabited","name":"ModuleFilterBasis.instInhabitedOfDiscreteTopology","typeNames":["ModuleFilterBasis"]},{"className":"ContinuousSMul","name":"ModuleFilterBasis.continuousSMul","typeNames":[]}],"name":"Mathlib.Topology.Algebra.FilterBasis"}