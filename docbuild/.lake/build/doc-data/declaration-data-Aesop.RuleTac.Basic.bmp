{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesTarget.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedCasesTarget</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesTarget.default","kind":"def","line":171,"name":"Aesop.instInhabitedCasesTarget.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedCasesTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesTarget","kind":"instance","line":171,"name":"Aesop.instInhabitedCasesTarget","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L171-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.patterns\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span>.<span class=\"name\">patterns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patterns</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.patterns","kind":"ctor","line":170,"name":"Aesop.CasesTarget.patterns","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L170-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.decl\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span>.<span class=\"name\">decl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\">CasesTarget</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget.decl","kind":"ctor","line":169,"name":"Aesop.CasesTarget.decl","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L169-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesTarget","kind":"inductive","line":168,"name":"Aesop.CasesTarget","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L168-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesPattern\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedCasesPattern</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\">CasesPattern</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedCasesPattern","kind":"instance","line":166,"name":"Aesop.instInhabitedCasesPattern","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L166-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern\"><span class=\"name\">Aesop</span>.<span class=\"name\">CasesPattern</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.CasesPattern","kind":"def","line":165,"name":"Aesop.CasesPattern","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L165-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.TacGen\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacGen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A tactic generator is a special sort of rule tactic, intended for use with\ngenerative machine learning methods. It generates zero or more tactics\n(represented as strings) that could be applied to the goal, plus a success\nprobability for each tactic. When Aesop executes a tactic generator, it executes\neach of the tactics and, if the tactic succeeds, adds a rule application for it.\nThe tactic's success probability (which must be between 0 and 1, inclusive)\nbecomes the success probability of the rule application. A `TacGen` rule\nsucceeds if at least one of its suggested tactics succeeds.\n","docLink":"./Aesop/RuleTac/Basic.html#Aesop.TacGen","kind":"def","line":151,"name":"Aesop.TacGen","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L151-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac.ofTacticSyntax\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">ofTacticSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a> â†’ <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTac.ofTacticSyntax","kind":"def","line":136,"name":"Aesop.RuleTac.ofTacticSyntax","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L136-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac.ofSingleRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">ofSingleRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac\">SingleRuleTac</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTac.ofSingleRuleTac","kind":"def","line":133,"name":"Aesop.RuleTac.ofSingleRuleTac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L133-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac.toRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">SingleRuleTac</span>.<span class=\"name\">toRuleTac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac\">SingleRuleTac</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac.toRuleTac","kind":"def","line":127,"name":"Aesop.SingleRuleTac.toRuleTac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L127-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">SingleRuleTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `RuleTac` which generates only a single `RuleApplication`.\n","docLink":"./Aesop/RuleTac/Basic.html#Aesop.SingleRuleTac","kind":"def","line":120,"name":"Aesop.SingleRuleTac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L120-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTac","kind":"instance","line":117,"name":"Aesop.instInhabitedRuleTac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L117-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A `RuleTac` is the tactic that is run when a rule is applied to a goal.\n","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTac","kind":"def","line":112,"name":"Aesop.RuleTac","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L112-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacOutput\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacOutput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">RuleTacOutput</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacOutput","kind":"instance","line":110,"name":"Aesop.instInhabitedRuleTacOutput","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacOutput.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacOutput</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">RuleTacOutput</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacOutput.default","kind":"def","line":110,"name":"Aesop.instInhabitedRuleTacOutput.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L110-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.applications\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacOutput</span>.<span class=\"name\">applications</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">RuleTacOutput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.applications","kind":"def","line":109,"name":"Aesop.RuleTacOutput.applications","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L109-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacOutput</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">applications</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\">RuleTacOutput</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput.mk","kind":"ctor","line":108,"name":"Aesop.RuleTacOutput.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L108-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacOutput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The result of a rule tactic is a list of rule applications.\n","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacOutput","kind":"structure","line":105,"name":"Aesop.RuleTacOutput","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L105-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.check\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.check","kind":"def","line":93,"name":"Aesop.RuleApplication.check","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L93-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.successProbability?\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">successProbability?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Percent.html#Aesop.Percent\">Percent</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.successProbability?","kind":"def","line":89,"name":"Aesop.RuleApplication.successProbability?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.scriptSteps?\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">scriptSteps?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Script.LazyStep</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.scriptSteps?","kind":"def","line":88,"name":"Aesop.RuleApplication.scriptSteps?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.postState\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">postState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.postState","kind":"def","line":87,"name":"Aesop.RuleApplication.postState","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.goals\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">goals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.goals","kind":"def","line":86,"name":"Aesop.RuleApplication.goals","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postState</span> : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">scriptSteps?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Script.LazyStep</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">successProbability?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Percent.html#Aesop.Percent\">Percent</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\">RuleApplication</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication.mk","kind":"ctor","line":85,"name":"Aesop.RuleApplication.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleApplication</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A single rule application, representing the application of a tactic to the input\ngoal. Must accurately report the following information:\n\n- `goals`: the goals generated by the tactic.\n- `postState`: the `MetaM` state after the tactic was run.\n- `scriptSteps?`: script steps which produce the same effect as the rule tactic.\n  If `input.options.generateScript = false` (where `input` is the\n  `RuleTacInput`), this field is ignored. If the tactic does not support script\n  generation, use `none`.\n- `successProbability`: The success probability of this rule application. If\n  `none`, we use the success probability of the applied rule.\n","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleApplication","kind":"structure","line":72,"name":"Aesop.RuleApplication","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L72-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.mvarIdToSubgoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">mvarIdToSubgoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">parentMVarId </span><span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.mvarIdToSubgoal","kind":"def","line":69,"name":"Aesop.mvarIdToSubgoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal.mvarId\"><span class=\"name\">Aesop</span>.<span class=\"name\">Subgoal</span>.<span class=\"name\">mvarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.Subgoal.mvarId","kind":"def","line":64,"name":"Aesop.Subgoal.mvarId","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L64-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedSubgoal.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedSubgoal</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedSubgoal.default","kind":"def","line":60,"name":"Aesop.instInhabitedSubgoal.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedSubgoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedSubgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedSubgoal","kind":"instance","line":60,"name":"Aesop.instInhabitedSubgoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal.diff\"><span class=\"name\">Aesop</span>.<span class=\"name\">Subgoal</span>.<span class=\"name\">diff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a></div></div>","info":{"doc":"A diff between the goal the rule was run on and this goal. Many `MetaM`\ntactics report information that allows you to easily construct a `GoalDiff`.\nIf you don't have access to such information, use `diffGoals`, but note that\nit may not give optimal results.\n","docLink":"./Aesop/RuleTac/Basic.html#Aesop.Subgoal.diff","kind":"def","line":59,"name":"Aesop.Subgoal.diff","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Subgoal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.Subgoal.mk","kind":"ctor","line":52,"name":"Aesop.Subgoal.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">Subgoal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A subgoal produced by a rule. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.Subgoal","kind":"structure","line":51,"name":"Aesop.Subgoal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L51-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacInput.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacInput</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacInput.default","kind":"def","line":49,"name":"Aesop.instInhabitedRuleTacInput.default","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacInput\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleTacInput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a></span></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.instInhabitedRuleTacInput","kind":"instance","line":49,"name":"Aesop.instInhabitedRuleTacInput","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.hypTypes\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">hypTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span></div></div>","info":{"doc":"Normalised types of all non-implementation detail hypotheses in the local\ncontext of `goal`. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.hypTypes","kind":"def","line":48,"name":"Aesop.RuleTacInput.hypTypes","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.options\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a></div></div>","info":{"doc":"The options given to Aesop. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.options","kind":"def","line":45,"name":"Aesop.RuleTacInput.options","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.patternSubsts?\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">patternSubsts?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></span></div></div>","info":{"doc":"If the rule has a pattern, the pattern substitutions that were found in\nthe goal. Each substitution is a list of expressions which were found by\nmatching the pattern against expressions in the goal. For example, if `h : max\na b = max a c` appears in the goal and the rule has pattern `max x y`, there\nwill be two substitutions `{x â†¦ a, y â†¦ b}`) and `{x â†¦ a, y â†¦ c}`.\n\nIf the rule does not have a pattern, this is `none`. Otherwise it is\nguaranteed to be `some xs` with `xs` non-empty. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.patternSubsts?","kind":"def","line":43,"name":"Aesop.RuleTacInput.patternSubsts?","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.indexMatchLocations\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">indexMatchLocations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">IndexMatchLocation</a></span></div></div>","info":{"doc":"If the rule is indexed, the locations (i.e. hyps or the target) matched by\nthe rule's index entries. Otherwise an empty set. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.indexMatchLocations","kind":"def","line":34,"name":"Aesop.RuleTacInput.indexMatchLocations","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mvars\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">mvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>","info":{"doc":"The set of mvars that `goal` depends on. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mvars","kind":"def","line":31,"name":"Aesop.RuleTacInput.mvars","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.goal\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">goal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>","info":{"doc":"The goal on which the rule is run. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.goal","kind":"def","line":29,"name":"Aesop.RuleTacInput.goal","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvars</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">indexMatchLocations</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchLocation\">IndexMatchLocation</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patternSubsts?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">options</span> : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hypTypes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\">RuleTacInput</a></div></div>","info":{"doc":"","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput.mk","kind":"ctor","line":27,"name":"Aesop.RuleTacInput.mk","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacInput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Input for a rule tactic. ","docLink":"./Aesop/RuleTac/Basic.html#Aesop.RuleTacInput","kind":"structure","line":26,"name":"Aesop.RuleTacInput","sourceLink":"https://github.com/leanprover-community/aesop/blob/9e8de5716b162ec8983a89711a186d13ff871c22/Aesop/RuleTac/Basic.lean#L26-L49"}}],"imports":["Init","Aesop.Forward.Match.Types","Aesop.Index.Basic","Aesop.Percent","Aesop.Rule.Forward","Aesop.RuleTac.GoalDiff","Aesop.RuleTac.FVarIdSubst","Aesop.Script.CtorNames","Aesop.Script.Step","Batteries.Lean.Meta.SavedState","Aesop.Options.Internal"],"instances":[{"className":"Inhabited","name":"Aesop.instInhabitedRuleTacInput","typeNames":["Aesop.RuleTacInput"]},{"className":"Inhabited","name":"Aesop.instInhabitedSubgoal","typeNames":["Aesop.Subgoal"]},{"className":"Inhabited","name":"Aesop.instInhabitedRuleTacOutput","typeNames":["Aesop.RuleTacOutput"]},{"className":"Inhabited","name":"Aesop.instInhabitedRuleTac","typeNames":["Aesop.RuleTac"]},{"className":"Inhabited","name":"Aesop.instInhabitedCasesPattern","typeNames":["Aesop.CasesPattern"]},{"className":"Inhabited","name":"Aesop.instInhabitedCasesTarget","typeNames":["Aesop.CasesTarget"]}],"name":"Aesop.RuleTac.Basic"}