{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalERealToENNReal\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalERealToENNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">PositivityExt</a></div></div>","info":{"doc":"Extension for the `positivity` tactic: projection from `EReal` to `ℝ≥0∞`.\n\nWe show that `EReal.toENNReal x` is positive whenever `x` is positive,\nand it is nonnegative otherwise.\nWe cannot deduce any corollaries from `x ≠ 0`, since `EReal.toENNReal x = 0` for `x < 0`.\n","docLink":"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalERealToENNReal","kind":"def","line":864,"name":"Mathlib.Meta.Positivity.evalERealToENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L864-L878"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalERealToReal\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalERealToReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">PositivityExt</a></div></div>","info":{"doc":"Extension for the `positivity` tactic: projection from `EReal` to `ℝ`.\n\nWe prove that `EReal.toReal x` is nonnegative whenever `x` is nonnegative.\nSince `EReal.toReal ⊤ = 0`, we cannot prove a stronger statement,\nat least without relying on a tactic like `finiteness`. ","docLink":"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalERealToReal","kind":"def","line":849,"name":"Mathlib.Meta.Positivity.evalERealToReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L849-L862"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalENNRealToEReal\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalENNRealToEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">PositivityExt</a></div></div>","info":{"doc":"Extension for the `positivity` tactic: cast from `ℝ≥0∞` to `EReal`. ","docLink":"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalENNRealToEReal","kind":"def","line":836,"name":"Mathlib.Meta.Positivity.evalENNRealToEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L836-L847"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalRealToEReal\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalRealToEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">PositivityExt</a></div></div>","info":{"doc":"Extension for the `positivity` tactic: cast from `ℝ` to `EReal`. ","docLink":"./Mathlib/Data/EReal/Basic.html#Mathlib.Meta.Positivity.evalRealToEReal","kind":"def","line":822,"name":"Mathlib.Meta.Positivity.evalRealToEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L822-L834"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.neTopBotEquivReal\"><span class=\"name\">EReal</span>.<span class=\"name\">neTopBotEquivReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a><a href=\"./Init/Core.html#Insert.insert\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>","info":{"doc":"The set of numbers in `EReal` that are not equal to `±∞` is equivalent to `ℝ`. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.neTopBotEquivReal","kind":"def","line":806,"name":"EReal.neTopBotEquivReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L806-L814"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.lt_iff_exists_real_btwn\"><span class=\"name\">EReal</span>.<span class=\"name\">lt_iff_exists_real_btwn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.lt_iff_exists_real_btwn","kind":"theorem","line":800,"name":"EReal.lt_iff_exists_real_btwn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L800-L804"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.lt_iff_exists_rat_btwn\"><span class=\"name\">EReal</span>.<span class=\"name\">lt_iff_exists_rat_btwn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.lt_iff_exists_rat_btwn","kind":"theorem","line":796,"name":"EReal.lt_iff_exists_rat_btwn","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L796-L798"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.exists_rat_btwn_of_lt\"><span class=\"name\">EReal</span>.<span class=\"name\">exists_rat_btwn_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> → <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Rat/Basic.html#Rat\">ℚ</a>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.exists_rat_btwn_of_lt","kind":"theorem","line":782,"name":"EReal.exists_rat_btwn_of_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L782-L794"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_mul\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_mul","kind":"theorem","line":775,"name":"EReal.natCast_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L775-L778"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_lt_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_lt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_lt_iff","kind":"theorem","line":771,"name":"EReal.natCast_lt_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L771-L773"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_le_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_le_iff","kind":"theorem","line":767,"name":"EReal.natCast_le_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L767-L769"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_ne_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_ne_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_ne_iff","kind":"theorem","line":764,"name":"EReal.natCast_ne_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L764-L765"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_eq_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_eq_iff","kind":"theorem","line":760,"name":"EReal.natCast_eq_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L760-L762"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_ne_top\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_ne_top","kind":"theorem","line":758,"name":"EReal.natCast_ne_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L758-L758"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.natCast_ne_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">natCast_ne_bot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.natCast_ne_bot","kind":"theorem","line":756,"name":"EReal.natCast_ne_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L756-L756"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_coe_eq_natCast\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_coe_eq_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_coe_eq_natCast","kind":"theorem","line":754,"name":"EReal.coe_coe_eq_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L754-L754"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_lt_toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_lt_toENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_lt_toENNReal","kind":"theorem","line":747,"name":"EReal.toENNReal_lt_toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L747-L750"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_le_toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_le_toENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_le_toENNReal","kind":"theorem","line":738,"name":"EReal.toENNReal_le_toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L738-L745"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_eq_toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_eq_toENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_eq_toENNReal","kind":"theorem","line":734,"name":"EReal.toENNReal_eq_toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L734-L736"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_toENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_toENNReal","kind":"theorem","line":728,"name":"EReal.toReal_toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L728-L732"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.real_coe_toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">real_coe_toENNReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.real_coe_toENNReal","kind":"theorem","line":726,"name":"EReal.real_coe_toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L726-L726"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_coe","kind":"theorem","line":719,"name":"EReal.toENNReal_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L719-L724"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_toENNReal_eq_max\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_toENNReal_eq_max</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_toENNReal_eq_max","kind":"theorem","line":714,"name":"EReal.coe_toENNReal_eq_max","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L714-L717"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_toENNReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_toENNReal","kind":"theorem","line":704,"name":"EReal.coe_toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L704-L712"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_pos_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_pos_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_pos_iff","kind":"theorem","line":700,"name":"EReal.toENNReal_pos_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L700-L702"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_ne_zero_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_ne_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_ne_zero_iff","kind":"theorem","line":697,"name":"EReal.toENNReal_ne_zero_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L697-L698"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_eq_zero_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_eq_zero_iff","kind":"theorem","line":694,"name":"EReal.toENNReal_eq_zero_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L694-L695"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_zero","kind":"theorem","line":692,"name":"EReal.toENNReal_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L692-L692"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_bot","kind":"theorem","line":691,"name":"EReal.toENNReal_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L691-L691"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_of_nonpos\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_of_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_of_nonpos","kind":"theorem","line":685,"name":"EReal.toENNReal_of_nonpos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L685-L689"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_ne_top_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_ne_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_ne_top_iff","kind":"theorem","line":683,"name":"EReal.toENNReal_ne_top_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L683-L683"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_eq_top_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_eq_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_eq_top_iff","kind":"theorem","line":677,"name":"EReal.toENNReal_eq_top_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L677-L681"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_of_ne_top\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_of_ne_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_of_ne_top","kind":"theorem","line":673,"name":"EReal.toENNReal_of_ne_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L673-L675"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_top\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\">toENNReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal_top","kind":"theorem","line":671,"name":"EReal.toENNReal_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L671-L671"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toENNReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></div></div>","info":{"doc":"`x.toENNReal` returns `x` if it is nonnegative, `0` otherwise. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toENNReal","kind":"def","line":666,"name":"EReal.toENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L666-L669"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_nsmul\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_nsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_nsmul","kind":"theorem","line":660,"name":"EReal.coe_ennreal_nsmul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L660-L662"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_mul\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_mul","kind":"theorem","line":651,"name":"EReal.coe_ennreal_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L651-L658"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_add\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_add","kind":"theorem","line":641,"name":"EReal.coe_ennreal_add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L641-L643"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_ne_bot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_bot","kind":"theorem","line":637,"name":"EReal.coe_ennreal_ne_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L637-L639"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.bot_lt_coe_ennreal\"><span class=\"name\">EReal</span>.<span class=\"name\">bot_lt_coe_ennreal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.bot_lt_coe_ennreal","kind":"theorem","line":633,"name":"EReal.bot_lt_coe_ennreal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L633-L635"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_pos_iff_ne_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_pos_iff_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_pos_iff_ne_zero","kind":"theorem","line":630,"name":"EReal.coe_ennreal_pos_iff_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L630-L631"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_pos\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_pos","kind":"theorem","line":626,"name":"EReal.coe_ennreal_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L626-L628"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.instCanLiftENNRealToERealLeOfNat\"><span class=\"name\">EReal</span>.<span class=\"name\">instCanLiftENNRealToERealLeOfNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/EReal/Basic.html#ENNReal.toEReal\">ENNReal.toEReal</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>) =&gt; <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.instCanLiftENNRealToERealLeOfNat","kind":"instance","line":624,"name":"EReal.instCanLiftENNRealToERealLeOfNat","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L624-L624"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.range_coe_ennreal\"><span class=\"name\">EReal</span>.<span class=\"name\">range_coe_ennreal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Mathlib/Data/EReal/Basic.html#ENNReal.toEReal\">ENNReal.toEReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.range_coe_ennreal","kind":"theorem","line":618,"name":"EReal.range_coe_ennreal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L618-L622"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_nonneg\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_nonneg","kind":"theorem","line":615,"name":"EReal.coe_ennreal_nonneg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L615-L616"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_one\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_one","kind":"theorem","line":611,"name":"EReal.coe_ennreal_ne_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L611-L613"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_zero","kind":"theorem","line":607,"name":"EReal.coe_ennreal_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L607-L609"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_one\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_one","kind":"theorem","line":603,"name":"EReal.coe_ennreal_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L603-L605"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_zero","kind":"theorem","line":599,"name":"EReal.coe_ennreal_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L599-L601"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_coe_ennreal_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_ne_coe_ennreal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ne_coe_ennreal_iff","kind":"theorem","line":596,"name":"EReal.coe_ennreal_ne_coe_ennreal_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L596-L597"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_coe_ennreal_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_eq_coe_ennreal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_coe_ennreal_iff","kind":"theorem","line":592,"name":"EReal.coe_ennreal_eq_coe_ennreal_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L592-L594"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_lt_coe_ennreal_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_lt_coe_ennreal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_lt_coe_ennreal_iff","kind":"theorem","line":588,"name":"EReal.coe_ennreal_lt_coe_ennreal_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L588-L590"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_le_coe_ennreal_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_le_coe_ennreal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_le_coe_ennreal_iff","kind":"theorem","line":584,"name":"EReal.coe_ennreal_le_coe_ennreal_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L584-L586"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_nnreal_lt_top\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_nnreal_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_nnreal_lt_top","kind":"theorem","line":581,"name":"EReal.coe_nnreal_lt_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L581-L582"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_nnreal_ne_top\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_nnreal_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_nnreal_ne_top","kind":"theorem","line":579,"name":"EReal.coe_nnreal_ne_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L579-L579"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_top_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_eq_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_eq_top_iff","kind":"theorem","line":575,"name":"EReal.coe_ennreal_eq_top_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L575-L577"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_injective\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/EReal/Basic.html#ENNReal.toEReal\">ENNReal.toEReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_injective","kind":"theorem","line":572,"name":"EReal.coe_ennreal_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L572-L573"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_strictMono\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/Data/EReal/Basic.html#ENNReal.toEReal\">ENNReal.toEReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_strictMono","kind":"theorem","line":569,"name":"EReal.coe_ennreal_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L569-L570"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_top\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_top","kind":"theorem","line":565,"name":"EReal.coe_ennreal_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L565-L567"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_one\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_one","kind":"theorem","line":561,"name":"EReal.coe_ennreal_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L561-L563"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_zero","kind":"theorem","line":557,"name":"EReal.coe_ennreal_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L557-L559"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_nnreal_eq_coe_real\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_nnreal_eq_coe_real</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_nnreal_eq_coe_real","kind":"theorem","line":554,"name":"EReal.coe_nnreal_eq_coe_real","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L554-L555"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_toReal","kind":"theorem","line":550,"name":"EReal.coe_ennreal_toReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L550-L552"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ofReal\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ennreal_ofReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ennreal_ofReal","kind":"theorem","line":546,"name":"EReal.coe_ennreal_ofReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L546-L548"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_coe_ennreal\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_coe_ennreal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_coe_ennreal","kind":"theorem","line":541,"name":"EReal.toReal_coe_ennreal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L541-L544"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo_bot_top\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioo_bot_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo_bot_top","kind":"theorem","line":534,"name":"EReal.preimage_coe_Ioo_bot_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L534-L537"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioo_bot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo_bot","kind":"theorem","line":529,"name":"EReal.preimage_coe_Ioo_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L529-L532"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioc_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioc_bot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioc_bot","kind":"theorem","line":524,"name":"EReal.preimage_coe_Ioc_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L524-L527"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo_top\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioo_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo_top","kind":"theorem","line":519,"name":"EReal.preimage_coe_Ioo_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L519-L522"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ico_top\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ico_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ico_top","kind":"theorem","line":514,"name":"EReal.preimage_coe_Ico_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L514-L517"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioo","kind":"theorem","line":509,"name":"EReal.preimage_coe_Ioo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L509-L512"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioc\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioc","kind":"theorem","line":504,"name":"EReal.preimage_coe_Ioc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L504-L507"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ico\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ico</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ico","kind":"theorem","line":499,"name":"EReal.preimage_coe_Ico","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L499-L502"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Icc\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Icc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Icc","kind":"theorem","line":494,"name":"EReal.preimage_coe_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L494-L497"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Iio_top\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Iio_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Iio_top","kind":"theorem","line":488,"name":"EReal.preimage_coe_Iio_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L488-L492"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Iio\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Iio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Iio","kind":"theorem","line":482,"name":"EReal.preimage_coe_Iio","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L482-L486"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Iic\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Iic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Iic","kind":"theorem","line":476,"name":"EReal.preimage_coe_Iic","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L476-L480"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioi_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioi_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioi_bot","kind":"theorem","line":470,"name":"EReal.preimage_coe_Ioi_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L470-L474"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioi\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ioi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ioi","kind":"theorem","line":464,"name":"EReal.preimage_coe_Ioi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L464-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ici\"><span class=\"name\">EReal</span>.<span class=\"name\">preimage_coe_Ici</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.preimage_coe_Ici","kind":"theorem","line":458,"name":"EReal.preimage_coe_Ici","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L458-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Iio\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Iio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Iio","kind":"theorem","line":452,"name":"EReal.image_coe_Iio","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L452-L456"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Iic\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Iic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iic\">Set.Iic</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Iic","kind":"theorem","line":446,"name":"EReal.image_coe_Iic","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L446-L450"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ioi\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Ioi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ioi","kind":"theorem","line":440,"name":"EReal.image_coe_Ioi","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L440-L444"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ioo\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Ioo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ioo","kind":"theorem","line":434,"name":"EReal.image_coe_Ioo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L434-L438"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ioc\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Ioc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ioc","kind":"theorem","line":428,"name":"EReal.image_coe_Ioc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L428-L432"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ici\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Ici</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ici","kind":"theorem","line":422,"name":"EReal.image_coe_Ici","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L422-L426"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ico\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Ico</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Ico","kind":"theorem","line":416,"name":"EReal.image_coe_Ico","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L416-L420"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Icc\"><span class=\"name\">EReal</span>.<span class=\"name\">image_coe_Icc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.image_coe_Icc","kind":"theorem","line":410,"name":"EReal.image_coe_Icc","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L410-L414"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.exists_between_coe_real\"><span class=\"name\">EReal</span>.<span class=\"name\">exists_between_coe_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">z</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.exists_between_coe_real","kind":"theorem","line":403,"name":"EReal.exists_between_coe_real","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L403-L408"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.eq_bot_iff_forall_lt\"><span class=\"name\">EReal</span>.<span class=\"name\">eq_bot_iff_forall_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.eq_bot_iff_forall_lt","kind":"theorem","line":393,"name":"EReal.eq_bot_iff_forall_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L393-L399"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.eq_top_iff_forall_lt\"><span class=\"name\">EReal</span>.<span class=\"name\">eq_top_iff_forall_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.eq_top_iff_forall_lt","kind":"theorem","line":385,"name":"EReal.eq_top_iff_forall_lt","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L385-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_toReal_le\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_toReal_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_toReal_le","kind":"theorem","line":380,"name":"EReal.coe_toReal_le","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L380-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.le_coe_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">le_coe_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.le_coe_toReal","kind":"theorem","line":375,"name":"EReal.le_coe_toReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L375-L378"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'x</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_toReal","kind":"theorem","line":371,"name":"EReal.coe_toReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L371-L373"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_le_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_le_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_le_toReal","kind":"theorem","line":365,"name":"EReal.toReal_le_toReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L365-L369"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_nonpos\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_nonpos","kind":"theorem","line":359,"name":"EReal.toReal_nonpos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L359-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_nonneg\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_nonneg","kind":"theorem","line":353,"name":"EReal.toReal_nonneg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L353-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_eq_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_eq_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx_top</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx_bot</span> : <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy_top</span> : <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy_bot</span> : <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_eq_toReal","kind":"theorem","line":346,"name":"EReal.toReal_eq_toReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L346-L351"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_ne_zero_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_ne_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_ne_zero_iff","kind":"theorem","line":343,"name":"EReal.toReal_ne_zero_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L343-L344"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_eq_zero_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_eq_zero_iff","kind":"theorem","line":340,"name":"EReal.toReal_eq_zero_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L340-L341"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_neg'\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_neg'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_neg'","kind":"theorem","line":336,"name":"EReal.coe_neg'","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L336-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_pos\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_pos","kind":"theorem","line":332,"name":"EReal.coe_pos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L332-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_nonpos\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_nonpos","kind":"theorem","line":328,"name":"EReal.coe_nonpos","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L328-L330"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_nonneg\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_nonneg","kind":"theorem","line":324,"name":"EReal.coe_nonneg","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L324-L326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_one\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_one","kind":"theorem","line":321,"name":"EReal.coe_ne_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L321-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_zero","kind":"theorem","line":318,"name":"EReal.coe_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L318-L319"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_eq_one\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_eq_one","kind":"theorem","line":314,"name":"EReal.coe_eq_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L314-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_eq_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_eq_zero","kind":"theorem","line":310,"name":"EReal.coe_eq_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L310-L312"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_nsmul\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_nsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_nsmul","kind":"theorem","line":306,"name":"EReal.coe_nsmul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L306-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_add\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_add","kind":"theorem","line":300,"name":"EReal.coe_add","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L300-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.range_coe_eq_Ioo\"><span class=\"name\">EReal</span>.<span class=\"name\">range_coe_eq_Ioo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.range_coe_eq_Ioo","kind":"theorem","line":296,"name":"EReal.range_coe_eq_Ioo","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L296-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.range_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">range_coe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a><a href=\"./Init/Core.html#Insert.insert\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.range_coe","kind":"theorem","line":292,"name":"EReal.range_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L292-L294"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.top_ne_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">top_ne_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.top_ne_zero","kind":"theorem","line":288,"name":"EReal.top_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L288-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.zero_ne_top\"><span class=\"name\">EReal</span>.<span class=\"name\">zero_ne_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.zero_ne_top","kind":"theorem","line":284,"name":"EReal.zero_ne_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L284-L286"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.zero_lt_top\"><span class=\"name\">EReal</span>.<span class=\"name\">zero_lt_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.zero_lt_top","kind":"theorem","line":280,"name":"EReal.zero_lt_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L280-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.zero_ne_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">zero_ne_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.zero_ne_bot","kind":"theorem","line":276,"name":"EReal.zero_ne_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L276-L278"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.bot_ne_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">bot_ne_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.bot_ne_zero","kind":"theorem","line":272,"name":"EReal.bot_ne_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L272-L274"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.bot_lt_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">bot_lt_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.bot_lt_zero","kind":"theorem","line":268,"name":"EReal.bot_lt_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L268-L270"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.top_ne_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">top_ne_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.top_ne_coe","kind":"theorem","line":264,"name":"EReal.top_ne_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L264-L266"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_top\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ne_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_top","kind":"theorem","line":260,"name":"EReal.coe_ne_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L260-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_lt_top\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_lt_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_lt_top","kind":"theorem","line":256,"name":"EReal.coe_lt_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L256-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.bot_ne_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">bot_ne_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.bot_ne_coe","kind":"theorem","line":252,"name":"EReal.bot_ne_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L252-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ne_bot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_bot","kind":"theorem","line":248,"name":"EReal.coe_ne_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L248-L250"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.bot_lt_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">bot_lt_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.bot_lt_coe","kind":"theorem","line":244,"name":"EReal.bot_lt_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L244-L246"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_coe","kind":"theorem","line":240,"name":"EReal.toReal_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L240-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_one\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_one","kind":"theorem","line":236,"name":"EReal.toReal_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L236-L238"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_zero","kind":"theorem","line":232,"name":"EReal.toReal_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L232-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_bot","kind":"theorem","line":228,"name":"EReal.toReal_bot","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L228-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal_top\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.<a href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal_top","kind":"theorem","line":224,"name":"EReal.toReal_top","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L224-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">toReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>","info":{"doc":"The map from extended reals to reals sending infinities to zero. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.toReal","kind":"def","line":218,"name":"EReal.toReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L218-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.canLift\"><span class=\"name\">EReal</span>.<span class=\"name\">canLift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>) =&gt; <span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.canLift","kind":"instance","line":211,"name":"EReal.canLift","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L211-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.instMulZeroOneClass\"><span class=\"name\">EReal</span>.<span class=\"name\">instMulZeroOneClass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MulZeroOneClass\">MulZeroOneClass</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.instMulZeroOneClass","kind":"instance","line":203,"name":"EReal.instMulZeroOneClass","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L203-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.zero_mul\"><span class=\"name\">EReal</span>.<span class=\"name\">zero_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.zero_mul","kind":"theorem","line":198,"name":"EReal.zero_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L198-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.one_mul\"><span class=\"name\">EReal</span>.<span class=\"name\">one_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.one_mul","kind":"theorem","line":193,"name":"EReal.one_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L193-L196"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.mul_comm\"><span class=\"name\">EReal</span>.<span class=\"name\">mul_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.mul_comm","kind":"theorem","line":188,"name":"EReal.mul_comm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L188-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.induction₂_symm\"><span class=\"name\">EReal</span>.<span class=\"name\">induction₂_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">symm</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_top</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_pos</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_zero</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_neg</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_bot</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos_bot</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coe_coe</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero_bot</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">neg_bot</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_bot</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"Induct on two `EReal`s by performing case splits on the sign of one whenever the other is\ninfinite. This version eliminates some cases by assuming that the relation is symmetric. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.induction₂_symm","kind":"theorem","line":176,"name":"EReal.induction₂_symm","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L176-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.induction₂\"><span class=\"name\">EReal</span>.<span class=\"name\">induction₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_top</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_pos</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_zero</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_neg</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top_bot</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos_top</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos_bot</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero_top</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coe_coe</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zero_bot</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">neg_top</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">neg_bot</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_top</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_pos</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span> → <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_zero</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_neg</span> : <span class=\"fn\">∀ <span class=\"fn\">x</span> &lt; <span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot_bot</span> : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"Induct on two `EReal`s by performing case splits on the sign of one whenever the other is\ninfinite. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.induction₂","kind":"theorem","line":149,"name":"EReal.induction₂","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L149-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_mul\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_mul","kind":"theorem","line":145,"name":"EReal.coe_mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L145-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.instMul\"><span class=\"name\">EReal</span>.<span class=\"name\">instMul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.instMul","kind":"instance","line":143,"name":"EReal.instMul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L143-L143"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.mul\"><span class=\"name\">EReal</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"The multiplication on `EReal`. Our definition satisfies `0 * x = x * 0 = 0` for any `x`, and\npicks the only sensible value elsewhere. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.mul","kind":"def","line":130,"name":"EReal.mul","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L130-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.exists\"><span class=\"name\">EReal</span>.<span class=\"name\">exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">r</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.exists","kind":"theorem","line":126,"name":"EReal.exists","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L126-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.forall\"><span class=\"name\">EReal</span>.<span class=\"name\">forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∀ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">r</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.forall","kind":"theorem","line":122,"name":"EReal.forall","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L122-L124"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.rec\"><span class=\"name\">EReal</span>.<span class=\"name\">rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bot</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coe</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">top</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"A recursor for `EReal` in terms of the coercion.\n\nWhen working in term mode, note that pattern matching can be used directly. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.rec","kind":"def","line":112,"name":"EReal.rec","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L112-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_one\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_one","kind":"theorem","line":109,"name":"EReal.coe_one","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L109-L110"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_zero\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_zero","kind":"theorem","line":106,"name":"EReal.coe_zero","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L106-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.instInhabited\"><span class=\"name\">EReal</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.instInhabited","kind":"instance","line":104,"name":"EReal.instInhabited","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L104-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.hasCoeENNReal\"><span class=\"name\">EReal</span>.<span class=\"name\">hasCoeENNReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.hasCoeENNReal","kind":"instance","line":101,"name":"EReal.hasCoeENNReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L101-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#ENNReal.toEReal\"><span class=\"name\">ENNReal</span>.<span class=\"name\">toEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a> → <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"The canonical map from nonnegative extended reals to extended reals. ","docLink":"./Mathlib/Data/EReal/Basic.html#ENNReal.toEReal","kind":"def","line":96,"name":"ENNReal.toEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L96-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_natCast\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_natCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_natCast","kind":"theorem","line":93,"name":"EReal.coe_natCast","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L93-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_coe_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_ne_coe_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_ne_coe_iff","kind":"theorem","line":90,"name":"EReal.coe_ne_coe_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L90-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_eq_coe_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_eq_coe_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_eq_coe_iff","kind":"theorem","line":86,"name":"EReal.coe_eq_coe_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L86-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_lt_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_lt_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span> → <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `EReal.coe_lt_coe_iff`.","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_lt_coe","kind":"theorem","line":84,"name":"EReal.coe_lt_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L84-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_lt_coe_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_lt_coe_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_lt_coe_iff","kind":"theorem","line":80,"name":"EReal.coe_lt_coe_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_le_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_le_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span> → <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></div></div>","info":{"doc":"**Alias** of the reverse direction of `EReal.coe_le_coe_iff`.","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_le_coe","kind":"theorem","line":78,"name":"EReal.coe_le_coe","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_le_coe_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_le_coe_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_le_coe_iff","kind":"theorem","line":74,"name":"EReal.coe_le_coe_iff","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L74-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_injective\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_injective","kind":"theorem","line":71,"name":"EReal.coe_injective","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L71-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.coe_strictMono\"><span class=\"name\">EReal</span>.<span class=\"name\">coe_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\">Real.toEReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.coe_strictMono","kind":"theorem","line":68,"name":"EReal.coe_strictMono","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L68-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.instCoeReal\"><span class=\"name\">EReal</span>.<span class=\"name\">instCoeReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.instCoeReal","kind":"instance","line":66,"name":"EReal.instCoeReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.instTop\"><span class=\"name\">EReal</span>.<span class=\"name\">instTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top\">Top</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.instTop","kind":"instance","line":64,"name":"EReal.instTop","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal.decidableLT\"><span class=\"name\">EReal</span>.<span class=\"name\">decidableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableLT\">DecidableLT</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#EReal.decidableLT","kind":"instance","line":60,"name":"EReal.decidableLT","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#Real.toEReal\"><span class=\"name\">Real</span>.<span class=\"name\">toEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"The canonical inclusion from reals to ereals. Registered as a coercion. ","docLink":"./Mathlib/Data/EReal/Basic.html#Real.toEReal","kind":"def","line":54,"name":"Real.toEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L54-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instCharZeroEReal\"><span class=\"name\">instCharZeroEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instCharZeroEReal","kind":"instance","line":52,"name":"instCharZeroEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instDenselyOrderedEReal\"><span class=\"name\">instDenselyOrderedEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Basic.html#DenselyOrdered\">DenselyOrdered</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instDenselyOrderedEReal","kind":"instance","line":49,"name":"instDenselyOrderedEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instAddCommMonoidWithOneEReal\"><span class=\"name\">instAddCommMonoidWithOneEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne\">AddCommMonoidWithOne</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instAddCommMonoidWithOneEReal","kind":"instance","line":46,"name":"instAddCommMonoidWithOneEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L46-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instIsOrderedAddMonoidEReal\"><span class=\"name\">instIsOrderedAddMonoidEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Monoid/Defs.html#IsOrderedAddMonoid\">IsOrderedAddMonoid</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instIsOrderedAddMonoidEReal","kind":"instance","line":43,"name":"instIsOrderedAddMonoidEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instLinearOrderEReal\"><span class=\"name\">instLinearOrderEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instLinearOrderEReal","kind":"instance","line":40,"name":"instLinearOrderEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instCompleteLinearOrderEReal\"><span class=\"name\">instCompleteLinearOrderEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLinearOrder\">CompleteLinearOrder</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instCompleteLinearOrderEReal","kind":"instance","line":37,"name":"instCompleteLinearOrderEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instInfSetEReal\"><span class=\"name\">instInfSetEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#InfSet\">InfSet</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instInfSetEReal","kind":"instance","line":35,"name":"instInfSetEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instSupSetEReal\"><span class=\"name\">instSupSetEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#SupSet\">SupSet</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instSupSetEReal","kind":"instance","line":34,"name":"instSupSetEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instZeroLEOneClassEReal\"><span class=\"name\">instZeroLEOneClassEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/ZeroLEOne.html#ZeroLEOneClass\">ZeroLEOneClass</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instZeroLEOneClassEReal","kind":"instance","line":33,"name":"instZeroLEOneClassEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instAddCommMonoidEReal\"><span class=\"name\">instAddCommMonoidEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instAddCommMonoidEReal","kind":"instance","line":31,"name":"instAddCommMonoidEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instPartialOrderEReal\"><span class=\"name\">instPartialOrderEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instPartialOrderEReal","kind":"instance","line":31,"name":"instPartialOrderEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instAddMonoidEReal\"><span class=\"name\">instAddMonoidEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instAddMonoidEReal","kind":"instance","line":31,"name":"instAddMonoidEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instNontrivialEReal\"><span class=\"name\">instNontrivialEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instNontrivialEReal","kind":"instance","line":31,"name":"instNontrivialEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instOneEReal\"><span class=\"name\">instOneEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#One\">One</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instOneEReal","kind":"instance","line":31,"name":"instOneEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instZeroEReal\"><span class=\"name\">instZeroEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instZeroEReal","kind":"instance","line":31,"name":"instZeroEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#instBotEReal\"><span class=\"name\">instBotEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot\">Bot</a> <a href=\"./Mathlib/Data/EReal/Basic.html#EReal\">EReal</a></span></div></div>","info":{"doc":"","docLink":"./Mathlib/Data/EReal/Basic.html#instBotEReal","kind":"instance","line":31,"name":"instBotEReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/EReal/Basic.html#EReal\"><span class=\"name\">EReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The type of extended real numbers `[-∞, ∞]`, constructed as `WithBot (WithTop ℝ)`. ","docLink":"./Mathlib/Data/EReal/Basic.html#EReal","kind":"def","line":29,"name":"EReal","sourceLink":"https://github.com/leanprover-community/mathlib4/blob/a43dd5b1315afdbfd01ad27674f1c37e7ce763e6/Mathlib/Data/EReal/Basic.lean#L29-L31"}}],"imports":["Init","Mathlib.Data.ENNReal.Operations"],"instances":[{"className":"Bot","name":"instBotEReal","typeNames":["EReal"]},{"className":"Zero","name":"instZeroEReal","typeNames":["EReal"]},{"className":"One","name":"instOneEReal","typeNames":["EReal"]},{"className":"Nontrivial","name":"instNontrivialEReal","typeNames":["EReal"]},{"className":"AddMonoid","name":"instAddMonoidEReal","typeNames":["EReal"]},{"className":"PartialOrder","name":"instPartialOrderEReal","typeNames":["EReal"]},{"className":"AddCommMonoid","name":"instAddCommMonoidEReal","typeNames":["EReal"]},{"className":"ZeroLEOneClass","name":"instZeroLEOneClassEReal","typeNames":["EReal"]},{"className":"SupSet","name":"instSupSetEReal","typeNames":["EReal"]},{"className":"InfSet","name":"instInfSetEReal","typeNames":["EReal"]},{"className":"CompleteLinearOrder","name":"instCompleteLinearOrderEReal","typeNames":["EReal"]},{"className":"LinearOrder","name":"instLinearOrderEReal","typeNames":["EReal"]},{"className":"IsOrderedAddMonoid","name":"instIsOrderedAddMonoidEReal","typeNames":["EReal"]},{"className":"AddCommMonoidWithOne","name":"instAddCommMonoidWithOneEReal","typeNames":["EReal"]},{"className":"DenselyOrdered","name":"instDenselyOrderedEReal","typeNames":["EReal"]},{"className":"CharZero","name":"instCharZeroEReal","typeNames":["EReal"]},{"className":"Decidable","name":"EReal.decidableLT","typeNames":["LT.lt"]},{"className":"Top","name":"EReal.instTop","typeNames":["EReal"]},{"className":"Coe","name":"EReal.instCoeReal","typeNames":["Real","EReal"]},{"className":"Coe","name":"EReal.hasCoeENNReal","typeNames":["ENNReal","EReal"]},{"className":"Inhabited","name":"EReal.instInhabited","typeNames":["EReal"]},{"className":"Mul","name":"EReal.instMul","typeNames":["EReal"]},{"className":"MulZeroOneClass","name":"EReal.instMulZeroOneClass","typeNames":["EReal"]},{"className":"CanLift","name":"EReal.canLift","typeNames":["EReal","Real","Real.toEReal"]},{"className":"CanLift","name":"EReal.instCanLiftENNRealToERealLeOfNat","typeNames":["EReal","ENNReal","ENNReal.toEReal"]}],"name":"Mathlib.Data.EReal.Basic"}